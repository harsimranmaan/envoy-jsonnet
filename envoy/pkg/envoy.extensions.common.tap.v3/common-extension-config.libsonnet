// Message type: envoy.extensions.common.tap.v3.CommonExtensionConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.common.tap.v3.CommonExtensionConfig';
local generator = import '../generator.libsonnet';
local fields = {
  admin_config: {
    type: 'envoy.extensions.common.tap.v3.AdminConfig',
    allowedNames: [
      'admin_config',
      'adminConfig',
    ],
  },
  static_config: {
    type: 'envoy.config.tap.v3.TapConfig',
    allowedNames: [
      'static_config',
      'staticConfig',
    ],
  },
};
local oneOfs = [
  {
    fields: [
      'admin_config',
      'static_config',
    ],
    required: true,
    group: 'config_type',
  },
];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withAdminConfig:: function(val) validator.validateField(self + { admin_config: val }, 'admin_config', type + '.withAdminConfig'),
    withStaticConfig:: function(val) validator.validateField(self + { static_config: val }, 'static_config', type + '.withStaticConfig'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
