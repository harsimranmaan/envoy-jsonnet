// Message type: envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier';
local generator = import '../generator.libsonnet';
local fields = {
  exact_match: {
    type: 'string',
    allowedNames: [
      'exact_match',
      'exactMatch',
    ],
  },
  range_match: {
    type: 'envoy.type.v3.Int64Range',
    allowedNames: [
      'range_match',
      'rangeMatch',
    ],
  },
};
local oneOfs = [
  {
    fields: [
      'exact_match',
      'range_match',
    ],
    required: false,
    group: 'parameter_match_specifier',
  },
];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withExactMatch:: function(val) validator.validateField(self + { exact_match: val }, 'exact_match', type + '.withExactMatch'),
    withRangeMatch:: function(val) validator.validateField(self + { range_match: val }, 'range_match', type + '.withRangeMatch'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
