// Message type: envoy.extensions.transport_sockets.tcp_stats.v3.Config
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.transport_sockets.tcp_stats.v3.Config';
local generator = import '../generator.libsonnet';
local fields = {
  transport_socket: {
    type: 'envoy.config.core.v3.TransportSocket',
    allowedNames: [
      'transport_socket',
      'transportSocket',
    ],
    required: true,
  },
  update_period: {
    type: 'google.protobuf.Duration',
    allowedNames: [
      'update_period',
      'updatePeriod',
    ],
    constraints: {
      Duration: {
        gte: {
          nanos: 1000000,
        },
      },
    },
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withTransportSocket:: function(val) validator.validateField(self + { transport_socket: val }, 'transport_socket', type + '.withTransportSocket'),
    withUpdatePeriod:: function(val) validator.validateField(self + { update_period: val }, 'update_period', type + '.withUpdatePeriod'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
