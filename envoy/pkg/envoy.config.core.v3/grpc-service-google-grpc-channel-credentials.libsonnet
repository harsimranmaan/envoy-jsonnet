// Message type: envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelCredentials
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelCredentials';
local generator = import '../generator.libsonnet';
local fields = {
  google_default: {
    type: 'google.protobuf.Empty',
    allowedNames: [
      'google_default',
      'googleDefault',
    ],
  },
  local_credentials: {
    type: 'envoy.config.core.v3.GrpcService.GoogleGrpc.GoogleLocalCredentials',
    allowedNames: [
      'local_credentials',
      'localCredentials',
    ],
  },
  ssl_credentials: {
    type: 'envoy.config.core.v3.GrpcService.GoogleGrpc.SslCredentials',
    allowedNames: [
      'ssl_credentials',
      'sslCredentials',
    ],
  },
};
local oneOfs = [
  {
    fields: [
      'ssl_credentials',
      'google_default',
      'local_credentials',
    ],
    required: true,
    group: 'credential_specifier',
  },
];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withGoogleDefault:: function(val) validator.validateField(self + { google_default: val }, 'google_default', type + '.withGoogleDefault'),
    withLocalCredentials:: function(val) validator.validateField(self + { local_credentials: val }, 'local_credentials', type + '.withLocalCredentials'),
    withSslCredentials:: function(val) validator.validateField(self + { ssl_credentials: val }, 'ssl_credentials', type + '.withSslCredentials'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
