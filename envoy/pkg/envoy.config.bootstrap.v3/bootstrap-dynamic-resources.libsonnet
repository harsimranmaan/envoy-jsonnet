// Message type: envoy.config.bootstrap.v3.Bootstrap.DynamicResources
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.bootstrap.v3.Bootstrap.DynamicResources';
local generator = import '../generator.libsonnet';
local fields = {
  ads_config: {
    type: 'envoy.config.core.v3.ApiConfigSource',
    allowedNames: [
      'ads_config',
      'adsConfig',
    ],
  },
  cds_config: {
    type: 'envoy.config.core.v3.ConfigSource',
    allowedNames: [
      'cds_config',
      'cdsConfig',
    ],
  },
  cds_resources_locator: {
    type: 'string',
    allowedNames: [
      'cds_resources_locator',
      'cdsResourcesLocator',
    ],
  },
  lds_config: {
    type: 'envoy.config.core.v3.ConfigSource',
    allowedNames: [
      'lds_config',
      'ldsConfig',
    ],
  },
  lds_resources_locator: {
    type: 'string',
    allowedNames: [
      'lds_resources_locator',
      'ldsResourcesLocator',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withAdsConfig:: function(val) validator.validateField(self + { ads_config: val }, 'ads_config', type + '.withAdsConfig'),
    withCdsConfig:: function(val) validator.validateField(self + { cds_config: val }, 'cds_config', type + '.withCdsConfig'),
    withCdsResourcesLocator:: function(val) validator.validateField(self + { cds_resources_locator: val }, 'cds_resources_locator', type + '.withCdsResourcesLocator'),
    withLdsConfig:: function(val) validator.validateField(self + { lds_config: val }, 'lds_config', type + '.withLdsConfig'),
    withLdsResourcesLocator:: function(val) validator.validateField(self + { lds_resources_locator: val }, 'lds_resources_locator', type + '.withLdsResourcesLocator'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
