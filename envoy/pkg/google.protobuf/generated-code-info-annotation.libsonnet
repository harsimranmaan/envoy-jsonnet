// Message type: google.protobuf.GeneratedCodeInfo.Annotation
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'google.protobuf.GeneratedCodeInfo.Annotation';
local generator = import '../generator.libsonnet';
local fields = {
  begin: {
    type: 'int32',
    allowedNames: [
      'begin',
    ],
  },
  end: {
    type: 'int32',
    allowedNames: [
      'end',
    ],
  },
  path: {
    type: 'int32',
    allowedNames: [
      'path',
    ],
    containerType: 'list',
  },
  source_file: {
    type: 'string',
    allowedNames: [
      'source_file',
      'sourceFile',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withBegin:: function(val) validator.validateField(self + { begin: val }, 'begin', type + '.withBegin'),
    withEnd:: function(val) validator.validateField(self + { end: val }, 'end', type + '.withEnd'),
    withPath:: function(val) validator.validateField(self + { path: val }, 'path', type + '.withPath'),
    withSourceFile:: function(val) validator.validateField(self + { source_file: val }, 'source_file', type + '.withSourceFile'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
