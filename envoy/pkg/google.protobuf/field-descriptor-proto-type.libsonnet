// Enum type: google.protobuf.FieldDescriptorProto.Type
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.
local type = 'google.protobuf.FieldDescriptorProto.Type';
local map = {
  TYPE_BOOL: 'TYPE_BOOL',
  TYPE_BYTES: 'TYPE_BYTES',
  TYPE_DOUBLE: 'TYPE_DOUBLE',
  TYPE_ENUM: 'TYPE_ENUM',
  TYPE_FIXED32: 'TYPE_FIXED32',
  TYPE_FIXED64: 'TYPE_FIXED64',
  TYPE_FLOAT: 'TYPE_FLOAT',
  TYPE_GROUP: 'TYPE_GROUP',
  TYPE_INT32: 'TYPE_INT32',
  TYPE_INT64: 'TYPE_INT64',
  TYPE_MESSAGE: 'TYPE_MESSAGE',
  TYPE_SFIXED32: 'TYPE_SFIXED32',
  TYPE_SFIXED64: 'TYPE_SFIXED64',
  TYPE_SINT32: 'TYPE_SINT32',
  TYPE_SINT64: 'TYPE_SINT64',
  TYPE_STRING: 'TYPE_STRING',
  TYPE_UINT32: 'TYPE_UINT32',
  TYPE_UINT64: 'TYPE_UINT64',
};

local reverseMap = {
  '1': 'TYPE_DOUBLE',
  '10': 'TYPE_GROUP',
  '11': 'TYPE_MESSAGE',
  '12': 'TYPE_BYTES',
  '13': 'TYPE_UINT32',
  '14': 'TYPE_ENUM',
  '15': 'TYPE_SFIXED32',
  '16': 'TYPE_SFIXED64',
  '17': 'TYPE_SINT32',
  '18': 'TYPE_SINT64',
  '2': 'TYPE_FLOAT',
  '3': 'TYPE_INT64',
  '4': 'TYPE_UINT64',
  '5': 'TYPE_INT32',
  '6': 'TYPE_FIXED64',
  '7': 'TYPE_FIXED32',
  '8': 'TYPE_BOOL',
  '9': 'TYPE_STRING',
};

local validator = function(input, ctx='') (
  local context = if ctx == '' then type else ctx;
  local v = std.toString(input);
  if std.objectHas(map, v) || std.objectHas(reverseMap, v)
  then input
  else error '%s: invalid value %s for enum %s' % [context, v, type]
);

{
  definition: map {
    _new:: function(obj={}) error '%s: the _new method may not be used on enum types' % 'google.protobuf.FieldDescriptorProto.Type',
    _validate:: validator,
  },
  validator:: validator,
}
