// Message type: google.protobuf.UninterpretedOption.NamePart
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'google.protobuf.UninterpretedOption.NamePart';
local generator = import '../generator.libsonnet';
local fields = {
  is_extension: {
    type: 'bool',
    allowedNames: [
      'is_extension',
      'isExtension',
    ],
  },
  name_part: {
    type: 'string',
    allowedNames: [
      'name_part',
      'namePart',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withIsExtension:: function(val) validator.validateField(self + { is_extension: val }, 'is_extension', type + '.withIsExtension'),
    withNamePart:: function(val) validator.validateField(self + { name_part: val }, 'name_part', type + '.withNamePart'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
