// Message type: envoy.extensions.filters.http.ext_authz.v3.CheckSettings
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.filters.http.ext_authz.v3.CheckSettings';
local generator = import '../generator.libsonnet';
local fields = {
  context_extensions: {
    type: 'string',
    allowedNames: [
      'context_extensions',
      'contextExtensions',
    ],
    containerType: 'map',
  },
  disable_request_body_buffering: {
    type: 'bool',
    allowedNames: [
      'disable_request_body_buffering',
      'disableRequestBodyBuffering',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {
    ContextExtensionsEntry:: (import 'check-settings-context-extensions-entry.libsonnet').definition,

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withContextExtensions:: function(val) validator.validateField(self + { context_extensions: val }, 'context_extensions', type + '.withContextExtensions'),
    withDisableRequestBodyBuffering:: function(val) validator.validateField(self + { disable_request_body_buffering: val }, 'disable_request_body_buffering', type + '.withDisableRequestBodyBuffering'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
