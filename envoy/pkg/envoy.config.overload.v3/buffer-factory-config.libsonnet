// Message type: envoy.config.overload.v3.BufferFactoryConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.overload.v3.BufferFactoryConfig';
local generator = import '../generator.libsonnet';
local fields = {
  minimum_account_to_track_power_of_two: {
    type: 'uint32',
    allowedNames: [
      'minimum_account_to_track_power_of_two',
      'minimumAccountToTrackPowerOfTwo',
    ],
    constraints: {
      Uint32: {
        gte: 10,
        lte: 56,
      },
    },
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withMinimumAccountToTrackPowerOfTwo:: function(val) validator.validateField(self + { minimum_account_to_track_power_of_two: val }, 'minimum_account_to_track_power_of_two', type + '.withMinimumAccountToTrackPowerOfTwo'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
