// Message type: envoy.config.common.mutation_rules.v3.HeaderMutation
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.common.mutation_rules.v3.HeaderMutation';
local generator = import '../generator.libsonnet';
local fields = {
  append: {
    type: 'envoy.config.core.v3.HeaderValueOption',
    allowedNames: [
      'append',
    ],
  },
  remove: {
    type: 'string',
    allowedNames: [
      'remove',
    ],
    constraints: {
      String_: {
        WellKnown: {
          WellKnownRegex: 2,
        },
        strict: false,
      },
    },
  },
};
local oneOfs = [
  {
    fields: [
      'remove',
      'append',
    ],
    required: true,
    group: 'action',
  },
];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withAppend:: function(val) validator.validateField(self + { append: val }, 'append', type + '.withAppend'),
    withRemove:: function(val) validator.validateField(self + { remove: val }, 'remove', type + '.withRemove'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
