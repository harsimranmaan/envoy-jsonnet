// Message type: envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig';
local generator = import '../generator.libsonnet';
local fields = {
  max_heap_size_bytes: {
    type: 'uint64',
    allowedNames: [
      'max_heap_size_bytes',
      'maxHeapSizeBytes',
    ],
    constraints: {
      Uint64: {
        gt: 0,
      },
    },
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withMaxHeapSizeBytes:: function(val) validator.validateField(self + { max_heap_size_bytes: val }, 'max_heap_size_bytes', type + '.withMaxHeapSizeBytes'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
