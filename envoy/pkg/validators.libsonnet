{
  'envoy.config.accesslog.v3.AccessLog': (import 'envoy.config.accesslog.v3/access-log.libsonnet'),
  'envoy.config.accesslog.v3.AccessLogFilter': (import 'envoy.config.accesslog.v3/access-log-filter.libsonnet'),
  'envoy.config.accesslog.v3.AndFilter': (import 'envoy.config.accesslog.v3/and-filter.libsonnet'),
  'envoy.config.accesslog.v3.ComparisonFilter': (import 'envoy.config.accesslog.v3/comparison-filter.libsonnet'),
  'envoy.config.accesslog.v3.ComparisonFilter.Op': (import 'envoy.config.accesslog.v3/comparison-filter-op.libsonnet'),
  'envoy.config.accesslog.v3.DurationFilter': (import 'envoy.config.accesslog.v3/duration-filter.libsonnet'),
  'envoy.config.accesslog.v3.ExtensionFilter': (import 'envoy.config.accesslog.v3/extension-filter.libsonnet'),
  'envoy.config.accesslog.v3.GrpcStatusFilter': (import 'envoy.config.accesslog.v3/grpc-status-filter.libsonnet'),
  'envoy.config.accesslog.v3.GrpcStatusFilter.Status': (import 'envoy.config.accesslog.v3/grpc-status-filter-status.libsonnet'),
  'envoy.config.accesslog.v3.HeaderFilter': (import 'envoy.config.accesslog.v3/header-filter.libsonnet'),
  'envoy.config.accesslog.v3.MetadataFilter': (import 'envoy.config.accesslog.v3/metadata-filter.libsonnet'),
  'envoy.config.accesslog.v3.NotHealthCheckFilter': (import 'envoy.config.accesslog.v3/not-health-check-filter.libsonnet'),
  'envoy.config.accesslog.v3.OrFilter': (import 'envoy.config.accesslog.v3/or-filter.libsonnet'),
  'envoy.config.accesslog.v3.ResponseFlagFilter': (import 'envoy.config.accesslog.v3/response-flag-filter.libsonnet'),
  'envoy.config.accesslog.v3.RuntimeFilter': (import 'envoy.config.accesslog.v3/runtime-filter.libsonnet'),
  'envoy.config.accesslog.v3.StatusCodeFilter': (import 'envoy.config.accesslog.v3/status-code-filter.libsonnet'),
  'envoy.config.accesslog.v3.TraceableFilter': (import 'envoy.config.accesslog.v3/traceable-filter.libsonnet'),
  'envoy.config.bootstrap.v3.Admin': (import 'envoy.config.bootstrap.v3/admin.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap': (import 'envoy.config.bootstrap.v3/bootstrap.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap.CertificateProviderInstancesEntry': (import 'envoy.config.bootstrap.v3/bootstrap-certificate-provider-instances-entry.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap.DynamicResources': (import 'envoy.config.bootstrap.v3/bootstrap-dynamic-resources.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap.StaticResources': (import 'envoy.config.bootstrap.v3/bootstrap-static-resources.libsonnet'),
  'envoy.config.bootstrap.v3.ClusterManager': (import 'envoy.config.bootstrap.v3/cluster-manager.libsonnet'),
  'envoy.config.bootstrap.v3.ClusterManager.OutlierDetection': (import 'envoy.config.bootstrap.v3/cluster-manager-outlier-detection.libsonnet'),
  'envoy.config.bootstrap.v3.CustomInlineHeader': (import 'envoy.config.bootstrap.v3/custom-inline-header.libsonnet'),
  'envoy.config.bootstrap.v3.CustomInlineHeader.InlineHeaderType': (import 'envoy.config.bootstrap.v3/custom-inline-header-inline-header-type.libsonnet'),
  'envoy.config.bootstrap.v3.FatalAction': (import 'envoy.config.bootstrap.v3/fatal-action.libsonnet'),
  'envoy.config.bootstrap.v3.LayeredRuntime': (import 'envoy.config.bootstrap.v3/layered-runtime.libsonnet'),
  'envoy.config.bootstrap.v3.Runtime': (import 'envoy.config.bootstrap.v3/runtime.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer': (import 'envoy.config.bootstrap.v3/runtime-layer.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer.AdminLayer': (import 'envoy.config.bootstrap.v3/runtime-layer-admin-layer.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer.DiskLayer': (import 'envoy.config.bootstrap.v3/runtime-layer-disk-layer.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer.RtdsLayer': (import 'envoy.config.bootstrap.v3/runtime-layer-rtds-layer.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdog': (import 'envoy.config.bootstrap.v3/watchdog.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdog.WatchdogAction': (import 'envoy.config.bootstrap.v3/watchdog-watchdog-action.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdog.WatchdogAction.WatchdogEvent': (import 'envoy.config.bootstrap.v3/watchdog-watchdog-action-watchdog-event.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdogs': (import 'envoy.config.bootstrap.v3/watchdogs.libsonnet'),
  'envoy.config.cluster.v3.CircuitBreakers': (import 'envoy.config.cluster.v3/circuit-breakers.libsonnet'),
  'envoy.config.cluster.v3.CircuitBreakers.Thresholds': (import 'envoy.config.cluster.v3/circuit-breakers-thresholds.libsonnet'),
  'envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget': (import 'envoy.config.cluster.v3/circuit-breakers-thresholds-retry-budget.libsonnet'),
  'envoy.config.cluster.v3.Cluster': (import 'envoy.config.cluster.v3/cluster.libsonnet'),
  'envoy.config.cluster.v3.Cluster.ClusterProtocolSelection': (import 'envoy.config.cluster.v3/cluster-cluster-protocol-selection.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig.ConsistentHashingLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config-consistent-hashing-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig.LocalityWeightedLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config-locality-weighted-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig.ZoneAwareLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config-zone-aware-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CustomClusterType': (import 'envoy.config.cluster.v3/cluster-custom-cluster-type.libsonnet'),
  'envoy.config.cluster.v3.Cluster.DiscoveryType': (import 'envoy.config.cluster.v3/cluster-discovery-type.libsonnet'),
  'envoy.config.cluster.v3.Cluster.DnsLookupFamily': (import 'envoy.config.cluster.v3/cluster-dns-lookup-family.libsonnet'),
  'envoy.config.cluster.v3.Cluster.EdsClusterConfig': (import 'envoy.config.cluster.v3/cluster-eds-cluster-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbPolicy': (import 'envoy.config.cluster.v3/cluster-lb-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig': (import 'envoy.config.cluster.v3/cluster-lb-subset-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetFallbackPolicy': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-fallback-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetMetadataFallbackPolicy': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-metadata-fallback-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetSelector': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-selector.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetSelector.LbSubsetSelectorFallbackPolicy': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-selector-lb-subset-selector-fallback-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LeastRequestLbConfig': (import 'envoy.config.cluster.v3/cluster-least-request-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.MaglevLbConfig': (import 'envoy.config.cluster.v3/cluster-maglev-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.OriginalDstLbConfig': (import 'envoy.config.cluster.v3/cluster-original-dst-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.PreconnectPolicy': (import 'envoy.config.cluster.v3/cluster-preconnect-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RefreshRate': (import 'envoy.config.cluster.v3/cluster-refresh-rate.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RingHashLbConfig': (import 'envoy.config.cluster.v3/cluster-ring-hash-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RingHashLbConfig.HashFunction': (import 'envoy.config.cluster.v3/cluster-ring-hash-lb-config-hash-function.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RoundRobinLbConfig': (import 'envoy.config.cluster.v3/cluster-round-robin-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.SlowStartConfig': (import 'envoy.config.cluster.v3/cluster-slow-start-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.TransportSocketMatch': (import 'envoy.config.cluster.v3/cluster-transport-socket-match.libsonnet'),
  'envoy.config.cluster.v3.Cluster.TypedExtensionProtocolOptionsEntry': (import 'envoy.config.cluster.v3/cluster-typed-extension-protocol-options-entry.libsonnet'),
  'envoy.config.cluster.v3.ClusterCollection': (import 'envoy.config.cluster.v3/cluster-collection.libsonnet'),
  'envoy.config.cluster.v3.Filter': (import 'envoy.config.cluster.v3/filter.libsonnet'),
  'envoy.config.cluster.v3.LoadBalancingPolicy': (import 'envoy.config.cluster.v3/load-balancing-policy.libsonnet'),
  'envoy.config.cluster.v3.LoadBalancingPolicy.Policy': (import 'envoy.config.cluster.v3/load-balancing-policy-policy.libsonnet'),
  'envoy.config.cluster.v3.OutlierDetection': (import 'envoy.config.cluster.v3/outlier-detection.libsonnet'),
  'envoy.config.cluster.v3.TrackClusterStats': (import 'envoy.config.cluster.v3/track-cluster-stats.libsonnet'),
  'envoy.config.cluster.v3.UpstreamConnectionOptions': (import 'envoy.config.cluster.v3/upstream-connection-options.libsonnet'),
  'envoy.config.common.key_value.v3.KeyValueStoreConfig': (import 'envoy.config.common.key_value.v3/key-value-store-config.libsonnet'),
  'envoy.config.common.matcher.v3.HttpGenericBodyMatch': (import 'envoy.config.common.matcher.v3/http-generic-body-match.libsonnet'),
  'envoy.config.common.matcher.v3.HttpGenericBodyMatch.GenericTextMatch': (import 'envoy.config.common.matcher.v3/http-generic-body-match-generic-text-match.libsonnet'),
  'envoy.config.common.matcher.v3.HttpHeadersMatch': (import 'envoy.config.common.matcher.v3/http-headers-match.libsonnet'),
  'envoy.config.common.matcher.v3.MatchPredicate': (import 'envoy.config.common.matcher.v3/match-predicate.libsonnet'),
  'envoy.config.common.matcher.v3.MatchPredicate.MatchSet': (import 'envoy.config.common.matcher.v3/match-predicate-match-set.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher': (import 'envoy.config.common.matcher.v3/matcher.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherList': (import 'envoy.config.common.matcher.v3/matcher-matcher-list.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherList.FieldMatcher': (import 'envoy.config.common.matcher.v3/matcher-matcher-list-field-matcher.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherList.Predicate': (import 'envoy.config.common.matcher.v3/matcher-matcher-list-predicate.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherList.Predicate.PredicateList': (import 'envoy.config.common.matcher.v3/matcher-matcher-list-predicate-predicate-list.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherList.Predicate.SinglePredicate': (import 'envoy.config.common.matcher.v3/matcher-matcher-list-predicate-single-predicate.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherTree': (import 'envoy.config.common.matcher.v3/matcher-matcher-tree.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherTree.MatchMap': (import 'envoy.config.common.matcher.v3/matcher-matcher-tree-match-map.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.MatcherTree.MatchMap.MapEntry': (import 'envoy.config.common.matcher.v3/matcher-matcher-tree-match-map-map-entry.libsonnet'),
  'envoy.config.common.matcher.v3.Matcher.OnMatch': (import 'envoy.config.common.matcher.v3/matcher-on-match.libsonnet'),
  'envoy.config.common.mutation_rules.v3.HeaderMutation': (import 'envoy.config.common.mutation_rules.v3/header-mutation.libsonnet'),
  'envoy.config.common.mutation_rules.v3.HeaderMutationRules': (import 'envoy.config.common.mutation_rules.v3/header-mutation-rules.libsonnet'),
  'envoy.config.core.v3.Address': (import 'envoy.config.core.v3/address.libsonnet'),
  'envoy.config.core.v3.AggregatedConfigSource': (import 'envoy.config.core.v3/aggregated-config-source.libsonnet'),
  'envoy.config.core.v3.AlternateProtocolsCacheOptions': (import 'envoy.config.core.v3/alternate-protocols-cache-options.libsonnet'),
  'envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry': (import 'envoy.config.core.v3/alternate-protocols-cache-options-alternate-protocols-cache-entry.libsonnet'),
  'envoy.config.core.v3.ApiConfigSource': (import 'envoy.config.core.v3/api-config-source.libsonnet'),
  'envoy.config.core.v3.ApiConfigSource.ApiType': (import 'envoy.config.core.v3/api-config-source-api-type.libsonnet'),
  'envoy.config.core.v3.ApiVersion': (import 'envoy.config.core.v3/api-version.libsonnet'),
  'envoy.config.core.v3.AsyncDataSource': (import 'envoy.config.core.v3/async-data-source.libsonnet'),
  'envoy.config.core.v3.BackoffStrategy': (import 'envoy.config.core.v3/backoff-strategy.libsonnet'),
  'envoy.config.core.v3.BindConfig': (import 'envoy.config.core.v3/bind-config.libsonnet'),
  'envoy.config.core.v3.BuildVersion': (import 'envoy.config.core.v3/build-version.libsonnet'),
  'envoy.config.core.v3.CidrRange': (import 'envoy.config.core.v3/cidr-range.libsonnet'),
  'envoy.config.core.v3.ConfigSource': (import 'envoy.config.core.v3/config-source.libsonnet'),
  'envoy.config.core.v3.ControlPlane': (import 'envoy.config.core.v3/control-plane.libsonnet'),
  'envoy.config.core.v3.DataSource': (import 'envoy.config.core.v3/data-source.libsonnet'),
  'envoy.config.core.v3.DnsResolutionConfig': (import 'envoy.config.core.v3/dns-resolution-config.libsonnet'),
  'envoy.config.core.v3.DnsResolverOptions': (import 'envoy.config.core.v3/dns-resolver-options.libsonnet'),
  'envoy.config.core.v3.EnvoyInternalAddress': (import 'envoy.config.core.v3/envoy-internal-address.libsonnet'),
  'envoy.config.core.v3.EventServiceConfig': (import 'envoy.config.core.v3/event-service-config.libsonnet'),
  'envoy.config.core.v3.Extension': (import 'envoy.config.core.v3/extension.libsonnet'),
  'envoy.config.core.v3.ExtensionConfigSource': (import 'envoy.config.core.v3/extension-config-source.libsonnet'),
  'envoy.config.core.v3.ExtraSourceAddress': (import 'envoy.config.core.v3/extra-source-address.libsonnet'),
  'envoy.config.core.v3.GrpcMethodList': (import 'envoy.config.core.v3/grpc-method-list.libsonnet'),
  'envoy.config.core.v3.GrpcMethodList.Service': (import 'envoy.config.core.v3/grpc-method-list-service.libsonnet'),
  'envoy.config.core.v3.GrpcProtocolOptions': (import 'envoy.config.core.v3/grpc-protocol-options.libsonnet'),
  'envoy.config.core.v3.GrpcService': (import 'envoy.config.core.v3/grpc-service.libsonnet'),
  'envoy.config.core.v3.GrpcService.EnvoyGrpc': (import 'envoy.config.core.v3/grpc-service-envoy-grpc.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc': (import 'envoy.config.core.v3/grpc-service-google-grpc.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-google-iam-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-metadata-credentials-from-plugin.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-service-account-jwt-access-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.StsService': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-sts-service.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelArgs': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-args.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelArgs.ArgsEntry': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-args-args-entry.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelArgs.Value': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-args-value.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.GoogleLocalCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-google-local-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.SslCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-ssl-credentials.libsonnet'),
  'envoy.config.core.v3.HeaderMap': (import 'envoy.config.core.v3/header-map.libsonnet'),
  'envoy.config.core.v3.HeaderValue': (import 'envoy.config.core.v3/header-value.libsonnet'),
  'envoy.config.core.v3.HeaderValueOption': (import 'envoy.config.core.v3/header-value-option.libsonnet'),
  'envoy.config.core.v3.HeaderValueOption.HeaderAppendAction': (import 'envoy.config.core.v3/header-value-option-header-append-action.libsonnet'),
  'envoy.config.core.v3.HealthCheck': (import 'envoy.config.core.v3/health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.CustomHealthCheck': (import 'envoy.config.core.v3/health-check-custom-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.GrpcHealthCheck': (import 'envoy.config.core.v3/health-check-grpc-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.HttpHealthCheck': (import 'envoy.config.core.v3/health-check-http-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.Payload': (import 'envoy.config.core.v3/health-check-payload.libsonnet'),
  'envoy.config.core.v3.HealthCheck.RedisHealthCheck': (import 'envoy.config.core.v3/health-check-redis-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.TcpHealthCheck': (import 'envoy.config.core.v3/health-check-tcp-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.TlsOptions': (import 'envoy.config.core.v3/health-check-tls-options.libsonnet'),
  'envoy.config.core.v3.HealthStatus': (import 'envoy.config.core.v3/health-status.libsonnet'),
  'envoy.config.core.v3.HealthStatusSet': (import 'envoy.config.core.v3/health-status-set.libsonnet'),
  'envoy.config.core.v3.Http1ProtocolOptions': (import 'envoy.config.core.v3/http-1-protocol-options.libsonnet'),
  'envoy.config.core.v3.Http1ProtocolOptions.HeaderKeyFormat': (import 'envoy.config.core.v3/http-1-protocol-options-header-key-format.libsonnet'),
  'envoy.config.core.v3.Http1ProtocolOptions.HeaderKeyFormat.ProperCaseWords': (import 'envoy.config.core.v3/http-1-protocol-options-header-key-format-proper-case-words.libsonnet'),
  'envoy.config.core.v3.Http2ProtocolOptions': (import 'envoy.config.core.v3/http-2-protocol-options.libsonnet'),
  'envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter': (import 'envoy.config.core.v3/http-2-protocol-options-settings-parameter.libsonnet'),
  'envoy.config.core.v3.Http3ProtocolOptions': (import 'envoy.config.core.v3/http-3-protocol-options.libsonnet'),
  'envoy.config.core.v3.HttpProtocolOptions': (import 'envoy.config.core.v3/http-protocol-options.libsonnet'),
  'envoy.config.core.v3.HttpProtocolOptions.HeadersWithUnderscoresAction': (import 'envoy.config.core.v3/http-protocol-options-headers-with-underscores-action.libsonnet'),
  'envoy.config.core.v3.HttpUri': (import 'envoy.config.core.v3/http-uri.libsonnet'),
  'envoy.config.core.v3.KeepaliveSettings': (import 'envoy.config.core.v3/keepalive-settings.libsonnet'),
  'envoy.config.core.v3.Locality': (import 'envoy.config.core.v3/locality.libsonnet'),
  'envoy.config.core.v3.Metadata': (import 'envoy.config.core.v3/metadata.libsonnet'),
  'envoy.config.core.v3.Metadata.FilterMetadataEntry': (import 'envoy.config.core.v3/metadata-filter-metadata-entry.libsonnet'),
  'envoy.config.core.v3.Metadata.TypedFilterMetadataEntry': (import 'envoy.config.core.v3/metadata-typed-filter-metadata-entry.libsonnet'),
  'envoy.config.core.v3.Node': (import 'envoy.config.core.v3/node.libsonnet'),
  'envoy.config.core.v3.Node.DynamicParametersEntry': (import 'envoy.config.core.v3/node-dynamic-parameters-entry.libsonnet'),
  'envoy.config.core.v3.PathConfigSource': (import 'envoy.config.core.v3/path-config-source.libsonnet'),
  'envoy.config.core.v3.Pipe': (import 'envoy.config.core.v3/pipe.libsonnet'),
  'envoy.config.core.v3.ProxyProtocolConfig': (import 'envoy.config.core.v3/proxy-protocol-config.libsonnet'),
  'envoy.config.core.v3.ProxyProtocolConfig.Version': (import 'envoy.config.core.v3/proxy-protocol-config-version.libsonnet'),
  'envoy.config.core.v3.QueryParameter': (import 'envoy.config.core.v3/query-parameter.libsonnet'),
  'envoy.config.core.v3.QuicKeepAliveSettings': (import 'envoy.config.core.v3/quic-keep-alive-settings.libsonnet'),
  'envoy.config.core.v3.QuicProtocolOptions': (import 'envoy.config.core.v3/quic-protocol-options.libsonnet'),
  'envoy.config.core.v3.RateLimitSettings': (import 'envoy.config.core.v3/rate-limit-settings.libsonnet'),
  'envoy.config.core.v3.RemoteDataSource': (import 'envoy.config.core.v3/remote-data-source.libsonnet'),
  'envoy.config.core.v3.RequestMethod': (import 'envoy.config.core.v3/request-method.libsonnet'),
  'envoy.config.core.v3.RetryPolicy': (import 'envoy.config.core.v3/retry-policy.libsonnet'),
  'envoy.config.core.v3.RoutingPriority': (import 'envoy.config.core.v3/routing-priority.libsonnet'),
  'envoy.config.core.v3.RuntimeDouble': (import 'envoy.config.core.v3/runtime-double.libsonnet'),
  'envoy.config.core.v3.RuntimeFeatureFlag': (import 'envoy.config.core.v3/runtime-feature-flag.libsonnet'),
  'envoy.config.core.v3.RuntimeFractionalPercent': (import 'envoy.config.core.v3/runtime-fractional-percent.libsonnet'),
  'envoy.config.core.v3.RuntimePercent': (import 'envoy.config.core.v3/runtime-percent.libsonnet'),
  'envoy.config.core.v3.RuntimeUInt32': (import 'envoy.config.core.v3/runtime-u-int-32.libsonnet'),
  'envoy.config.core.v3.SchemeHeaderTransformation': (import 'envoy.config.core.v3/scheme-header-transformation.libsonnet'),
  'envoy.config.core.v3.SelfConfigSource': (import 'envoy.config.core.v3/self-config-source.libsonnet'),
  'envoy.config.core.v3.SocketAddress': (import 'envoy.config.core.v3/socket-address.libsonnet'),
  'envoy.config.core.v3.SocketAddress.Protocol': (import 'envoy.config.core.v3/socket-address-protocol.libsonnet'),
  'envoy.config.core.v3.SocketOption': (import 'envoy.config.core.v3/socket-option.libsonnet'),
  'envoy.config.core.v3.SocketOption.SocketState': (import 'envoy.config.core.v3/socket-option-socket-state.libsonnet'),
  'envoy.config.core.v3.SocketOptionsOverride': (import 'envoy.config.core.v3/socket-options-override.libsonnet'),
  'envoy.config.core.v3.SubstitutionFormatString': (import 'envoy.config.core.v3/substitution-format-string.libsonnet'),
  'envoy.config.core.v3.TcpKeepalive': (import 'envoy.config.core.v3/tcp-keepalive.libsonnet'),
  'envoy.config.core.v3.TcpProtocolOptions': (import 'envoy.config.core.v3/tcp-protocol-options.libsonnet'),
  'envoy.config.core.v3.TrafficDirection': (import 'envoy.config.core.v3/traffic-direction.libsonnet'),
  'envoy.config.core.v3.TransportSocket': (import 'envoy.config.core.v3/transport-socket.libsonnet'),
  'envoy.config.core.v3.TypedExtensionConfig': (import 'envoy.config.core.v3/typed-extension-config.libsonnet'),
  'envoy.config.core.v3.UdpSocketConfig': (import 'envoy.config.core.v3/udp-socket-config.libsonnet'),
  'envoy.config.core.v3.UpstreamHttpProtocolOptions': (import 'envoy.config.core.v3/upstream-http-protocol-options.libsonnet'),
  'envoy.config.core.v3.WatchedDirectory': (import 'envoy.config.core.v3/watched-directory.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment': (import 'envoy.config.endpoint.v3/cluster-load-assignment.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment.NamedEndpointsEntry': (import 'envoy.config.endpoint.v3/cluster-load-assignment-named-endpoints-entry.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment.Policy': (import 'envoy.config.endpoint.v3/cluster-load-assignment-policy.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment.Policy.DropOverload': (import 'envoy.config.endpoint.v3/cluster-load-assignment-policy-drop-overload.libsonnet'),
  'envoy.config.endpoint.v3.Endpoint': (import 'envoy.config.endpoint.v3/endpoint.libsonnet'),
  'envoy.config.endpoint.v3.Endpoint.HealthCheckConfig': (import 'envoy.config.endpoint.v3/endpoint-health-check-config.libsonnet'),
  'envoy.config.endpoint.v3.LbEndpoint': (import 'envoy.config.endpoint.v3/lb-endpoint.libsonnet'),
  'envoy.config.endpoint.v3.LedsClusterLocalityConfig': (import 'envoy.config.endpoint.v3/leds-cluster-locality-config.libsonnet'),
  'envoy.config.endpoint.v3.LocalityLbEndpoints': (import 'envoy.config.endpoint.v3/locality-lb-endpoints.libsonnet'),
  'envoy.config.endpoint.v3.LocalityLbEndpoints.LbEndpointList': (import 'envoy.config.endpoint.v3/locality-lb-endpoints-lb-endpoint-list.libsonnet'),
  'envoy.config.listener.v3.ActiveRawUdpListenerConfig': (import 'envoy.config.listener.v3/active-raw-udp-listener-config.libsonnet'),
  'envoy.config.listener.v3.AdditionalAddress': (import 'envoy.config.listener.v3/additional-address.libsonnet'),
  'envoy.config.listener.v3.ApiListener': (import 'envoy.config.listener.v3/api-listener.libsonnet'),
  'envoy.config.listener.v3.Filter': (import 'envoy.config.listener.v3/filter.libsonnet'),
  'envoy.config.listener.v3.FilterChain': (import 'envoy.config.listener.v3/filter-chain.libsonnet'),
  'envoy.config.listener.v3.FilterChain.OnDemandConfiguration': (import 'envoy.config.listener.v3/filter-chain-on-demand-configuration.libsonnet'),
  'envoy.config.listener.v3.FilterChainMatch': (import 'envoy.config.listener.v3/filter-chain-match.libsonnet'),
  'envoy.config.listener.v3.FilterChainMatch.ConnectionSourceType': (import 'envoy.config.listener.v3/filter-chain-match-connection-source-type.libsonnet'),
  'envoy.config.listener.v3.Listener': (import 'envoy.config.listener.v3/listener.libsonnet'),
  'envoy.config.listener.v3.Listener.ConnectionBalanceConfig': (import 'envoy.config.listener.v3/listener-connection-balance-config.libsonnet'),
  'envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance': (import 'envoy.config.listener.v3/listener-connection-balance-config-exact-balance.libsonnet'),
  'envoy.config.listener.v3.Listener.DeprecatedV1': (import 'envoy.config.listener.v3/listener-deprecated-v-1.libsonnet'),
  'envoy.config.listener.v3.Listener.DrainType': (import 'envoy.config.listener.v3/listener-drain-type.libsonnet'),
  'envoy.config.listener.v3.Listener.InternalListenerConfig': (import 'envoy.config.listener.v3/listener-internal-listener-config.libsonnet'),
  'envoy.config.listener.v3.ListenerCollection': (import 'envoy.config.listener.v3/listener-collection.libsonnet'),
  'envoy.config.listener.v3.ListenerFilter': (import 'envoy.config.listener.v3/listener-filter.libsonnet'),
  'envoy.config.listener.v3.ListenerFilterChainMatchPredicate': (import 'envoy.config.listener.v3/listener-filter-chain-match-predicate.libsonnet'),
  'envoy.config.listener.v3.ListenerFilterChainMatchPredicate.MatchSet': (import 'envoy.config.listener.v3/listener-filter-chain-match-predicate-match-set.libsonnet'),
  'envoy.config.listener.v3.QuicProtocolOptions': (import 'envoy.config.listener.v3/quic-protocol-options.libsonnet'),
  'envoy.config.listener.v3.UdpListenerConfig': (import 'envoy.config.listener.v3/udp-listener-config.libsonnet'),
  'envoy.config.metrics.v3.DogStatsdSink': (import 'envoy.config.metrics.v3/dog-statsd-sink.libsonnet'),
  'envoy.config.metrics.v3.HistogramBucketSettings': (import 'envoy.config.metrics.v3/histogram-bucket-settings.libsonnet'),
  'envoy.config.metrics.v3.HystrixSink': (import 'envoy.config.metrics.v3/hystrix-sink.libsonnet'),
  'envoy.config.metrics.v3.StatsConfig': (import 'envoy.config.metrics.v3/stats-config.libsonnet'),
  'envoy.config.metrics.v3.StatsMatcher': (import 'envoy.config.metrics.v3/stats-matcher.libsonnet'),
  'envoy.config.metrics.v3.StatsSink': (import 'envoy.config.metrics.v3/stats-sink.libsonnet'),
  'envoy.config.metrics.v3.StatsdSink': (import 'envoy.config.metrics.v3/statsd-sink.libsonnet'),
  'envoy.config.metrics.v3.TagSpecifier': (import 'envoy.config.metrics.v3/tag-specifier.libsonnet'),
  'envoy.config.overload.v3.BufferFactoryConfig': (import 'envoy.config.overload.v3/buffer-factory-config.libsonnet'),
  'envoy.config.overload.v3.OverloadAction': (import 'envoy.config.overload.v3/overload-action.libsonnet'),
  'envoy.config.overload.v3.OverloadManager': (import 'envoy.config.overload.v3/overload-manager.libsonnet'),
  'envoy.config.overload.v3.ResourceMonitor': (import 'envoy.config.overload.v3/resource-monitor.libsonnet'),
  'envoy.config.overload.v3.ScaleTimersOverloadActionConfig': (import 'envoy.config.overload.v3/scale-timers-overload-action-config.libsonnet'),
  'envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer': (import 'envoy.config.overload.v3/scale-timers-overload-action-config-scale-timer.libsonnet'),
  'envoy.config.overload.v3.ScaleTimersOverloadActionConfig.TimerType': (import 'envoy.config.overload.v3/scale-timers-overload-action-config-timer-type.libsonnet'),
  'envoy.config.overload.v3.ScaledTrigger': (import 'envoy.config.overload.v3/scaled-trigger.libsonnet'),
  'envoy.config.overload.v3.ThresholdTrigger': (import 'envoy.config.overload.v3/threshold-trigger.libsonnet'),
  'envoy.config.overload.v3.Trigger': (import 'envoy.config.overload.v3/trigger.libsonnet'),
  'envoy.config.ratelimit.v3.RateLimitServiceConfig': (import 'envoy.config.ratelimit.v3/rate-limit-service-config.libsonnet'),
  'envoy.config.rbac.v3.Action': (import 'envoy.config.rbac.v3/action.libsonnet'),
  'envoy.config.rbac.v3.Permission': (import 'envoy.config.rbac.v3/permission.libsonnet'),
  'envoy.config.rbac.v3.Permission.Set': (import 'envoy.config.rbac.v3/permission-set.libsonnet'),
  'envoy.config.rbac.v3.Policy': (import 'envoy.config.rbac.v3/policy.libsonnet'),
  'envoy.config.rbac.v3.Principal': (import 'envoy.config.rbac.v3/principal.libsonnet'),
  'envoy.config.rbac.v3.Principal.Authenticated': (import 'envoy.config.rbac.v3/principal-authenticated.libsonnet'),
  'envoy.config.rbac.v3.Principal.Set': (import 'envoy.config.rbac.v3/principal-set.libsonnet'),
  'envoy.config.rbac.v3.RBAC': (import 'envoy.config.rbac.v3/rbac.libsonnet'),
  'envoy.config.rbac.v3.RBAC.Action': (import 'envoy.config.rbac.v3/rbac-action.libsonnet'),
  'envoy.config.rbac.v3.RBAC.PoliciesEntry': (import 'envoy.config.rbac.v3/rbac-policies-entry.libsonnet'),
  'envoy.config.route.v3.ClusterSpecifierPlugin': (import 'envoy.config.route.v3/cluster-specifier-plugin.libsonnet'),
  'envoy.config.route.v3.CorsPolicy': (import 'envoy.config.route.v3/cors-policy.libsonnet'),
  'envoy.config.route.v3.Decorator': (import 'envoy.config.route.v3/decorator.libsonnet'),
  'envoy.config.route.v3.DirectResponseAction': (import 'envoy.config.route.v3/direct-response-action.libsonnet'),
  'envoy.config.route.v3.FilterAction': (import 'envoy.config.route.v3/filter-action.libsonnet'),
  'envoy.config.route.v3.FilterConfig': (import 'envoy.config.route.v3/filter-config.libsonnet'),
  'envoy.config.route.v3.HeaderMatcher': (import 'envoy.config.route.v3/header-matcher.libsonnet'),
  'envoy.config.route.v3.HedgePolicy': (import 'envoy.config.route.v3/hedge-policy.libsonnet'),
  'envoy.config.route.v3.InternalRedirectPolicy': (import 'envoy.config.route.v3/internal-redirect-policy.libsonnet'),
  'envoy.config.route.v3.NonForwardingAction': (import 'envoy.config.route.v3/non-forwarding-action.libsonnet'),
  'envoy.config.route.v3.QueryParameterMatcher': (import 'envoy.config.route.v3/query-parameter-matcher.libsonnet'),
  'envoy.config.route.v3.RateLimit': (import 'envoy.config.route.v3/rate-limit.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action': (import 'envoy.config.route.v3/rate-limit-action.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.DestinationCluster': (import 'envoy.config.route.v3/rate-limit-action-destination-cluster.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.DynamicMetaData': (import 'envoy.config.route.v3/rate-limit-action-dynamic-meta-data.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.GenericKey': (import 'envoy.config.route.v3/rate-limit-action-generic-key.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.HeaderValueMatch': (import 'envoy.config.route.v3/rate-limit-action-header-value-match.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.MaskedRemoteAddress': (import 'envoy.config.route.v3/rate-limit-action-masked-remote-address.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.MetaData': (import 'envoy.config.route.v3/rate-limit-action-meta-data.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.MetaData.Source': (import 'envoy.config.route.v3/rate-limit-action-meta-data-source.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.QueryParameterValueMatch': (import 'envoy.config.route.v3/rate-limit-action-query-parameter-value-match.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.RemoteAddress': (import 'envoy.config.route.v3/rate-limit-action-remote-address.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.RequestHeaders': (import 'envoy.config.route.v3/rate-limit-action-request-headers.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.SourceCluster': (import 'envoy.config.route.v3/rate-limit-action-source-cluster.libsonnet'),
  'envoy.config.route.v3.RateLimit.Override': (import 'envoy.config.route.v3/rate-limit-override.libsonnet'),
  'envoy.config.route.v3.RateLimit.Override.DynamicMetadata': (import 'envoy.config.route.v3/rate-limit-override-dynamic-metadata.libsonnet'),
  'envoy.config.route.v3.RedirectAction': (import 'envoy.config.route.v3/redirect-action.libsonnet'),
  'envoy.config.route.v3.RedirectAction.RedirectResponseCode': (import 'envoy.config.route.v3/redirect-action-redirect-response-code.libsonnet'),
  'envoy.config.route.v3.RetryPolicy': (import 'envoy.config.route.v3/retry-policy.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RateLimitedRetryBackOff': (import 'envoy.config.route.v3/retry-policy-rate-limited-retry-back-off.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.ResetHeader': (import 'envoy.config.route.v3/retry-policy-reset-header.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.ResetHeaderFormat': (import 'envoy.config.route.v3/retry-policy-reset-header-format.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RetryBackOff': (import 'envoy.config.route.v3/retry-policy-retry-back-off.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RetryHostPredicate': (import 'envoy.config.route.v3/retry-policy-retry-host-predicate.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RetryPriority': (import 'envoy.config.route.v3/retry-policy-retry-priority.libsonnet'),
  'envoy.config.route.v3.Route': (import 'envoy.config.route.v3/route.libsonnet'),
  'envoy.config.route.v3.Route.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/route-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.route.v3.RouteAction': (import 'envoy.config.route.v3/route-action.libsonnet'),
  'envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode': (import 'envoy.config.route.v3/route-action-cluster-not-found-response-code.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy': (import 'envoy.config.route.v3/route-action-hash-policy.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties': (import 'envoy.config.route.v3/route-action-hash-policy-connection-properties.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.Cookie': (import 'envoy.config.route.v3/route-action-hash-policy-cookie.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.FilterState': (import 'envoy.config.route.v3/route-action-hash-policy-filter-state.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.Header': (import 'envoy.config.route.v3/route-action-hash-policy-header.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter': (import 'envoy.config.route.v3/route-action-hash-policy-query-parameter.libsonnet'),
  'envoy.config.route.v3.RouteAction.InternalRedirectAction': (import 'envoy.config.route.v3/route-action-internal-redirect-action.libsonnet'),
  'envoy.config.route.v3.RouteAction.MaxStreamDuration': (import 'envoy.config.route.v3/route-action-max-stream-duration.libsonnet'),
  'envoy.config.route.v3.RouteAction.RequestMirrorPolicy': (import 'envoy.config.route.v3/route-action-request-mirror-policy.libsonnet'),
  'envoy.config.route.v3.RouteAction.UpgradeConfig': (import 'envoy.config.route.v3/route-action-upgrade-config.libsonnet'),
  'envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig': (import 'envoy.config.route.v3/route-action-upgrade-config-connect-config.libsonnet'),
  'envoy.config.route.v3.RouteConfiguration': (import 'envoy.config.route.v3/route-configuration.libsonnet'),
  'envoy.config.route.v3.RouteConfiguration.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/route-configuration-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.route.v3.RouteList': (import 'envoy.config.route.v3/route-list.libsonnet'),
  'envoy.config.route.v3.RouteMatch': (import 'envoy.config.route.v3/route-match.libsonnet'),
  'envoy.config.route.v3.RouteMatch.ConnectMatcher': (import 'envoy.config.route.v3/route-match-connect-matcher.libsonnet'),
  'envoy.config.route.v3.RouteMatch.GrpcRouteMatchOptions': (import 'envoy.config.route.v3/route-match-grpc-route-match-options.libsonnet'),
  'envoy.config.route.v3.RouteMatch.TlsContextMatchOptions': (import 'envoy.config.route.v3/route-match-tls-context-match-options.libsonnet'),
  'envoy.config.route.v3.ScopedRouteConfiguration': (import 'envoy.config.route.v3/scoped-route-configuration.libsonnet'),
  'envoy.config.route.v3.ScopedRouteConfiguration.Key': (import 'envoy.config.route.v3/scoped-route-configuration-key.libsonnet'),
  'envoy.config.route.v3.ScopedRouteConfiguration.Key.Fragment': (import 'envoy.config.route.v3/scoped-route-configuration-key-fragment.libsonnet'),
  'envoy.config.route.v3.Tracing': (import 'envoy.config.route.v3/tracing.libsonnet'),
  'envoy.config.route.v3.Vhds': (import 'envoy.config.route.v3/vhds.libsonnet'),
  'envoy.config.route.v3.VirtualCluster': (import 'envoy.config.route.v3/virtual-cluster.libsonnet'),
  'envoy.config.route.v3.VirtualHost': (import 'envoy.config.route.v3/virtual-host.libsonnet'),
  'envoy.config.route.v3.VirtualHost.TlsRequirementType': (import 'envoy.config.route.v3/virtual-host-tls-requirement-type.libsonnet'),
  'envoy.config.route.v3.VirtualHost.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/virtual-host-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.route.v3.WeightedCluster': (import 'envoy.config.route.v3/weighted-cluster.libsonnet'),
  'envoy.config.route.v3.WeightedCluster.ClusterWeight': (import 'envoy.config.route.v3/weighted-cluster-cluster-weight.libsonnet'),
  'envoy.config.route.v3.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/weighted-cluster-cluster-weight-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.tap.v3.BufferedAdminSink': (import 'envoy.config.tap.v3/buffered-admin-sink.libsonnet'),
  'envoy.config.tap.v3.FilePerTapSink': (import 'envoy.config.tap.v3/file-per-tap-sink.libsonnet'),
  'envoy.config.tap.v3.HttpGenericBodyMatch': (import 'envoy.config.tap.v3/http-generic-body-match.libsonnet'),
  'envoy.config.tap.v3.HttpGenericBodyMatch.GenericTextMatch': (import 'envoy.config.tap.v3/http-generic-body-match-generic-text-match.libsonnet'),
  'envoy.config.tap.v3.HttpHeadersMatch': (import 'envoy.config.tap.v3/http-headers-match.libsonnet'),
  'envoy.config.tap.v3.MatchPredicate': (import 'envoy.config.tap.v3/match-predicate.libsonnet'),
  'envoy.config.tap.v3.MatchPredicate.MatchSet': (import 'envoy.config.tap.v3/match-predicate-match-set.libsonnet'),
  'envoy.config.tap.v3.OutputConfig': (import 'envoy.config.tap.v3/output-config.libsonnet'),
  'envoy.config.tap.v3.OutputSink': (import 'envoy.config.tap.v3/output-sink.libsonnet'),
  'envoy.config.tap.v3.OutputSink.Format': (import 'envoy.config.tap.v3/output-sink-format.libsonnet'),
  'envoy.config.tap.v3.StreamingAdminSink': (import 'envoy.config.tap.v3/streaming-admin-sink.libsonnet'),
  'envoy.config.tap.v3.StreamingGrpcSink': (import 'envoy.config.tap.v3/streaming-grpc-sink.libsonnet'),
  'envoy.config.tap.v3.TapConfig': (import 'envoy.config.tap.v3/tap-config.libsonnet'),
  'envoy.config.trace.v3.Tracing': (import 'envoy.config.trace.v3/tracing.libsonnet'),
  'envoy.config.trace.v3.Tracing.Http': (import 'envoy.config.trace.v3/tracing-http.libsonnet'),
  'envoy.data.dns.v3.DnsTable': (import 'envoy.data.dns.v3/dns-table.libsonnet'),
  'envoy.data.dns.v3.DnsTable.AddressList': (import 'envoy.data.dns.v3/dns-table-address-list.libsonnet'),
  'envoy.data.dns.v3.DnsTable.DnsEndpoint': (import 'envoy.data.dns.v3/dns-table-dns-endpoint.libsonnet'),
  'envoy.data.dns.v3.DnsTable.DnsService': (import 'envoy.data.dns.v3/dns-table-dns-service.libsonnet'),
  'envoy.data.dns.v3.DnsTable.DnsServiceList': (import 'envoy.data.dns.v3/dns-table-dns-service-list.libsonnet'),
  'envoy.data.dns.v3.DnsTable.DnsServiceProtocol': (import 'envoy.data.dns.v3/dns-table-dns-service-protocol.libsonnet'),
  'envoy.data.dns.v3.DnsTable.DnsServiceTarget': (import 'envoy.data.dns.v3/dns-table-dns-service-target.libsonnet'),
  'envoy.data.dns.v3.DnsTable.DnsVirtualDomain': (import 'envoy.data.dns.v3/dns-table-dns-virtual-domain.libsonnet'),
  'envoy.extensions.access_loggers.file.v3.FileAccessLog': (import 'envoy.extensions.access_loggers.file.v3/file-access-log.libsonnet'),
  'envoy.extensions.access_loggers.filters.cel.v3.ExpressionFilter': (import 'envoy.extensions.access_loggers.filters.cel.v3/expression-filter.libsonnet'),
  'envoy.extensions.access_loggers.grpc.v3.CommonGrpcAccessLogConfig': (import 'envoy.extensions.access_loggers.grpc.v3/common-grpc-access-log-config.libsonnet'),
  'envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig': (import 'envoy.extensions.access_loggers.grpc.v3/http-grpc-access-log-config.libsonnet'),
  'envoy.extensions.access_loggers.grpc.v3.TcpGrpcAccessLogConfig': (import 'envoy.extensions.access_loggers.grpc.v3/tcp-grpc-access-log-config.libsonnet'),
  'envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig': (import 'envoy.extensions.access_loggers.open_telemetry.v3/open-telemetry-access-log-config.libsonnet'),
  'envoy.extensions.access_loggers.stream.v3.StderrAccessLog': (import 'envoy.extensions.access_loggers.stream.v3/stderr-access-log.libsonnet'),
  'envoy.extensions.access_loggers.stream.v3.StdoutAccessLog': (import 'envoy.extensions.access_loggers.stream.v3/stdout-access-log.libsonnet'),
  'envoy.extensions.access_loggers.wasm.v3.WasmAccessLog': (import 'envoy.extensions.access_loggers.wasm.v3/wasm-access-log.libsonnet'),
  'envoy.extensions.bootstrap.internal_listener.v3.InternalListener': (import 'envoy.extensions.bootstrap.internal_listener.v3/internal-listener.libsonnet'),
  'envoy.extensions.clusters.aggregate.v3.ClusterConfig': (import 'envoy.extensions.clusters.aggregate.v3/cluster-config.libsonnet'),
  'envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig': (import 'envoy.extensions.clusters.dynamic_forward_proxy.v3/cluster-config.libsonnet'),
  'envoy.extensions.clusters.redis.v3.RedisClusterConfig': (import 'envoy.extensions.clusters.redis.v3/redis-cluster-config.libsonnet'),
  'envoy.extensions.common.async_files.v3.AsyncFileManagerConfig': (import 'envoy.extensions.common.async_files.v3/async-file-manager-config.libsonnet'),
  'envoy.extensions.common.async_files.v3.AsyncFileManagerConfig.ThreadPool': (import 'envoy.extensions.common.async_files.v3/async-file-manager-config-thread-pool.libsonnet'),
  'envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheCircuitBreakers': (import 'envoy.extensions.common.dynamic_forward_proxy.v3/dns-cache-circuit-breakers.libsonnet'),
  'envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig': (import 'envoy.extensions.common.dynamic_forward_proxy.v3/dns-cache-config.libsonnet'),
  'envoy.extensions.common.matching.v3.ExtensionWithMatcher': (import 'envoy.extensions.common.matching.v3/extension-with-matcher.libsonnet'),
  'envoy.extensions.common.ratelimit.v3.LocalRateLimitDescriptor': (import 'envoy.extensions.common.ratelimit.v3/local-rate-limit-descriptor.libsonnet'),
  'envoy.extensions.common.ratelimit.v3.RateLimitDescriptor': (import 'envoy.extensions.common.ratelimit.v3/rate-limit-descriptor.libsonnet'),
  'envoy.extensions.common.ratelimit.v3.RateLimitDescriptor.Entry': (import 'envoy.extensions.common.ratelimit.v3/rate-limit-descriptor-entry.libsonnet'),
  'envoy.extensions.common.ratelimit.v3.RateLimitDescriptor.RateLimitOverride': (import 'envoy.extensions.common.ratelimit.v3/rate-limit-descriptor-rate-limit-override.libsonnet'),
  'envoy.extensions.common.ratelimit.v3.VhRateLimitsOptions': (import 'envoy.extensions.common.ratelimit.v3/vh-rate-limits-options.libsonnet'),
  'envoy.extensions.common.ratelimit.v3.XRateLimitHeadersRFCVersion': (import 'envoy.extensions.common.ratelimit.v3/x-rate-limit-headers-rfc-version.libsonnet'),
  'envoy.extensions.common.tap.v3.AdminConfig': (import 'envoy.extensions.common.tap.v3/admin-config.libsonnet'),
  'envoy.extensions.common.tap.v3.CommonExtensionConfig': (import 'envoy.extensions.common.tap.v3/common-extension-config.libsonnet'),
  'envoy.extensions.compression.brotli.compressor.v3.Brotli': (import 'envoy.extensions.compression.brotli.compressor.v3/brotli.libsonnet'),
  'envoy.extensions.compression.brotli.compressor.v3.Brotli.EncoderMode': (import 'envoy.extensions.compression.brotli.compressor.v3/brotli-encoder-mode.libsonnet'),
  'envoy.extensions.compression.brotli.decompressor.v3.Brotli': (import 'envoy.extensions.compression.brotli.decompressor.v3/brotli.libsonnet'),
  'envoy.extensions.compression.gzip.compressor.v3.Gzip': (import 'envoy.extensions.compression.gzip.compressor.v3/gzip.libsonnet'),
  'envoy.extensions.compression.gzip.compressor.v3.Gzip.CompressionLevel': (import 'envoy.extensions.compression.gzip.compressor.v3/gzip-compression-level.libsonnet'),
  'envoy.extensions.compression.gzip.compressor.v3.Gzip.CompressionStrategy': (import 'envoy.extensions.compression.gzip.compressor.v3/gzip-compression-strategy.libsonnet'),
  'envoy.extensions.compression.gzip.decompressor.v3.Gzip': (import 'envoy.extensions.compression.gzip.decompressor.v3/gzip.libsonnet'),
  'envoy.extensions.compression.zstd.compressor.v3.Zstd': (import 'envoy.extensions.compression.zstd.compressor.v3/zstd.libsonnet'),
  'envoy.extensions.compression.zstd.compressor.v3.Zstd.Strategy': (import 'envoy.extensions.compression.zstd.compressor.v3/zstd-strategy.libsonnet'),
  'envoy.extensions.compression.zstd.decompressor.v3.Zstd': (import 'envoy.extensions.compression.zstd.decompressor.v3/zstd.libsonnet'),
  'envoy.extensions.config.validators.minimum_clusters.v3.MinimumClustersValidator': (import 'envoy.extensions.config.validators.minimum_clusters.v3/minimum-clusters-validator.libsonnet'),
  'envoy.extensions.early_data.v3.DefaultEarlyDataPolicy': (import 'envoy.extensions.early_data.v3/default-early-data-policy.libsonnet'),
  'envoy.extensions.filters.common.dependency.v3.Dependency': (import 'envoy.extensions.filters.common.dependency.v3/dependency.libsonnet'),
  'envoy.extensions.filters.common.dependency.v3.Dependency.DependencyType': (import 'envoy.extensions.filters.common.dependency.v3/dependency-dependency-type.libsonnet'),
  'envoy.extensions.filters.common.dependency.v3.FilterDependencies': (import 'envoy.extensions.filters.common.dependency.v3/filter-dependencies.libsonnet'),
  'envoy.extensions.filters.common.dependency.v3.MatchingRequirements': (import 'envoy.extensions.filters.common.dependency.v3/matching-requirements.libsonnet'),
  'envoy.extensions.filters.common.dependency.v3.MatchingRequirements.DataInputAllowList': (import 'envoy.extensions.filters.common.dependency.v3/matching-requirements-data-input-allow-list.libsonnet'),
  'envoy.extensions.filters.common.fault.v3.FaultDelay': (import 'envoy.extensions.filters.common.fault.v3/fault-delay.libsonnet'),
  'envoy.extensions.filters.common.fault.v3.FaultDelay.FaultDelayType': (import 'envoy.extensions.filters.common.fault.v3/fault-delay-fault-delay-type.libsonnet'),
  'envoy.extensions.filters.common.fault.v3.FaultDelay.HeaderDelay': (import 'envoy.extensions.filters.common.fault.v3/fault-delay-header-delay.libsonnet'),
  'envoy.extensions.filters.common.fault.v3.FaultRateLimit': (import 'envoy.extensions.filters.common.fault.v3/fault-rate-limit.libsonnet'),
  'envoy.extensions.filters.common.fault.v3.FaultRateLimit.FixedLimit': (import 'envoy.extensions.filters.common.fault.v3/fault-rate-limit-fixed-limit.libsonnet'),
  'envoy.extensions.filters.common.fault.v3.FaultRateLimit.HeaderLimit': (import 'envoy.extensions.filters.common.fault.v3/fault-rate-limit-header-limit.libsonnet'),
  'envoy.extensions.filters.common.matcher.action.v3.SkipFilter': (import 'envoy.extensions.filters.common.matcher.action.v3/skip-filter.libsonnet'),
  'envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrency': (import 'envoy.extensions.filters.http.adaptive_concurrency.v3/adaptive-concurrency.libsonnet'),
  'envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig': (import 'envoy.extensions.filters.http.adaptive_concurrency.v3/gradient-controller-config.libsonnet'),
  'envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams': (import 'envoy.extensions.filters.http.adaptive_concurrency.v3/gradient-controller-config-concurrency-limit-calculation-params.libsonnet'),
  'envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams': (import 'envoy.extensions.filters.http.adaptive_concurrency.v3/gradient-controller-config-minimum-rtt-calculation-params.libsonnet'),
  'envoy.extensions.filters.http.admission_control.v3.AdmissionControl': (import 'envoy.extensions.filters.http.admission_control.v3/admission-control.libsonnet'),
  'envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria': (import 'envoy.extensions.filters.http.admission_control.v3/admission-control-success-criteria.libsonnet'),
  'envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.GrpcCriteria': (import 'envoy.extensions.filters.http.admission_control.v3/admission-control-success-criteria-grpc-criteria.libsonnet'),
  'envoy.extensions.filters.http.admission_control.v3.AdmissionControl.SuccessCriteria.HttpCriteria': (import 'envoy.extensions.filters.http.admission_control.v3/admission-control-success-criteria-http-criteria.libsonnet'),
  'envoy.extensions.filters.http.alternate_protocols_cache.v3.FilterConfig': (import 'envoy.extensions.filters.http.alternate_protocols_cache.v3/filter-config.libsonnet'),
  'envoy.extensions.filters.http.aws_lambda.v3.Config': (import 'envoy.extensions.filters.http.aws_lambda.v3/config.libsonnet'),
  'envoy.extensions.filters.http.aws_lambda.v3.Config.InvocationMode': (import 'envoy.extensions.filters.http.aws_lambda.v3/config-invocation-mode.libsonnet'),
  'envoy.extensions.filters.http.aws_lambda.v3.PerRouteConfig': (import 'envoy.extensions.filters.http.aws_lambda.v3/per-route-config.libsonnet'),
  'envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning': (import 'envoy.extensions.filters.http.aws_request_signing.v3/aws-request-signing.libsonnet'),
  'envoy.extensions.filters.http.bandwidth_limit.v3.BandwidthLimit': (import 'envoy.extensions.filters.http.bandwidth_limit.v3/bandwidth-limit.libsonnet'),
  'envoy.extensions.filters.http.bandwidth_limit.v3.BandwidthLimit.EnableMode': (import 'envoy.extensions.filters.http.bandwidth_limit.v3/bandwidth-limit-enable-mode.libsonnet'),
  'envoy.extensions.filters.http.buffer.v3.Buffer': (import 'envoy.extensions.filters.http.buffer.v3/buffer.libsonnet'),
  'envoy.extensions.filters.http.buffer.v3.BufferPerRoute': (import 'envoy.extensions.filters.http.buffer.v3/buffer-per-route.libsonnet'),
  'envoy.extensions.filters.http.cache.v3.CacheConfig': (import 'envoy.extensions.filters.http.cache.v3/cache-config.libsonnet'),
  'envoy.extensions.filters.http.cache.v3.CacheConfig.KeyCreatorParams': (import 'envoy.extensions.filters.http.cache.v3/cache-config-key-creator-params.libsonnet'),
  'envoy.extensions.filters.http.cdn_loop.v3.CdnLoopConfig': (import 'envoy.extensions.filters.http.cdn_loop.v3/cdn-loop-config.libsonnet'),
  'envoy.extensions.filters.http.composite.v3.Composite': (import 'envoy.extensions.filters.http.composite.v3/composite.libsonnet'),
  'envoy.extensions.filters.http.composite.v3.ExecuteFilterAction': (import 'envoy.extensions.filters.http.composite.v3/execute-filter-action.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.Compressor': (import 'envoy.extensions.filters.http.compressor.v3/compressor.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.Compressor.CommonDirectionConfig': (import 'envoy.extensions.filters.http.compressor.v3/compressor-common-direction-config.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.Compressor.RequestDirectionConfig': (import 'envoy.extensions.filters.http.compressor.v3/compressor-request-direction-config.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.Compressor.ResponseDirectionConfig': (import 'envoy.extensions.filters.http.compressor.v3/compressor-response-direction-config.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.CompressorOverrides': (import 'envoy.extensions.filters.http.compressor.v3/compressor-overrides.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.CompressorPerRoute': (import 'envoy.extensions.filters.http.compressor.v3/compressor-per-route.libsonnet'),
  'envoy.extensions.filters.http.compressor.v3.ResponseDirectionOverrides': (import 'envoy.extensions.filters.http.compressor.v3/response-direction-overrides.libsonnet'),
  'envoy.extensions.filters.http.cors.v3.Cors': (import 'envoy.extensions.filters.http.cors.v3/cors.libsonnet'),
  'envoy.extensions.filters.http.cors.v3.CorsPolicy': (import 'envoy.extensions.filters.http.cors.v3/cors-policy.libsonnet'),
  'envoy.extensions.filters.http.csrf.v3.CsrfPolicy': (import 'envoy.extensions.filters.http.csrf.v3/csrf-policy.libsonnet'),
  'envoy.extensions.filters.http.custom_response.v3.CustomResponse': (import 'envoy.extensions.filters.http.custom_response.v3/custom-response.libsonnet'),
  'envoy.extensions.filters.http.decompressor.v3.Decompressor': (import 'envoy.extensions.filters.http.decompressor.v3/decompressor.libsonnet'),
  'envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig': (import 'envoy.extensions.filters.http.decompressor.v3/decompressor-common-direction-config.libsonnet'),
  'envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig': (import 'envoy.extensions.filters.http.decompressor.v3/decompressor-request-direction-config.libsonnet'),
  'envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig': (import 'envoy.extensions.filters.http.decompressor.v3/decompressor-response-direction-config.libsonnet'),
  'envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig': (import 'envoy.extensions.filters.http.dynamic_forward_proxy.v3/filter-config.libsonnet'),
  'envoy.extensions.filters.http.dynamic_forward_proxy.v3.PerRouteConfig': (import 'envoy.extensions.filters.http.dynamic_forward_proxy.v3/per-route-config.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest': (import 'envoy.extensions.filters.http.ext_authz.v3/authorization-request.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse': (import 'envoy.extensions.filters.http.ext_authz.v3/authorization-response.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.BufferSettings': (import 'envoy.extensions.filters.http.ext_authz.v3/buffer-settings.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.CheckSettings': (import 'envoy.extensions.filters.http.ext_authz.v3/check-settings.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.CheckSettings.ContextExtensionsEntry': (import 'envoy.extensions.filters.http.ext_authz.v3/check-settings-context-extensions-entry.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.ExtAuthz': (import 'envoy.extensions.filters.http.ext_authz.v3/ext-authz.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute': (import 'envoy.extensions.filters.http.ext_authz.v3/ext-authz-per-route.libsonnet'),
  'envoy.extensions.filters.http.ext_authz.v3.HttpService': (import 'envoy.extensions.filters.http.ext_authz.v3/http-service.libsonnet'),
  'envoy.extensions.filters.http.ext_proc.v3.ExtProcOverrides': (import 'envoy.extensions.filters.http.ext_proc.v3/ext-proc-overrides.libsonnet'),
  'envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute': (import 'envoy.extensions.filters.http.ext_proc.v3/ext-proc-per-route.libsonnet'),
  'envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor': (import 'envoy.extensions.filters.http.ext_proc.v3/external-processor.libsonnet'),
  'envoy.extensions.filters.http.ext_proc.v3.ProcessingMode': (import 'envoy.extensions.filters.http.ext_proc.v3/processing-mode.libsonnet'),
  'envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode': (import 'envoy.extensions.filters.http.ext_proc.v3/processing-mode-body-send-mode.libsonnet'),
  'envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode': (import 'envoy.extensions.filters.http.ext_proc.v3/processing-mode-header-send-mode.libsonnet'),
  'envoy.extensions.filters.http.fault.v3.FaultAbort': (import 'envoy.extensions.filters.http.fault.v3/fault-abort.libsonnet'),
  'envoy.extensions.filters.http.fault.v3.FaultAbort.HeaderAbort': (import 'envoy.extensions.filters.http.fault.v3/fault-abort-header-abort.libsonnet'),
  'envoy.extensions.filters.http.fault.v3.HTTPFault': (import 'envoy.extensions.filters.http.fault.v3/http-fault.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior': (import 'envoy.extensions.filters.http.file_system_buffer.v3/buffer-behavior.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.Bypass': (import 'envoy.extensions.filters.http.file_system_buffer.v3/buffer-behavior-bypass.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBuffer': (import 'envoy.extensions.filters.http.file_system_buffer.v3/buffer-behavior-fully-buffer.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.FullyBufferAndAlwaysInjectContentLength': (import 'envoy.extensions.filters.http.file_system_buffer.v3/buffer-behavior-fully-buffer-and-always-inject-content-length.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.InjectContentLengthIfNecessary': (import 'envoy.extensions.filters.http.file_system_buffer.v3/buffer-behavior-inject-content-length-if-necessary.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.BufferBehavior.StreamWhenPossible': (import 'envoy.extensions.filters.http.file_system_buffer.v3/buffer-behavior-stream-when-possible.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.FileSystemBufferFilterConfig': (import 'envoy.extensions.filters.http.file_system_buffer.v3/file-system-buffer-filter-config.libsonnet'),
  'envoy.extensions.filters.http.file_system_buffer.v3.StreamConfig': (import 'envoy.extensions.filters.http.file_system_buffer.v3/stream-config.libsonnet'),
  'envoy.extensions.filters.http.gcp_authn.v3.Audience': (import 'envoy.extensions.filters.http.gcp_authn.v3/audience.libsonnet'),
  'envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig': (import 'envoy.extensions.filters.http.gcp_authn.v3/gcp-authn-filter-config.libsonnet'),
  'envoy.extensions.filters.http.gcp_authn.v3.TokenCacheConfig': (import 'envoy.extensions.filters.http.gcp_authn.v3/token-cache-config.libsonnet'),
  'envoy.extensions.filters.http.gcp_authn.v3.TokenHeader': (import 'envoy.extensions.filters.http.gcp_authn.v3/token-header.libsonnet'),
  'envoy.extensions.filters.http.grpc_http1_bridge.v3.Config': (import 'envoy.extensions.filters.http.grpc_http1_bridge.v3/config.libsonnet'),
  'envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig': (import 'envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3/filter-config.libsonnet'),
  'envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfigPerRoute': (import 'envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3/filter-config-per-route.libsonnet'),
  'envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder': (import 'envoy.extensions.filters.http.grpc_json_transcoder.v3/grpc-json-transcoder.libsonnet'),
  'envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder.PrintOptions': (import 'envoy.extensions.filters.http.grpc_json_transcoder.v3/grpc-json-transcoder-print-options.libsonnet'),
  'envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder.RequestValidationOptions': (import 'envoy.extensions.filters.http.grpc_json_transcoder.v3/grpc-json-transcoder-request-validation-options.libsonnet'),
  'envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder.UrlUnescapeSpec': (import 'envoy.extensions.filters.http.grpc_json_transcoder.v3/grpc-json-transcoder-url-unescape-spec.libsonnet'),
  'envoy.extensions.filters.http.grpc_stats.v3.FilterConfig': (import 'envoy.extensions.filters.http.grpc_stats.v3/filter-config.libsonnet'),
  'envoy.extensions.filters.http.grpc_stats.v3.FilterObject': (import 'envoy.extensions.filters.http.grpc_stats.v3/filter-object.libsonnet'),
  'envoy.extensions.filters.http.grpc_web.v3.GrpcWeb': (import 'envoy.extensions.filters.http.grpc_web.v3/grpc-web.libsonnet'),
  'envoy.extensions.filters.http.gzip.v3.Gzip': (import 'envoy.extensions.filters.http.gzip.v3/gzip.libsonnet'),
  'envoy.extensions.filters.http.gzip.v3.Gzip.CompressionLevel': (import 'envoy.extensions.filters.http.gzip.v3/gzip-compression-level.libsonnet'),
  'envoy.extensions.filters.http.gzip.v3.Gzip.CompressionLevel.Enum': (import 'envoy.extensions.filters.http.gzip.v3/gzip-compression-level-enum.libsonnet'),
  'envoy.extensions.filters.http.gzip.v3.Gzip.CompressionStrategy': (import 'envoy.extensions.filters.http.gzip.v3/gzip-compression-strategy.libsonnet'),
  'envoy.extensions.filters.http.header_to_metadata.v3.Config': (import 'envoy.extensions.filters.http.header_to_metadata.v3/config.libsonnet'),
  'envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair': (import 'envoy.extensions.filters.http.header_to_metadata.v3/config-key-value-pair.libsonnet'),
  'envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule': (import 'envoy.extensions.filters.http.header_to_metadata.v3/config-rule.libsonnet'),
  'envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode': (import 'envoy.extensions.filters.http.header_to_metadata.v3/config-value-encode.libsonnet'),
  'envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType': (import 'envoy.extensions.filters.http.header_to_metadata.v3/config-value-type.libsonnet'),
  'envoy.extensions.filters.http.health_check.v3.HealthCheck': (import 'envoy.extensions.filters.http.health_check.v3/health-check.libsonnet'),
  'envoy.extensions.filters.http.health_check.v3.HealthCheck.ClusterMinHealthyPercentagesEntry': (import 'envoy.extensions.filters.http.health_check.v3/health-check-cluster-min-healthy-percentages-entry.libsonnet'),
  'envoy.extensions.filters.http.ip_tagging.v3.IPTagging': (import 'envoy.extensions.filters.http.ip_tagging.v3/ip-tagging.libsonnet'),
  'envoy.extensions.filters.http.ip_tagging.v3.IPTagging.IPTag': (import 'envoy.extensions.filters.http.ip_tagging.v3/ip-tagging-ip-tag.libsonnet'),
  'envoy.extensions.filters.http.ip_tagging.v3.IPTagging.RequestType': (import 'envoy.extensions.filters.http.ip_tagging.v3/ip-tagging-request-type.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule': (import 'envoy.extensions.filters.http.jwt_authn.v3/filter-state-rule.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.RequiresEntry': (import 'envoy.extensions.filters.http.jwt_authn.v3/filter-state-rule-requires-entry.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwks-async-fetch.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-authentication.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.ProvidersEntry': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-authentication-providers-entry.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.RequirementMapEntry': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-authentication-requirement-map-entry.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtCacheConfig': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-cache-config.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtClaimToHeader': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-claim-to-header.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtHeader': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-header.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtProvider': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-provider.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-requirement.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-requirement-and-list.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList': (import 'envoy.extensions.filters.http.jwt_authn.v3/jwt-requirement-or-list.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig': (import 'envoy.extensions.filters.http.jwt_authn.v3/per-route-config.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences': (import 'envoy.extensions.filters.http.jwt_authn.v3/provider-with-audiences.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks': (import 'envoy.extensions.filters.http.jwt_authn.v3/remote-jwks.libsonnet'),
  'envoy.extensions.filters.http.jwt_authn.v3.RequirementRule': (import 'envoy.extensions.filters.http.jwt_authn.v3/requirement-rule.libsonnet'),
  'envoy.extensions.filters.http.kill_request.v3.KillRequest': (import 'envoy.extensions.filters.http.kill_request.v3/kill-request.libsonnet'),
  'envoy.extensions.filters.http.kill_request.v3.KillRequest.Direction': (import 'envoy.extensions.filters.http.kill_request.v3/kill-request-direction.libsonnet'),
  'envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit': (import 'envoy.extensions.filters.http.local_ratelimit.v3/local-rate-limit.libsonnet'),
  'envoy.extensions.filters.http.lua.v3.Lua': (import 'envoy.extensions.filters.http.lua.v3/lua.libsonnet'),
  'envoy.extensions.filters.http.lua.v3.Lua.SourceCodesEntry': (import 'envoy.extensions.filters.http.lua.v3/lua-source-codes-entry.libsonnet'),
  'envoy.extensions.filters.http.lua.v3.LuaPerRoute': (import 'envoy.extensions.filters.http.lua.v3/lua-per-route.libsonnet'),
  'envoy.extensions.filters.http.oauth2.v3.OAuth2': (import 'envoy.extensions.filters.http.oauth2.v3/o-auth-2.libsonnet'),
  'envoy.extensions.filters.http.oauth2.v3.OAuth2Config': (import 'envoy.extensions.filters.http.oauth2.v3/o-auth-2-config.libsonnet'),
  'envoy.extensions.filters.http.oauth2.v3.OAuth2Config.AuthType': (import 'envoy.extensions.filters.http.oauth2.v3/o-auth-2-config-auth-type.libsonnet'),
  'envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials': (import 'envoy.extensions.filters.http.oauth2.v3/o-auth-2-credentials.libsonnet'),
  'envoy.extensions.filters.http.oauth2.v3.OAuth2Credentials.CookieNames': (import 'envoy.extensions.filters.http.oauth2.v3/o-auth-2-credentials-cookie-names.libsonnet'),
  'envoy.extensions.filters.http.on_demand.v3.OnDemand': (import 'envoy.extensions.filters.http.on_demand.v3/on-demand.libsonnet'),
  'envoy.extensions.filters.http.on_demand.v3.OnDemandCds': (import 'envoy.extensions.filters.http.on_demand.v3/on-demand-cds.libsonnet'),
  'envoy.extensions.filters.http.on_demand.v3.PerRouteConfig': (import 'envoy.extensions.filters.http.on_demand.v3/per-route-config.libsonnet'),
  'envoy.extensions.filters.http.original_src.v3.OriginalSrc': (import 'envoy.extensions.filters.http.original_src.v3/original-src.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-bucket-id-builder.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.BucketIdBuilderEntry': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-bucket-id-builder-bucket-id-builder-entry.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.ValueBuilder': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-bucket-id-builder-value-builder.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-deny-response-settings.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-expired-assignment-behavior.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior.ReuseLastAssignment': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-expired-assignment-behavior-reuse-last-assignment.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-bucket-settings-no-assignment-behavior.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaFilterConfig': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-filter-config.libsonnet'),
  'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaOverride': (import 'envoy.extensions.filters.http.rate_limit_quota.v3/rate-limit-quota-override.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimit': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-x-rate-limit-headers-rfc-version.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.DestinationCluster': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-destination-cluster.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.GenericKey': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-generic-key.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.HeaderValueMatch': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-header-value-match.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.MetaData': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-meta-data.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.MetaData.Source': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-meta-data-source.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.RemoteAddress': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-remote-address.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.RequestHeaders': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-request-headers.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Action.SourceCluster': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-action-source-cluster.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Override': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-override.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitConfig.Override.DynamicMetadata': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-config-override-dynamic-metadata.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-per-route.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.OverrideOptions': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-per-route-override-options.libsonnet'),
  'envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute.VhRateLimitsOptions': (import 'envoy.extensions.filters.http.ratelimit.v3/rate-limit-per-route-vh-rate-limits-options.libsonnet'),
  'envoy.extensions.filters.http.rbac.v3.RBAC': (import 'envoy.extensions.filters.http.rbac.v3/rbac.libsonnet'),
  'envoy.extensions.filters.http.rbac.v3.RBACPerRoute': (import 'envoy.extensions.filters.http.rbac.v3/rbac-per-route.libsonnet'),
  'envoy.extensions.filters.http.router.v3.Router': (import 'envoy.extensions.filters.http.router.v3/router.libsonnet'),
  'envoy.extensions.filters.http.set_metadata.v3.Config': (import 'envoy.extensions.filters.http.set_metadata.v3/config.libsonnet'),
  'envoy.extensions.filters.http.stateful_session.v3.StatefulSession': (import 'envoy.extensions.filters.http.stateful_session.v3/stateful-session.libsonnet'),
  'envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute': (import 'envoy.extensions.filters.http.stateful_session.v3/stateful-session-per-route.libsonnet'),
  'envoy.extensions.filters.http.tap.v3.Tap': (import 'envoy.extensions.filters.http.tap.v3/tap.libsonnet'),
  'envoy.extensions.filters.http.upstream_codec.v3.UpstreamCodec': (import 'envoy.extensions.filters.http.upstream_codec.v3/upstream-codec.libsonnet'),
  'envoy.extensions.filters.http.wasm.v3.Wasm': (import 'envoy.extensions.filters.http.wasm.v3/wasm.libsonnet'),
  'envoy.extensions.filters.listener.http_inspector.v3.HttpInspector': (import 'envoy.extensions.filters.listener.http_inspector.v3/http-inspector.libsonnet'),
  'envoy.extensions.filters.listener.original_dst.v3.OriginalDst': (import 'envoy.extensions.filters.listener.original_dst.v3/original-dst.libsonnet'),
  'envoy.extensions.filters.listener.original_src.v3.OriginalSrc': (import 'envoy.extensions.filters.listener.original_src.v3/original-src.libsonnet'),
  'envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol': (import 'envoy.extensions.filters.listener.proxy_protocol.v3/proxy-protocol.libsonnet'),
  'envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.KeyValuePair': (import 'envoy.extensions.filters.listener.proxy_protocol.v3/proxy-protocol-key-value-pair.libsonnet'),
  'envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.Rule': (import 'envoy.extensions.filters.listener.proxy_protocol.v3/proxy-protocol-rule.libsonnet'),
  'envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector': (import 'envoy.extensions.filters.listener.tls_inspector.v3/tls-inspector.libsonnet'),
  'envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit': (import 'envoy.extensions.filters.network.connection_limit.v3/connection-limit.libsonnet'),
  'envoy.extensions.filters.network.direct_response.v3.Config': (import 'envoy.extensions.filters.network.direct_response.v3/config.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.router.v3.Router': (import 'envoy.extensions.filters.network.dubbo_proxy.router.v3/router.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.Drds': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/drds.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.DubboFilter': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/dubbo-filter.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/dubbo-proxy.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/method-match.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/method-match-parameter-match-specifier.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParamsMatchEntry': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/method-match-params-match-entry.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.MultipleRouteConfiguration': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/multiple-route-configuration.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.ProtocolType': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/protocol-type.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.Route': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/route.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.RouteAction': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/route-action.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.RouteConfiguration': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/route-configuration.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.RouteMatch': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/route-match.libsonnet'),
  'envoy.extensions.filters.network.dubbo_proxy.v3.SerializationType': (import 'envoy.extensions.filters.network.dubbo_proxy.v3/serialization-type.libsonnet'),
  'envoy.extensions.filters.network.echo.v3.Echo': (import 'envoy.extensions.filters.network.echo.v3/echo.libsonnet'),
  'envoy.extensions.filters.network.ext_authz.v3.ExtAuthz': (import 'envoy.extensions.filters.network.ext_authz.v3/ext-authz.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.EnvoyMobileHttpConnectionManager': (import 'envoy.extensions.filters.network.http_connection_manager.v3/envoy-mobile-http-connection-manager.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.CodecType': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-codec-type.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ForwardClientCertDetails': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-forward-client-cert-details.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.InternalAddressConfig': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-internal-address-config.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-path-normalization-options.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathWithEscapedSlashesAction': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-path-with-escaped-slashes-action.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ProxyStatusConfig': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-proxy-status-config.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.ServerHeaderTransformation': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-server-header-transformation.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.SetCurrentClientCertDetails': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-set-current-client-cert-details.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-tracing.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.OperationName': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-tracing-operation-name.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.UpgradeConfig': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-connection-manager-upgrade-config.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.HttpFilter': (import 'envoy.extensions.filters.network.http_connection_manager.v3/http-filter.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig': (import 'envoy.extensions.filters.network.http_connection_manager.v3/local-reply-config.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.Rds': (import 'envoy.extensions.filters.network.http_connection_manager.v3/rds.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.RequestIDExtension': (import 'envoy.extensions.filters.network.http_connection_manager.v3/request-id-extension.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ResponseMapper': (import 'envoy.extensions.filters.network.http_connection_manager.v3/response-mapper.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRds': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-rds.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRouteConfigurationsList': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-route-configurations-list.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-routes.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.ScopeKeyBuilder': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-routes-scope-key-builder.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-routes-scope-key-builder-fragment-builder.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-routes-scope-key-builder-fragment-builder-header-value-extractor.libsonnet'),
  'envoy.extensions.filters.network.http_connection_manager.v3.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor.KvElement': (import 'envoy.extensions.filters.network.http_connection_manager.v3/scoped-routes-scope-key-builder-fragment-builder-header-value-extractor-kv-element.libsonnet'),
  'envoy.extensions.filters.network.local_ratelimit.v3.LocalRateLimit': (import 'envoy.extensions.filters.network.local_ratelimit.v3/local-rate-limit.libsonnet'),
  'envoy.extensions.filters.network.mongo_proxy.v3.MongoProxy': (import 'envoy.extensions.filters.network.mongo_proxy.v3/mongo-proxy.libsonnet'),
  'envoy.extensions.filters.network.ratelimit.v3.RateLimit': (import 'envoy.extensions.filters.network.ratelimit.v3/rate-limit.libsonnet'),
  'envoy.extensions.filters.network.rbac.v3.RBAC': (import 'envoy.extensions.filters.network.rbac.v3/rbac.libsonnet'),
  'envoy.extensions.filters.network.rbac.v3.RBAC.EnforcementType': (import 'envoy.extensions.filters.network.rbac.v3/rbac-enforcement-type.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-protocol-options.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.ConnPoolSettings': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-conn-pool-settings.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.ConnPoolSettings.ReadPolicy': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-conn-pool-settings-read-policy.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.PrefixRoutes': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-prefix-routes.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.PrefixRoutes.Route': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-prefix-routes-route.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.PrefixRoutes.Route.RequestMirrorPolicy': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-prefix-routes-route-request-mirror-policy.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.RedisFault': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-redis-fault.libsonnet'),
  'envoy.extensions.filters.network.redis_proxy.v3.RedisProxy.RedisFault.RedisFaultType': (import 'envoy.extensions.filters.network.redis_proxy.v3/redis-proxy-redis-fault-redis-fault-type.libsonnet'),
  'envoy.extensions.filters.network.sni_cluster.v3.SniCluster': (import 'envoy.extensions.filters.network.sni_cluster.v3/sni-cluster.libsonnet'),
  'envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3.FilterConfig': (import 'envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3/filter-config.libsonnet'),
  'envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy': (import 'envoy.extensions.filters.network.tcp_proxy.v3/tcp-proxy.libsonnet'),
  'envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.OnDemand': (import 'envoy.extensions.filters.network.tcp_proxy.v3/tcp-proxy-on-demand.libsonnet'),
  'envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.TunnelingConfig': (import 'envoy.extensions.filters.network.tcp_proxy.v3/tcp-proxy-tunneling-config.libsonnet'),
  'envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster': (import 'envoy.extensions.filters.network.tcp_proxy.v3/tcp-proxy-weighted-cluster.libsonnet'),
  'envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight': (import 'envoy.extensions.filters.network.tcp_proxy.v3/tcp-proxy-weighted-cluster-cluster-weight.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata': (import 'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3/header-to-metadata.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair': (import 'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3/header-to-metadata-key-value-pair.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.Rule': (import 'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3/header-to-metadata-rule.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueEncode': (import 'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3/header-to-metadata-value-encode.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueType': (import 'envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3/header-to-metadata-value-type.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3.PayloadToMetadata': (import 'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3/payload-to-metadata.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3.PayloadToMetadata.FieldSelector': (import 'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3/payload-to-metadata-field-selector.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3.PayloadToMetadata.KeyValuePair': (import 'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3/payload-to-metadata-key-value-pair.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3.PayloadToMetadata.Rule': (import 'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3/payload-to-metadata-rule.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3.PayloadToMetadata.ValueType': (import 'envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3/payload-to-metadata-value-type.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.filters.ratelimit.v3.RateLimit': (import 'envoy.extensions.filters.network.thrift_proxy.filters.ratelimit.v3/rate-limit.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.router.v3.Router': (import 'envoy.extensions.filters.network.thrift_proxy.router.v3/router.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.ProtocolType': (import 'envoy.extensions.filters.network.thrift_proxy.v3/protocol-type.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.Route': (import 'envoy.extensions.filters.network.thrift_proxy.v3/route.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.RouteAction': (import 'envoy.extensions.filters.network.thrift_proxy.v3/route-action.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.RouteAction.RequestMirrorPolicy': (import 'envoy.extensions.filters.network.thrift_proxy.v3/route-action-request-mirror-policy.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.RouteConfiguration': (import 'envoy.extensions.filters.network.thrift_proxy.v3/route-configuration.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch': (import 'envoy.extensions.filters.network.thrift_proxy.v3/route-match.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.ThriftFilter': (import 'envoy.extensions.filters.network.thrift_proxy.v3/thrift-filter.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.ThriftProtocolOptions': (import 'envoy.extensions.filters.network.thrift_proxy.v3/thrift-protocol-options.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy': (import 'envoy.extensions.filters.network.thrift_proxy.v3/thrift-proxy.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.TransportType': (import 'envoy.extensions.filters.network.thrift_proxy.v3/transport-type.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.Trds': (import 'envoy.extensions.filters.network.thrift_proxy.v3/trds.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.WeightedCluster': (import 'envoy.extensions.filters.network.thrift_proxy.v3/weighted-cluster.libsonnet'),
  'envoy.extensions.filters.network.thrift_proxy.v3.WeightedCluster.ClusterWeight': (import 'envoy.extensions.filters.network.thrift_proxy.v3/weighted-cluster-cluster-weight.libsonnet'),
  'envoy.extensions.filters.network.wasm.v3.Wasm': (import 'envoy.extensions.filters.network.wasm.v3/wasm.libsonnet'),
  'envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy': (import 'envoy.extensions.filters.network.zookeeper_proxy.v3/zoo-keeper-proxy.libsonnet'),
  'envoy.extensions.filters.udp.dns_filter.v3.DnsFilterConfig': (import 'envoy.extensions.filters.udp.dns_filter.v3/dns-filter-config.libsonnet'),
  'envoy.extensions.filters.udp.dns_filter.v3.DnsFilterConfig.ClientContextConfig': (import 'envoy.extensions.filters.udp.dns_filter.v3/dns-filter-config-client-context-config.libsonnet'),
  'envoy.extensions.filters.udp.dns_filter.v3.DnsFilterConfig.ServerContextConfig': (import 'envoy.extensions.filters.udp.dns_filter.v3/dns-filter-config-server-context-config.libsonnet'),
  'envoy.extensions.filters.udp.udp_proxy.v3.Route': (import 'envoy.extensions.filters.udp.udp_proxy.v3/route.libsonnet'),
  'envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig': (import 'envoy.extensions.filters.udp.udp_proxy.v3/udp-proxy-config.libsonnet'),
  'envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.HashPolicy': (import 'envoy.extensions.filters.udp.udp_proxy.v3/udp-proxy-config-hash-policy.libsonnet'),
  'envoy.extensions.formatter.metadata.v3.Metadata': (import 'envoy.extensions.formatter.metadata.v3/metadata.libsonnet'),
  'envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery': (import 'envoy.extensions.formatter.req_without_query.v3/req-without-query.libsonnet'),
  'envoy.extensions.health_checkers.redis.v3.Redis': (import 'envoy.extensions.health_checkers.redis.v3/redis.libsonnet'),
  'envoy.extensions.health_checkers.thrift.v3.Thrift': (import 'envoy.extensions.health_checkers.thrift.v3/thrift.libsonnet'),
  'envoy.extensions.http.cache.file_system_http_cache.v3.FileSystemHttpCacheConfig': (import 'envoy.extensions.http.cache.file_system_http_cache.v3/file-system-http-cache-config.libsonnet'),
  'envoy.extensions.http.cache.simple_http_cache.v3.SimpleHttpCacheConfig': (import 'envoy.extensions.http.cache.simple_http_cache.v3/simple-http-cache-config.libsonnet'),
  'envoy.extensions.http.custom_response.local_response_policy.v3.LocalResponsePolicy': (import 'envoy.extensions.http.custom_response.local_response_policy.v3/local-response-policy.libsonnet'),
  'envoy.extensions.http.custom_response.redirect_policy.v3.RedirectPolicy': (import 'envoy.extensions.http.custom_response.redirect_policy.v3/redirect-policy.libsonnet'),
  'envoy.extensions.http.early_header_mutation.header_mutation.v3.HeaderMutation': (import 'envoy.extensions.http.early_header_mutation.header_mutation.v3/header-mutation.libsonnet'),
  'envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig': (import 'envoy.extensions.http.header_formatters.preserve_case.v3/preserve-case-formatter-config.libsonnet'),
  'envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig.FormatterTypeOnEnvoyHeaders': (import 'envoy.extensions.http.header_formatters.preserve_case.v3/preserve-case-formatter-config-formatter-type-on-envoy-headers.libsonnet'),
  'envoy.extensions.http.header_validators.envoy_default.v3.HeaderValidatorConfig': (import 'envoy.extensions.http.header_validators.envoy_default.v3/header-validator-config.libsonnet'),
  'envoy.extensions.http.header_validators.envoy_default.v3.HeaderValidatorConfig.HeadersWithUnderscoresAction': (import 'envoy.extensions.http.header_validators.envoy_default.v3/header-validator-config-headers-with-underscores-action.libsonnet'),
  'envoy.extensions.http.header_validators.envoy_default.v3.HeaderValidatorConfig.Http1ProtocolOptions': (import 'envoy.extensions.http.header_validators.envoy_default.v3/header-validator-config-http-1-protocol-options.libsonnet'),
  'envoy.extensions.http.header_validators.envoy_default.v3.HeaderValidatorConfig.UriPathNormalizationOptions': (import 'envoy.extensions.http.header_validators.envoy_default.v3/header-validator-config-uri-path-normalization-options.libsonnet'),
  'envoy.extensions.http.header_validators.envoy_default.v3.HeaderValidatorConfig.UriPathNormalizationOptions.PathWithEscapedSlashesAction': (import 'envoy.extensions.http.header_validators.envoy_default.v3/header-validator-config-uri-path-normalization-options-path-with-escaped-slashes-action.libsonnet'),
  'envoy.extensions.http.original_ip_detection.custom_header.v3.CustomHeaderConfig': (import 'envoy.extensions.http.original_ip_detection.custom_header.v3/custom-header-config.libsonnet'),
  'envoy.extensions.http.original_ip_detection.xff.v3.XffConfig': (import 'envoy.extensions.http.original_ip_detection.xff.v3/xff-config.libsonnet'),
  'envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState': (import 'envoy.extensions.http.stateful_session.cookie.v3/cookie-based-session-state.libsonnet'),
  'envoy.extensions.http.stateful_session.header.v3.HeaderBasedSessionState': (import 'envoy.extensions.http.stateful_session.header.v3/header-based-session-state.libsonnet'),
  'envoy.extensions.internal_redirect.allow_listed_routes.v3.AllowListedRoutesConfig': (import 'envoy.extensions.internal_redirect.allow_listed_routes.v3/allow-listed-routes-config.libsonnet'),
  'envoy.extensions.internal_redirect.previous_routes.v3.PreviousRoutesConfig': (import 'envoy.extensions.internal_redirect.previous_routes.v3/previous-routes-config.libsonnet'),
  'envoy.extensions.internal_redirect.safe_cross_scheme.v3.SafeCrossSchemeConfig': (import 'envoy.extensions.internal_redirect.safe_cross_scheme.v3/safe-cross-scheme-config.libsonnet'),
  'envoy.extensions.key_value.file_based.v3.FileBasedKeyValueStoreConfig': (import 'envoy.extensions.key_value.file_based.v3/file-based-key-value-store-config.libsonnet'),
  'envoy.extensions.load_balancing_policies.client_side_weighted_round_robin.v3.ClientSideWeightedRoundRobin': (import 'envoy.extensions.load_balancing_policies.client_side_weighted_round_robin.v3/client-side-weighted-round-robin.libsonnet'),
  'envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig': (import 'envoy.extensions.load_balancing_policies.common.v3/consistent-hashing-lb-config.libsonnet'),
  'envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig': (import 'envoy.extensions.load_balancing_policies.common.v3/locality-lb-config.libsonnet'),
  'envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig.LocalityWeightedLbConfig': (import 'envoy.extensions.load_balancing_policies.common.v3/locality-lb-config-locality-weighted-lb-config.libsonnet'),
  'envoy.extensions.load_balancing_policies.common.v3.LocalityLbConfig.ZoneAwareLbConfig': (import 'envoy.extensions.load_balancing_policies.common.v3/locality-lb-config-zone-aware-lb-config.libsonnet'),
  'envoy.extensions.load_balancing_policies.common.v3.SlowStartConfig': (import 'envoy.extensions.load_balancing_policies.common.v3/slow-start-config.libsonnet'),
  'envoy.extensions.load_balancing_policies.least_request.v3.LeastRequest': (import 'envoy.extensions.load_balancing_policies.least_request.v3/least-request.libsonnet'),
  'envoy.extensions.load_balancing_policies.maglev.v3.Maglev': (import 'envoy.extensions.load_balancing_policies.maglev.v3/maglev.libsonnet'),
  'envoy.extensions.load_balancing_policies.random.v3.Random': (import 'envoy.extensions.load_balancing_policies.random.v3/random.libsonnet'),
  'envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash': (import 'envoy.extensions.load_balancing_policies.ring_hash.v3/ring-hash.libsonnet'),
  'envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash.HashFunction': (import 'envoy.extensions.load_balancing_policies.ring_hash.v3/ring-hash-hash-function.libsonnet'),
  'envoy.extensions.load_balancing_policies.round_robin.v3.RoundRobin': (import 'envoy.extensions.load_balancing_policies.round_robin.v3/round-robin.libsonnet'),
  'envoy.extensions.load_balancing_policies.wrr_locality.v3.WrrLocality': (import 'envoy.extensions.load_balancing_policies.wrr_locality.v3/wrr-locality.libsonnet'),
  'envoy.extensions.matching.common_inputs.environment_variable.v3.Config': (import 'envoy.extensions.matching.common_inputs.environment_variable.v3/config.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.ApplicationProtocolInput': (import 'envoy.extensions.matching.common_inputs.network.v3/application-protocol-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput': (import 'envoy.extensions.matching.common_inputs.network.v3/destination-ip-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.DestinationPortInput': (import 'envoy.extensions.matching.common_inputs.network.v3/destination-port-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.DirectSourceIPInput': (import 'envoy.extensions.matching.common_inputs.network.v3/direct-source-ip-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.ServerNameInput': (import 'envoy.extensions.matching.common_inputs.network.v3/server-name-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.SourceIPInput': (import 'envoy.extensions.matching.common_inputs.network.v3/source-ip-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.SourcePortInput': (import 'envoy.extensions.matching.common_inputs.network.v3/source-port-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.SourceTypeInput': (import 'envoy.extensions.matching.common_inputs.network.v3/source-type-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.network.v3.TransportProtocolInput': (import 'envoy.extensions.matching.common_inputs.network.v3/transport-protocol-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.ssl.v3.DnsSanInput': (import 'envoy.extensions.matching.common_inputs.ssl.v3/dns-san-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.ssl.v3.SubjectInput': (import 'envoy.extensions.matching.common_inputs.ssl.v3/subject-input.libsonnet'),
  'envoy.extensions.matching.common_inputs.ssl.v3.UriSanInput': (import 'envoy.extensions.matching.common_inputs.ssl.v3/uri-san-input.libsonnet'),
  'envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing': (import 'envoy.extensions.matching.input_matchers.consistent_hashing.v3/consistent-hashing.libsonnet'),
  'envoy.extensions.matching.input_matchers.ip.v3.Ip': (import 'envoy.extensions.matching.input_matchers.ip.v3/ip.libsonnet'),
  'envoy.extensions.network.dns_resolver.apple.v3.AppleDnsResolverConfig': (import 'envoy.extensions.network.dns_resolver.apple.v3/apple-dns-resolver-config.libsonnet'),
  'envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig': (import 'envoy.extensions.network.dns_resolver.cares.v3/cares-dns-resolver-config.libsonnet'),
  'envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig': (import 'envoy.extensions.network.dns_resolver.getaddrinfo.v3/get-addr-info-dns-resolver-config.libsonnet'),
  'envoy.extensions.network.socket_interface.v3.DefaultSocketInterface': (import 'envoy.extensions.network.socket_interface.v3/default-socket-interface.libsonnet'),
  'envoy.extensions.path.match.uri_template.v3.UriTemplateMatchConfig': (import 'envoy.extensions.path.match.uri_template.v3/uri-template-match-config.libsonnet'),
  'envoy.extensions.path.rewrite.uri_template.v3.UriTemplateRewriteConfig': (import 'envoy.extensions.path.rewrite.uri_template.v3/uri-template-rewrite-config.libsonnet'),
  'envoy.extensions.quic.connection_id_generator.v3.DeterministicConnectionIdGeneratorConfig': (import 'envoy.extensions.quic.connection_id_generator.v3/deterministic-connection-id-generator-config.libsonnet'),
  'envoy.extensions.quic.crypto_stream.v3.CryptoServerStreamConfig': (import 'envoy.extensions.quic.crypto_stream.v3/crypto-server-stream-config.libsonnet'),
  'envoy.extensions.quic.proof_source.v3.ProofSourceConfig': (import 'envoy.extensions.quic.proof_source.v3/proof-source-config.libsonnet'),
  'envoy.extensions.rate_limit_descriptors.expr.v3.Descriptor': (import 'envoy.extensions.rate_limit_descriptors.expr.v3/descriptor.libsonnet'),
  'envoy.extensions.rbac.matchers.upstream_ip_port.v3.UpstreamIpPortMatcher': (import 'envoy.extensions.rbac.matchers.upstream_ip_port.v3/upstream-ip-port-matcher.libsonnet'),
  'envoy.extensions.regex_engines.v3.GoogleRE2': (import 'envoy.extensions.regex_engines.v3/google-re-2.libsonnet'),
  'envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig': (import 'envoy.extensions.request_id.uuid.v3/uuid-request-id-config.libsonnet'),
  'envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig': (import 'envoy.extensions.resource_monitors.downstream_connections.v3/downstream-connections-config.libsonnet'),
  'envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig': (import 'envoy.extensions.resource_monitors.fixed_heap.v3/fixed-heap-config.libsonnet'),
  'envoy.extensions.resource_monitors.injected_resource.v3.InjectedResourceConfig': (import 'envoy.extensions.resource_monitors.injected_resource.v3/injected-resource-config.libsonnet'),
  'envoy.extensions.retry.host.omit_canary_hosts.v3.OmitCanaryHostsPredicate': (import 'envoy.extensions.retry.host.omit_canary_hosts.v3/omit-canary-hosts-predicate.libsonnet'),
  'envoy.extensions.retry.host.omit_host_metadata.v3.OmitHostMetadataConfig': (import 'envoy.extensions.retry.host.omit_host_metadata.v3/omit-host-metadata-config.libsonnet'),
  'envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate': (import 'envoy.extensions.retry.host.previous_hosts.v3/previous-hosts-predicate.libsonnet'),
  'envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig': (import 'envoy.extensions.retry.priority.previous_priorities.v3/previous-priorities-config.libsonnet'),
  'envoy.extensions.stat_sinks.graphite_statsd.v3.GraphiteStatsdSink': (import 'envoy.extensions.stat_sinks.graphite_statsd.v3/graphite-statsd-sink.libsonnet'),
  'envoy.extensions.stat_sinks.wasm.v3.Wasm': (import 'envoy.extensions.stat_sinks.wasm.v3/wasm.libsonnet'),
  'envoy.extensions.transport_sockets.alts.v3.Alts': (import 'envoy.extensions.transport_sockets.alts.v3/alts.libsonnet'),
  'envoy.extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport': (import 'envoy.extensions.transport_sockets.http_11_proxy.v3/http-11-proxy-upstream-transport.libsonnet'),
  'envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport': (import 'envoy.extensions.transport_sockets.internal_upstream.v3/internal-upstream-transport.libsonnet'),
  'envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport.MetadataValueSource': (import 'envoy.extensions.transport_sockets.internal_upstream.v3/internal-upstream-transport-metadata-value-source.libsonnet'),
  'envoy.extensions.transport_sockets.proxy_protocol.v3.ProxyProtocolUpstreamTransport': (import 'envoy.extensions.transport_sockets.proxy_protocol.v3/proxy-protocol-upstream-transport.libsonnet'),
  'envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport': (import 'envoy.extensions.transport_sockets.quic.v3/quic-downstream-transport.libsonnet'),
  'envoy.extensions.transport_sockets.quic.v3.QuicUpstreamTransport': (import 'envoy.extensions.transport_sockets.quic.v3/quic-upstream-transport.libsonnet'),
  'envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer': (import 'envoy.extensions.transport_sockets.raw_buffer.v3/raw-buffer.libsonnet'),
  'envoy.extensions.transport_sockets.s2a.v3.S2AConfiguration': (import 'envoy.extensions.transport_sockets.s2a.v3/s-2-a-configuration.libsonnet'),
  'envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig': (import 'envoy.extensions.transport_sockets.starttls.v3/start-tls-config.libsonnet'),
  'envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig': (import 'envoy.extensions.transport_sockets.starttls.v3/upstream-start-tls-config.libsonnet'),
  'envoy.extensions.transport_sockets.tap.v3.Tap': (import 'envoy.extensions.transport_sockets.tap.v3/tap.libsonnet'),
  'envoy.extensions.transport_sockets.tcp_stats.v3.Config': (import 'envoy.extensions.transport_sockets.tcp_stats.v3/config.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance': (import 'envoy.extensions.transport_sockets.tls.v3/certificate-provider-plugin-instance.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext': (import 'envoy.extensions.transport_sockets.tls.v3/certificate-validation-context.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification': (import 'envoy.extensions.transport_sockets.tls.v3/certificate-validation-context-trust-chain-verification.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CommonTlsContext': (import 'envoy.extensions.transport_sockets.tls.v3/common-tls-context.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.CertificateProvider': (import 'envoy.extensions.transport_sockets.tls.v3/common-tls-context-certificate-provider.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.CertificateProviderInstance': (import 'envoy.extensions.transport_sockets.tls.v3/common-tls-context-certificate-provider-instance.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.CombinedCertificateValidationContext': (import 'envoy.extensions.transport_sockets.tls.v3/common-tls-context-combined-certificate-validation-context.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext': (import 'envoy.extensions.transport_sockets.tls.v3/downstream-tls-context.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext.OcspStaplePolicy': (import 'envoy.extensions.transport_sockets.tls.v3/downstream-tls-context-ocsp-staple-policy.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.GenericSecret': (import 'envoy.extensions.transport_sockets.tls.v3/generic-secret.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.PrivateKeyProvider': (import 'envoy.extensions.transport_sockets.tls.v3/private-key-provider.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SPIFFECertValidatorConfig': (import 'envoy.extensions.transport_sockets.tls.v3/spiffe-cert-validator-config.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SPIFFECertValidatorConfig.TrustDomain': (import 'envoy.extensions.transport_sockets.tls.v3/spiffe-cert-validator-config-trust-domain.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig': (import 'envoy.extensions.transport_sockets.tls.v3/sds-secret-config.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.Secret': (import 'envoy.extensions.transport_sockets.tls.v3/secret.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher': (import 'envoy.extensions.transport_sockets.tls.v3/subject-alt-name-matcher.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher.SanType': (import 'envoy.extensions.transport_sockets.tls.v3/subject-alt-name-matcher-san-type.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsCertificate': (import 'envoy.extensions.transport_sockets.tls.v3/tls-certificate.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsKeyLog': (import 'envoy.extensions.transport_sockets.tls.v3/tls-key-log.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsParameters': (import 'envoy.extensions.transport_sockets.tls.v3/tls-parameters.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsParameters.TlsProtocol': (import 'envoy.extensions.transport_sockets.tls.v3/tls-parameters-tls-protocol.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsSessionTicketKeys': (import 'envoy.extensions.transport_sockets.tls.v3/tls-session-ticket-keys.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext': (import 'envoy.extensions.transport_sockets.tls.v3/upstream-tls-context.libsonnet'),
  'envoy.extensions.udp_packet_writer.v3.UdpDefaultWriterFactory': (import 'envoy.extensions.udp_packet_writer.v3/udp-default-writer-factory.libsonnet'),
  'envoy.extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory': (import 'envoy.extensions.udp_packet_writer.v3/udp-gso-batch-writer-factory.libsonnet'),
  'envoy.extensions.upstreams.http.generic.v3.GenericConnectionPoolProto': (import 'envoy.extensions.upstreams.http.generic.v3/generic-connection-pool-proto.libsonnet'),
  'envoy.extensions.upstreams.http.http.v3.HttpConnectionPoolProto': (import 'envoy.extensions.upstreams.http.http.v3/http-connection-pool-proto.libsonnet'),
  'envoy.extensions.upstreams.http.tcp.v3.TcpConnectionPoolProto': (import 'envoy.extensions.upstreams.http.tcp.v3/tcp-connection-pool-proto.libsonnet'),
  'envoy.extensions.upstreams.http.v3.HttpProtocolOptions': (import 'envoy.extensions.upstreams.http.v3/http-protocol-options.libsonnet'),
  'envoy.extensions.upstreams.http.v3.HttpProtocolOptions.AutoHttpConfig': (import 'envoy.extensions.upstreams.http.v3/http-protocol-options-auto-http-config.libsonnet'),
  'envoy.extensions.upstreams.http.v3.HttpProtocolOptions.ExplicitHttpConfig': (import 'envoy.extensions.upstreams.http.v3/http-protocol-options-explicit-http-config.libsonnet'),
  'envoy.extensions.upstreams.http.v3.HttpProtocolOptions.UseDownstreamHttpConfig': (import 'envoy.extensions.upstreams.http.v3/http-protocol-options-use-downstream-http-config.libsonnet'),
  'envoy.extensions.upstreams.tcp.generic.v3.GenericConnectionPoolProto': (import 'envoy.extensions.upstreams.tcp.generic.v3/generic-connection-pool-proto.libsonnet'),
  'envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions': (import 'envoy.extensions.upstreams.tcp.v3/tcp-protocol-options.libsonnet'),
  'envoy.extensions.wasm.v3.CapabilityRestrictionConfig': (import 'envoy.extensions.wasm.v3/capability-restriction-config.libsonnet'),
  'envoy.extensions.wasm.v3.CapabilityRestrictionConfig.AllowedCapabilitiesEntry': (import 'envoy.extensions.wasm.v3/capability-restriction-config-allowed-capabilities-entry.libsonnet'),
  'envoy.extensions.wasm.v3.EnvironmentVariables': (import 'envoy.extensions.wasm.v3/environment-variables.libsonnet'),
  'envoy.extensions.wasm.v3.EnvironmentVariables.KeyValuesEntry': (import 'envoy.extensions.wasm.v3/environment-variables-key-values-entry.libsonnet'),
  'envoy.extensions.wasm.v3.PluginConfig': (import 'envoy.extensions.wasm.v3/plugin-config.libsonnet'),
  'envoy.extensions.wasm.v3.SanitizationConfig': (import 'envoy.extensions.wasm.v3/sanitization-config.libsonnet'),
  'envoy.extensions.wasm.v3.VmConfig': (import 'envoy.extensions.wasm.v3/vm-config.libsonnet'),
  'envoy.extensions.wasm.v3.WasmService': (import 'envoy.extensions.wasm.v3/wasm-service.libsonnet'),
  'envoy.extensions.watchdog.profile_action.v3.ProfileActionConfig': (import 'envoy.extensions.watchdog.profile_action.v3/profile-action-config.libsonnet'),
  'envoy.type.http.v3.Cookie': (import 'envoy.type.http.v3/cookie.libsonnet'),
  'envoy.type.http.v3.PathTransformation': (import 'envoy.type.http.v3/path-transformation.libsonnet'),
  'envoy.type.http.v3.PathTransformation.Operation': (import 'envoy.type.http.v3/path-transformation-operation.libsonnet'),
  'envoy.type.http.v3.PathTransformation.Operation.MergeSlashes': (import 'envoy.type.http.v3/path-transformation-operation-merge-slashes.libsonnet'),
  'envoy.type.http.v3.PathTransformation.Operation.NormalizePathRFC3986': (import 'envoy.type.http.v3/path-transformation-operation-normalize-path-rfc-3986.libsonnet'),
  'envoy.type.matcher.v3.DoubleMatcher': (import 'envoy.type.matcher.v3/double-matcher.libsonnet'),
  'envoy.type.matcher.v3.FilterStateMatcher': (import 'envoy.type.matcher.v3/filter-state-matcher.libsonnet'),
  'envoy.type.matcher.v3.ListMatcher': (import 'envoy.type.matcher.v3/list-matcher.libsonnet'),
  'envoy.type.matcher.v3.ListStringMatcher': (import 'envoy.type.matcher.v3/list-string-matcher.libsonnet'),
  'envoy.type.matcher.v3.MetadataMatcher': (import 'envoy.type.matcher.v3/metadata-matcher.libsonnet'),
  'envoy.type.matcher.v3.MetadataMatcher.PathSegment': (import 'envoy.type.matcher.v3/metadata-matcher-path-segment.libsonnet'),
  'envoy.type.matcher.v3.PathMatcher': (import 'envoy.type.matcher.v3/path-matcher.libsonnet'),
  'envoy.type.matcher.v3.RegexMatchAndSubstitute': (import 'envoy.type.matcher.v3/regex-match-and-substitute.libsonnet'),
  'envoy.type.matcher.v3.RegexMatcher': (import 'envoy.type.matcher.v3/regex-matcher.libsonnet'),
  'envoy.type.matcher.v3.RegexMatcher.GoogleRE2': (import 'envoy.type.matcher.v3/regex-matcher-google-re-2.libsonnet'),
  'envoy.type.matcher.v3.StringMatcher': (import 'envoy.type.matcher.v3/string-matcher.libsonnet'),
  'envoy.type.matcher.v3.ValueMatcher': (import 'envoy.type.matcher.v3/value-matcher.libsonnet'),
  'envoy.type.matcher.v3.ValueMatcher.NullMatch': (import 'envoy.type.matcher.v3/value-matcher-null-match.libsonnet'),
  'envoy.type.metadata.v3.MetadataKey': (import 'envoy.type.metadata.v3/metadata-key.libsonnet'),
  'envoy.type.metadata.v3.MetadataKey.PathSegment': (import 'envoy.type.metadata.v3/metadata-key-path-segment.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind': (import 'envoy.type.metadata.v3/metadata-kind.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Cluster': (import 'envoy.type.metadata.v3/metadata-kind-cluster.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Host': (import 'envoy.type.metadata.v3/metadata-kind-host.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Request': (import 'envoy.type.metadata.v3/metadata-kind-request.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Route': (import 'envoy.type.metadata.v3/metadata-kind-route.libsonnet'),
  'envoy.type.tracing.v3.CustomTag': (import 'envoy.type.tracing.v3/custom-tag.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Environment': (import 'envoy.type.tracing.v3/custom-tag-environment.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Header': (import 'envoy.type.tracing.v3/custom-tag-header.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Literal': (import 'envoy.type.tracing.v3/custom-tag-literal.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Metadata': (import 'envoy.type.tracing.v3/custom-tag-metadata.libsonnet'),
  'envoy.type.v3.CodecClientType': (import 'envoy.type.v3/codec-client-type.libsonnet'),
  'envoy.type.v3.DoubleRange': (import 'envoy.type.v3/double-range.libsonnet'),
  'envoy.type.v3.FractionalPercent': (import 'envoy.type.v3/fractional-percent.libsonnet'),
  'envoy.type.v3.FractionalPercent.DenominatorType': (import 'envoy.type.v3/fractional-percent-denominator-type.libsonnet'),
  'envoy.type.v3.HashPolicy': (import 'envoy.type.v3/hash-policy.libsonnet'),
  'envoy.type.v3.HashPolicy.FilterState': (import 'envoy.type.v3/hash-policy-filter-state.libsonnet'),
  'envoy.type.v3.HashPolicy.SourceIp': (import 'envoy.type.v3/hash-policy-source-ip.libsonnet'),
  'envoy.type.v3.HttpStatus': (import 'envoy.type.v3/http-status.libsonnet'),
  'envoy.type.v3.Int32Range': (import 'envoy.type.v3/int-32-range.libsonnet'),
  'envoy.type.v3.Int64Range': (import 'envoy.type.v3/int-64-range.libsonnet'),
  'envoy.type.v3.Percent': (import 'envoy.type.v3/percent.libsonnet'),
  'envoy.type.v3.RateLimitStrategy': (import 'envoy.type.v3/rate-limit-strategy.libsonnet'),
  'envoy.type.v3.RateLimitStrategy.BlanketRule': (import 'envoy.type.v3/rate-limit-strategy-blanket-rule.libsonnet'),
  'envoy.type.v3.RateLimitStrategy.RequestsPerTimeUnit': (import 'envoy.type.v3/rate-limit-strategy-requests-per-time-unit.libsonnet'),
  'envoy.type.v3.RateLimitUnit': (import 'envoy.type.v3/rate-limit-unit.libsonnet'),
  'envoy.type.v3.SemanticVersion': (import 'envoy.type.v3/semantic-version.libsonnet'),
  'envoy.type.v3.StatusCode': (import 'envoy.type.v3/status-code.libsonnet'),
  'envoy.type.v3.TokenBucket': (import 'envoy.type.v3/token-bucket.libsonnet'),
  'google.api.expr.v1alpha1.CheckedExpr': (import 'google.api.expr.v1alpha1/checked-expr.libsonnet'),
  'google.api.expr.v1alpha1.CheckedExpr.ReferenceMapEntry': (import 'google.api.expr.v1alpha1/checked-expr-reference-map-entry.libsonnet'),
  'google.api.expr.v1alpha1.CheckedExpr.TypeMapEntry': (import 'google.api.expr.v1alpha1/checked-expr-type-map-entry.libsonnet'),
  'google.api.expr.v1alpha1.Constant': (import 'google.api.expr.v1alpha1/constant.libsonnet'),
  'google.api.expr.v1alpha1.Decl': (import 'google.api.expr.v1alpha1/decl.libsonnet'),
  'google.api.expr.v1alpha1.Decl.FunctionDecl': (import 'google.api.expr.v1alpha1/decl-function-decl.libsonnet'),
  'google.api.expr.v1alpha1.Decl.FunctionDecl.Overload': (import 'google.api.expr.v1alpha1/decl-function-decl-overload.libsonnet'),
  'google.api.expr.v1alpha1.Decl.IdentDecl': (import 'google.api.expr.v1alpha1/decl-ident-decl.libsonnet'),
  'google.api.expr.v1alpha1.Expr': (import 'google.api.expr.v1alpha1/expr.libsonnet'),
  'google.api.expr.v1alpha1.Expr.Call': (import 'google.api.expr.v1alpha1/expr-call.libsonnet'),
  'google.api.expr.v1alpha1.Expr.Comprehension': (import 'google.api.expr.v1alpha1/expr-comprehension.libsonnet'),
  'google.api.expr.v1alpha1.Expr.CreateList': (import 'google.api.expr.v1alpha1/expr-create-list.libsonnet'),
  'google.api.expr.v1alpha1.Expr.CreateStruct': (import 'google.api.expr.v1alpha1/expr-create-struct.libsonnet'),
  'google.api.expr.v1alpha1.Expr.CreateStruct.Entry': (import 'google.api.expr.v1alpha1/expr-create-struct-entry.libsonnet'),
  'google.api.expr.v1alpha1.Expr.Ident': (import 'google.api.expr.v1alpha1/expr-ident.libsonnet'),
  'google.api.expr.v1alpha1.Expr.Select': (import 'google.api.expr.v1alpha1/expr-select.libsonnet'),
  'google.api.expr.v1alpha1.ParsedExpr': (import 'google.api.expr.v1alpha1/parsed-expr.libsonnet'),
  'google.api.expr.v1alpha1.Reference': (import 'google.api.expr.v1alpha1/reference.libsonnet'),
  'google.api.expr.v1alpha1.SourceInfo': (import 'google.api.expr.v1alpha1/source-info.libsonnet'),
  'google.api.expr.v1alpha1.SourceInfo.MacroCallsEntry': (import 'google.api.expr.v1alpha1/source-info-macro-calls-entry.libsonnet'),
  'google.api.expr.v1alpha1.SourceInfo.PositionsEntry': (import 'google.api.expr.v1alpha1/source-info-positions-entry.libsonnet'),
  'google.api.expr.v1alpha1.SourcePosition': (import 'google.api.expr.v1alpha1/source-position.libsonnet'),
  'google.api.expr.v1alpha1.Type': (import 'google.api.expr.v1alpha1/type.libsonnet'),
  'google.api.expr.v1alpha1.Type.AbstractType': (import 'google.api.expr.v1alpha1/type-abstract-type.libsonnet'),
  'google.api.expr.v1alpha1.Type.FunctionType': (import 'google.api.expr.v1alpha1/type-function-type.libsonnet'),
  'google.api.expr.v1alpha1.Type.ListType': (import 'google.api.expr.v1alpha1/type-list-type.libsonnet'),
  'google.api.expr.v1alpha1.Type.MapType': (import 'google.api.expr.v1alpha1/type-map-type.libsonnet'),
  'google.api.expr.v1alpha1.Type.PrimitiveType': (import 'google.api.expr.v1alpha1/type-primitive-type.libsonnet'),
  'google.api.expr.v1alpha1.Type.WellKnownType': (import 'google.api.expr.v1alpha1/type-well-known-type.libsonnet'),
  'google.protobuf.Any': (import 'google.protobuf/any.libsonnet'),
  'google.protobuf.BoolValue': (import 'google.protobuf/bool-value.libsonnet'),
  'google.protobuf.BytesValue': (import 'google.protobuf/bytes-value.libsonnet'),
  'google.protobuf.DescriptorProto': (import 'google.protobuf/descriptor-proto.libsonnet'),
  'google.protobuf.DescriptorProto.ExtensionRange': (import 'google.protobuf/descriptor-proto-extension-range.libsonnet'),
  'google.protobuf.DescriptorProto.ReservedRange': (import 'google.protobuf/descriptor-proto-reserved-range.libsonnet'),
  'google.protobuf.DoubleValue': (import 'google.protobuf/double-value.libsonnet'),
  'google.protobuf.Duration': (import 'google.protobuf/duration.libsonnet'),
  'google.protobuf.Empty': (import 'google.protobuf/empty.libsonnet'),
  'google.protobuf.EnumDescriptorProto': (import 'google.protobuf/enum-descriptor-proto.libsonnet'),
  'google.protobuf.EnumDescriptorProto.EnumReservedRange': (import 'google.protobuf/enum-descriptor-proto-enum-reserved-range.libsonnet'),
  'google.protobuf.EnumOptions': (import 'google.protobuf/enum-options.libsonnet'),
  'google.protobuf.EnumValueDescriptorProto': (import 'google.protobuf/enum-value-descriptor-proto.libsonnet'),
  'google.protobuf.EnumValueOptions': (import 'google.protobuf/enum-value-options.libsonnet'),
  'google.protobuf.ExtensionRangeOptions': (import 'google.protobuf/extension-range-options.libsonnet'),
  'google.protobuf.FieldDescriptorProto': (import 'google.protobuf/field-descriptor-proto.libsonnet'),
  'google.protobuf.FieldDescriptorProto.Label': (import 'google.protobuf/field-descriptor-proto-label.libsonnet'),
  'google.protobuf.FieldDescriptorProto.Type': (import 'google.protobuf/field-descriptor-proto-type.libsonnet'),
  'google.protobuf.FieldOptions': (import 'google.protobuf/field-options.libsonnet'),
  'google.protobuf.FieldOptions.CType': (import 'google.protobuf/field-options-c-type.libsonnet'),
  'google.protobuf.FieldOptions.JSType': (import 'google.protobuf/field-options-js-type.libsonnet'),
  'google.protobuf.FileDescriptorProto': (import 'google.protobuf/file-descriptor-proto.libsonnet'),
  'google.protobuf.FileDescriptorSet': (import 'google.protobuf/file-descriptor-set.libsonnet'),
  'google.protobuf.FileOptions': (import 'google.protobuf/file-options.libsonnet'),
  'google.protobuf.FileOptions.OptimizeMode': (import 'google.protobuf/file-options-optimize-mode.libsonnet'),
  'google.protobuf.FloatValue': (import 'google.protobuf/float-value.libsonnet'),
  'google.protobuf.GeneratedCodeInfo': (import 'google.protobuf/generated-code-info.libsonnet'),
  'google.protobuf.GeneratedCodeInfo.Annotation': (import 'google.protobuf/generated-code-info-annotation.libsonnet'),
  'google.protobuf.Int32Value': (import 'google.protobuf/int-32-value.libsonnet'),
  'google.protobuf.Int64Value': (import 'google.protobuf/int-64-value.libsonnet'),
  'google.protobuf.ListValue': (import 'google.protobuf/list-value.libsonnet'),
  'google.protobuf.MessageOptions': (import 'google.protobuf/message-options.libsonnet'),
  'google.protobuf.MethodDescriptorProto': (import 'google.protobuf/method-descriptor-proto.libsonnet'),
  'google.protobuf.MethodOptions': (import 'google.protobuf/method-options.libsonnet'),
  'google.protobuf.MethodOptions.IdempotencyLevel': (import 'google.protobuf/method-options-idempotency-level.libsonnet'),
  'google.protobuf.NullValue': (import 'google.protobuf/null-value.libsonnet'),
  'google.protobuf.OneofDescriptorProto': (import 'google.protobuf/oneof-descriptor-proto.libsonnet'),
  'google.protobuf.OneofOptions': (import 'google.protobuf/oneof-options.libsonnet'),
  'google.protobuf.ServiceDescriptorProto': (import 'google.protobuf/service-descriptor-proto.libsonnet'),
  'google.protobuf.ServiceOptions': (import 'google.protobuf/service-options.libsonnet'),
  'google.protobuf.SourceCodeInfo': (import 'google.protobuf/source-code-info.libsonnet'),
  'google.protobuf.SourceCodeInfo.Location': (import 'google.protobuf/source-code-info-location.libsonnet'),
  'google.protobuf.StringValue': (import 'google.protobuf/string-value.libsonnet'),
  'google.protobuf.Struct': (import 'google.protobuf/struct.libsonnet'),
  'google.protobuf.Struct.FieldsEntry': (import 'google.protobuf/struct-fields-entry.libsonnet'),
  'google.protobuf.Timestamp': (import 'google.protobuf/timestamp.libsonnet'),
  'google.protobuf.UInt32Value': (import 'google.protobuf/u-int-32-value.libsonnet'),
  'google.protobuf.UInt64Value': (import 'google.protobuf/u-int-64-value.libsonnet'),
  'google.protobuf.UninterpretedOption': (import 'google.protobuf/uninterpreted-option.libsonnet'),
  'google.protobuf.UninterpretedOption.NamePart': (import 'google.protobuf/uninterpreted-option-name-part.libsonnet'),
  'google.protobuf.Value': (import 'google.protobuf/value.libsonnet'),
  'google.rpc.Status': (import 'google.rpc/status.libsonnet'),
  'opentelemetry.proto.common.v1.AnyValue': (import 'opentelemetry.proto.common.v1/any-value.libsonnet'),
  'opentelemetry.proto.common.v1.ArrayValue': (import 'opentelemetry.proto.common.v1/array-value.libsonnet'),
  'opentelemetry.proto.common.v1.InstrumentationScope': (import 'opentelemetry.proto.common.v1/instrumentation-scope.libsonnet'),
  'opentelemetry.proto.common.v1.KeyValue': (import 'opentelemetry.proto.common.v1/key-value.libsonnet'),
  'opentelemetry.proto.common.v1.KeyValueList': (import 'opentelemetry.proto.common.v1/key-value-list.libsonnet'),
  'udpa.annotations.FieldMigrateAnnotation': (import 'udpa.annotations/field-migrate-annotation.libsonnet'),
  'udpa.annotations.FieldSecurityAnnotation': (import 'udpa.annotations/field-security-annotation.libsonnet'),
  'udpa.annotations.FileMigrateAnnotation': (import 'udpa.annotations/file-migrate-annotation.libsonnet'),
  'udpa.annotations.MigrateAnnotation': (import 'udpa.annotations/migrate-annotation.libsonnet'),
  'udpa.annotations.PackageVersionStatus': (import 'udpa.annotations/package-version-status.libsonnet'),
  'udpa.annotations.StatusAnnotation': (import 'udpa.annotations/status-annotation.libsonnet'),
  'udpa.annotations.VersioningAnnotation': (import 'udpa.annotations/versioning-annotation.libsonnet'),
  'validate.AnyRules': (import 'validate/any-rules.libsonnet'),
  'validate.BoolRules': (import 'validate/bool-rules.libsonnet'),
  'validate.BytesRules': (import 'validate/bytes-rules.libsonnet'),
  'validate.DoubleRules': (import 'validate/double-rules.libsonnet'),
  'validate.DurationRules': (import 'validate/duration-rules.libsonnet'),
  'validate.EnumRules': (import 'validate/enum-rules.libsonnet'),
  'validate.FieldRules': (import 'validate/field-rules.libsonnet'),
  'validate.Fixed32Rules': (import 'validate/fixed-32-rules.libsonnet'),
  'validate.Fixed64Rules': (import 'validate/fixed-64-rules.libsonnet'),
  'validate.FloatRules': (import 'validate/float-rules.libsonnet'),
  'validate.Int32Rules': (import 'validate/int-32-rules.libsonnet'),
  'validate.Int64Rules': (import 'validate/int-64-rules.libsonnet'),
  'validate.KnownRegex': (import 'validate/known-regex.libsonnet'),
  'validate.MapRules': (import 'validate/map-rules.libsonnet'),
  'validate.MessageRules': (import 'validate/message-rules.libsonnet'),
  'validate.RepeatedRules': (import 'validate/repeated-rules.libsonnet'),
  'validate.SFixed32Rules': (import 'validate/s-fixed-32-rules.libsonnet'),
  'validate.SFixed64Rules': (import 'validate/s-fixed-64-rules.libsonnet'),
  'validate.SInt32Rules': (import 'validate/s-int-32-rules.libsonnet'),
  'validate.SInt64Rules': (import 'validate/s-int-64-rules.libsonnet'),
  'validate.StringRules': (import 'validate/string-rules.libsonnet'),
  'validate.TimestampRules': (import 'validate/timestamp-rules.libsonnet'),
  'validate.UInt32Rules': (import 'validate/u-int-32-rules.libsonnet'),
  'validate.UInt64Rules': (import 'validate/u-int-64-rules.libsonnet'),
  'xds.annotations.v3.FieldStatusAnnotation': (import 'xds.annotations.v3/field-status-annotation.libsonnet'),
  'xds.annotations.v3.FileStatusAnnotation': (import 'xds.annotations.v3/file-status-annotation.libsonnet'),
  'xds.annotations.v3.MessageStatusAnnotation': (import 'xds.annotations.v3/message-status-annotation.libsonnet'),
  'xds.annotations.v3.PackageVersionStatus': (import 'xds.annotations.v3/package-version-status.libsonnet'),
  'xds.annotations.v3.StatusAnnotation': (import 'xds.annotations.v3/status-annotation.libsonnet'),
  'xds.core.v3.Authority': (import 'xds.core.v3/authority.libsonnet'),
  'xds.core.v3.CollectionEntry': (import 'xds.core.v3/collection-entry.libsonnet'),
  'xds.core.v3.CollectionEntry.InlineEntry': (import 'xds.core.v3/collection-entry-inline-entry.libsonnet'),
  'xds.core.v3.ContextParams': (import 'xds.core.v3/context-params.libsonnet'),
  'xds.core.v3.ContextParams.ParamsEntry': (import 'xds.core.v3/context-params-params-entry.libsonnet'),
  'xds.core.v3.ResourceLocator': (import 'xds.core.v3/resource-locator.libsonnet'),
  'xds.core.v3.ResourceLocator.Directive': (import 'xds.core.v3/resource-locator-directive.libsonnet'),
  'xds.core.v3.ResourceLocator.Scheme': (import 'xds.core.v3/resource-locator-scheme.libsonnet'),
  'xds.core.v3.TypedExtensionConfig': (import 'xds.core.v3/typed-extension-config.libsonnet'),
  'xds.type.matcher.v3.ListStringMatcher': (import 'xds.type.matcher.v3/list-string-matcher.libsonnet'),
  'xds.type.matcher.v3.Matcher': (import 'xds.type.matcher.v3/matcher.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList': (import 'xds.type.matcher.v3/matcher-matcher-list.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.FieldMatcher': (import 'xds.type.matcher.v3/matcher-matcher-list-field-matcher.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.Predicate': (import 'xds.type.matcher.v3/matcher-matcher-list-predicate.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.Predicate.PredicateList': (import 'xds.type.matcher.v3/matcher-matcher-list-predicate-predicate-list.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.Predicate.SinglePredicate': (import 'xds.type.matcher.v3/matcher-matcher-list-predicate-single-predicate.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherTree': (import 'xds.type.matcher.v3/matcher-matcher-tree.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherTree.MatchMap': (import 'xds.type.matcher.v3/matcher-matcher-tree-match-map.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherTree.MatchMap.MapEntry': (import 'xds.type.matcher.v3/matcher-matcher-tree-match-map-map-entry.libsonnet'),
  'xds.type.matcher.v3.Matcher.OnMatch': (import 'xds.type.matcher.v3/matcher-on-match.libsonnet'),
  'xds.type.matcher.v3.RegexMatcher': (import 'xds.type.matcher.v3/regex-matcher.libsonnet'),
  'xds.type.matcher.v3.RegexMatcher.GoogleRE2': (import 'xds.type.matcher.v3/regex-matcher-google-re-2.libsonnet'),
  'xds.type.matcher.v3.StringMatcher': (import 'xds.type.matcher.v3/string-matcher.libsonnet'),
}
