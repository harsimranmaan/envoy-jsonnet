{
  'envoy.config.accesslog.v3.AccessLog': (import 'envoy.config.accesslog.v3/access-log.libsonnet'),
  'envoy.config.accesslog.v3.AccessLogFilter': (import 'envoy.config.accesslog.v3/access-log-filter.libsonnet'),
  'envoy.config.accesslog.v3.AndFilter': (import 'envoy.config.accesslog.v3/and-filter.libsonnet'),
  'envoy.config.accesslog.v3.ComparisonFilter': (import 'envoy.config.accesslog.v3/comparison-filter.libsonnet'),
  'envoy.config.accesslog.v3.ComparisonFilter.Op': (import 'envoy.config.accesslog.v3/comparison-filter-op.libsonnet'),
  'envoy.config.accesslog.v3.DurationFilter': (import 'envoy.config.accesslog.v3/duration-filter.libsonnet'),
  'envoy.config.accesslog.v3.ExtensionFilter': (import 'envoy.config.accesslog.v3/extension-filter.libsonnet'),
  'envoy.config.accesslog.v3.GrpcStatusFilter': (import 'envoy.config.accesslog.v3/grpc-status-filter.libsonnet'),
  'envoy.config.accesslog.v3.GrpcStatusFilter.Status': (import 'envoy.config.accesslog.v3/grpc-status-filter-status.libsonnet'),
  'envoy.config.accesslog.v3.HeaderFilter': (import 'envoy.config.accesslog.v3/header-filter.libsonnet'),
  'envoy.config.accesslog.v3.MetadataFilter': (import 'envoy.config.accesslog.v3/metadata-filter.libsonnet'),
  'envoy.config.accesslog.v3.NotHealthCheckFilter': (import 'envoy.config.accesslog.v3/not-health-check-filter.libsonnet'),
  'envoy.config.accesslog.v3.OrFilter': (import 'envoy.config.accesslog.v3/or-filter.libsonnet'),
  'envoy.config.accesslog.v3.ResponseFlagFilter': (import 'envoy.config.accesslog.v3/response-flag-filter.libsonnet'),
  'envoy.config.accesslog.v3.RuntimeFilter': (import 'envoy.config.accesslog.v3/runtime-filter.libsonnet'),
  'envoy.config.accesslog.v3.StatusCodeFilter': (import 'envoy.config.accesslog.v3/status-code-filter.libsonnet'),
  'envoy.config.accesslog.v3.TraceableFilter': (import 'envoy.config.accesslog.v3/traceable-filter.libsonnet'),
  'envoy.config.bootstrap.v3.Admin': (import 'envoy.config.bootstrap.v3/admin.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap': (import 'envoy.config.bootstrap.v3/bootstrap.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap.CertificateProviderInstancesEntry': (import 'envoy.config.bootstrap.v3/bootstrap-certificate-provider-instances-entry.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap.DynamicResources': (import 'envoy.config.bootstrap.v3/bootstrap-dynamic-resources.libsonnet'),
  'envoy.config.bootstrap.v3.Bootstrap.StaticResources': (import 'envoy.config.bootstrap.v3/bootstrap-static-resources.libsonnet'),
  'envoy.config.bootstrap.v3.ClusterManager': (import 'envoy.config.bootstrap.v3/cluster-manager.libsonnet'),
  'envoy.config.bootstrap.v3.ClusterManager.OutlierDetection': (import 'envoy.config.bootstrap.v3/cluster-manager-outlier-detection.libsonnet'),
  'envoy.config.bootstrap.v3.CustomInlineHeader': (import 'envoy.config.bootstrap.v3/custom-inline-header.libsonnet'),
  'envoy.config.bootstrap.v3.CustomInlineHeader.InlineHeaderType': (import 'envoy.config.bootstrap.v3/custom-inline-header-inline-header-type.libsonnet'),
  'envoy.config.bootstrap.v3.FatalAction': (import 'envoy.config.bootstrap.v3/fatal-action.libsonnet'),
  'envoy.config.bootstrap.v3.LayeredRuntime': (import 'envoy.config.bootstrap.v3/layered-runtime.libsonnet'),
  'envoy.config.bootstrap.v3.Runtime': (import 'envoy.config.bootstrap.v3/runtime.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer': (import 'envoy.config.bootstrap.v3/runtime-layer.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer.AdminLayer': (import 'envoy.config.bootstrap.v3/runtime-layer-admin-layer.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer.DiskLayer': (import 'envoy.config.bootstrap.v3/runtime-layer-disk-layer.libsonnet'),
  'envoy.config.bootstrap.v3.RuntimeLayer.RtdsLayer': (import 'envoy.config.bootstrap.v3/runtime-layer-rtds-layer.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdog': (import 'envoy.config.bootstrap.v3/watchdog.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdog.WatchdogAction': (import 'envoy.config.bootstrap.v3/watchdog-watchdog-action.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdog.WatchdogAction.WatchdogEvent': (import 'envoy.config.bootstrap.v3/watchdog-watchdog-action-watchdog-event.libsonnet'),
  'envoy.config.bootstrap.v3.Watchdogs': (import 'envoy.config.bootstrap.v3/watchdogs.libsonnet'),
  'envoy.config.cluster.v3.CircuitBreakers': (import 'envoy.config.cluster.v3/circuit-breakers.libsonnet'),
  'envoy.config.cluster.v3.CircuitBreakers.Thresholds': (import 'envoy.config.cluster.v3/circuit-breakers-thresholds.libsonnet'),
  'envoy.config.cluster.v3.CircuitBreakers.Thresholds.RetryBudget': (import 'envoy.config.cluster.v3/circuit-breakers-thresholds-retry-budget.libsonnet'),
  'envoy.config.cluster.v3.Cluster': (import 'envoy.config.cluster.v3/cluster.libsonnet'),
  'envoy.config.cluster.v3.Cluster.ClusterProtocolSelection': (import 'envoy.config.cluster.v3/cluster-cluster-protocol-selection.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig.ConsistentHashingLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config-consistent-hashing-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig.LocalityWeightedLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config-locality-weighted-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CommonLbConfig.ZoneAwareLbConfig': (import 'envoy.config.cluster.v3/cluster-common-lb-config-zone-aware-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.CustomClusterType': (import 'envoy.config.cluster.v3/cluster-custom-cluster-type.libsonnet'),
  'envoy.config.cluster.v3.Cluster.DiscoveryType': (import 'envoy.config.cluster.v3/cluster-discovery-type.libsonnet'),
  'envoy.config.cluster.v3.Cluster.DnsLookupFamily': (import 'envoy.config.cluster.v3/cluster-dns-lookup-family.libsonnet'),
  'envoy.config.cluster.v3.Cluster.EdsClusterConfig': (import 'envoy.config.cluster.v3/cluster-eds-cluster-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbPolicy': (import 'envoy.config.cluster.v3/cluster-lb-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig': (import 'envoy.config.cluster.v3/cluster-lb-subset-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetFallbackPolicy': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-fallback-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetMetadataFallbackPolicy': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-metadata-fallback-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetSelector': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-selector.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LbSubsetConfig.LbSubsetSelector.LbSubsetSelectorFallbackPolicy': (import 'envoy.config.cluster.v3/cluster-lb-subset-config-lb-subset-selector-lb-subset-selector-fallback-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.LeastRequestLbConfig': (import 'envoy.config.cluster.v3/cluster-least-request-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.MaglevLbConfig': (import 'envoy.config.cluster.v3/cluster-maglev-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.OriginalDstLbConfig': (import 'envoy.config.cluster.v3/cluster-original-dst-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.PreconnectPolicy': (import 'envoy.config.cluster.v3/cluster-preconnect-policy.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RefreshRate': (import 'envoy.config.cluster.v3/cluster-refresh-rate.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RingHashLbConfig': (import 'envoy.config.cluster.v3/cluster-ring-hash-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RingHashLbConfig.HashFunction': (import 'envoy.config.cluster.v3/cluster-ring-hash-lb-config-hash-function.libsonnet'),
  'envoy.config.cluster.v3.Cluster.RoundRobinLbConfig': (import 'envoy.config.cluster.v3/cluster-round-robin-lb-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.SlowStartConfig': (import 'envoy.config.cluster.v3/cluster-slow-start-config.libsonnet'),
  'envoy.config.cluster.v3.Cluster.TransportSocketMatch': (import 'envoy.config.cluster.v3/cluster-transport-socket-match.libsonnet'),
  'envoy.config.cluster.v3.Cluster.TypedExtensionProtocolOptionsEntry': (import 'envoy.config.cluster.v3/cluster-typed-extension-protocol-options-entry.libsonnet'),
  'envoy.config.cluster.v3.ClusterCollection': (import 'envoy.config.cluster.v3/cluster-collection.libsonnet'),
  'envoy.config.cluster.v3.Filter': (import 'envoy.config.cluster.v3/filter.libsonnet'),
  'envoy.config.cluster.v3.LoadBalancingPolicy': (import 'envoy.config.cluster.v3/load-balancing-policy.libsonnet'),
  'envoy.config.cluster.v3.LoadBalancingPolicy.Policy': (import 'envoy.config.cluster.v3/load-balancing-policy-policy.libsonnet'),
  'envoy.config.cluster.v3.OutlierDetection': (import 'envoy.config.cluster.v3/outlier-detection.libsonnet'),
  'envoy.config.cluster.v3.TrackClusterStats': (import 'envoy.config.cluster.v3/track-cluster-stats.libsonnet'),
  'envoy.config.cluster.v3.UpstreamConnectionOptions': (import 'envoy.config.cluster.v3/upstream-connection-options.libsonnet'),
  'envoy.config.core.v3.Address': (import 'envoy.config.core.v3/address.libsonnet'),
  'envoy.config.core.v3.AggregatedConfigSource': (import 'envoy.config.core.v3/aggregated-config-source.libsonnet'),
  'envoy.config.core.v3.AlternateProtocolsCacheOptions': (import 'envoy.config.core.v3/alternate-protocols-cache-options.libsonnet'),
  'envoy.config.core.v3.AlternateProtocolsCacheOptions.AlternateProtocolsCacheEntry': (import 'envoy.config.core.v3/alternate-protocols-cache-options-alternate-protocols-cache-entry.libsonnet'),
  'envoy.config.core.v3.ApiConfigSource': (import 'envoy.config.core.v3/api-config-source.libsonnet'),
  'envoy.config.core.v3.ApiConfigSource.ApiType': (import 'envoy.config.core.v3/api-config-source-api-type.libsonnet'),
  'envoy.config.core.v3.ApiVersion': (import 'envoy.config.core.v3/api-version.libsonnet'),
  'envoy.config.core.v3.AsyncDataSource': (import 'envoy.config.core.v3/async-data-source.libsonnet'),
  'envoy.config.core.v3.BackoffStrategy': (import 'envoy.config.core.v3/backoff-strategy.libsonnet'),
  'envoy.config.core.v3.BindConfig': (import 'envoy.config.core.v3/bind-config.libsonnet'),
  'envoy.config.core.v3.BuildVersion': (import 'envoy.config.core.v3/build-version.libsonnet'),
  'envoy.config.core.v3.CidrRange': (import 'envoy.config.core.v3/cidr-range.libsonnet'),
  'envoy.config.core.v3.ConfigSource': (import 'envoy.config.core.v3/config-source.libsonnet'),
  'envoy.config.core.v3.ControlPlane': (import 'envoy.config.core.v3/control-plane.libsonnet'),
  'envoy.config.core.v3.DataSource': (import 'envoy.config.core.v3/data-source.libsonnet'),
  'envoy.config.core.v3.DnsResolutionConfig': (import 'envoy.config.core.v3/dns-resolution-config.libsonnet'),
  'envoy.config.core.v3.DnsResolverOptions': (import 'envoy.config.core.v3/dns-resolver-options.libsonnet'),
  'envoy.config.core.v3.EnvoyInternalAddress': (import 'envoy.config.core.v3/envoy-internal-address.libsonnet'),
  'envoy.config.core.v3.EventServiceConfig': (import 'envoy.config.core.v3/event-service-config.libsonnet'),
  'envoy.config.core.v3.Extension': (import 'envoy.config.core.v3/extension.libsonnet'),
  'envoy.config.core.v3.ExtensionConfigSource': (import 'envoy.config.core.v3/extension-config-source.libsonnet'),
  'envoy.config.core.v3.ExtraSourceAddress': (import 'envoy.config.core.v3/extra-source-address.libsonnet'),
  'envoy.config.core.v3.GrpcProtocolOptions': (import 'envoy.config.core.v3/grpc-protocol-options.libsonnet'),
  'envoy.config.core.v3.GrpcService': (import 'envoy.config.core.v3/grpc-service.libsonnet'),
  'envoy.config.core.v3.GrpcService.EnvoyGrpc': (import 'envoy.config.core.v3/grpc-service-envoy-grpc.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc': (import 'envoy.config.core.v3/grpc-service-google-grpc.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-google-iam-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-metadata-credentials-from-plugin.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-service-account-jwt-access-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.CallCredentials.StsService': (import 'envoy.config.core.v3/grpc-service-google-grpc-call-credentials-sts-service.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelArgs': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-args.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelArgs.ArgsEntry': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-args-args-entry.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelArgs.Value': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-args-value.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.ChannelCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-channel-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.GoogleLocalCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-google-local-credentials.libsonnet'),
  'envoy.config.core.v3.GrpcService.GoogleGrpc.SslCredentials': (import 'envoy.config.core.v3/grpc-service-google-grpc-ssl-credentials.libsonnet'),
  'envoy.config.core.v3.HeaderMap': (import 'envoy.config.core.v3/header-map.libsonnet'),
  'envoy.config.core.v3.HeaderValue': (import 'envoy.config.core.v3/header-value.libsonnet'),
  'envoy.config.core.v3.HeaderValueOption': (import 'envoy.config.core.v3/header-value-option.libsonnet'),
  'envoy.config.core.v3.HeaderValueOption.HeaderAppendAction': (import 'envoy.config.core.v3/header-value-option-header-append-action.libsonnet'),
  'envoy.config.core.v3.HealthCheck': (import 'envoy.config.core.v3/health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.CustomHealthCheck': (import 'envoy.config.core.v3/health-check-custom-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.GrpcHealthCheck': (import 'envoy.config.core.v3/health-check-grpc-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.HttpHealthCheck': (import 'envoy.config.core.v3/health-check-http-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.Payload': (import 'envoy.config.core.v3/health-check-payload.libsonnet'),
  'envoy.config.core.v3.HealthCheck.RedisHealthCheck': (import 'envoy.config.core.v3/health-check-redis-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.TcpHealthCheck': (import 'envoy.config.core.v3/health-check-tcp-health-check.libsonnet'),
  'envoy.config.core.v3.HealthCheck.TlsOptions': (import 'envoy.config.core.v3/health-check-tls-options.libsonnet'),
  'envoy.config.core.v3.HealthStatus': (import 'envoy.config.core.v3/health-status.libsonnet'),
  'envoy.config.core.v3.HealthStatusSet': (import 'envoy.config.core.v3/health-status-set.libsonnet'),
  'envoy.config.core.v3.Http1ProtocolOptions': (import 'envoy.config.core.v3/http-1-protocol-options.libsonnet'),
  'envoy.config.core.v3.Http1ProtocolOptions.HeaderKeyFormat': (import 'envoy.config.core.v3/http-1-protocol-options-header-key-format.libsonnet'),
  'envoy.config.core.v3.Http1ProtocolOptions.HeaderKeyFormat.ProperCaseWords': (import 'envoy.config.core.v3/http-1-protocol-options-header-key-format-proper-case-words.libsonnet'),
  'envoy.config.core.v3.Http2ProtocolOptions': (import 'envoy.config.core.v3/http-2-protocol-options.libsonnet'),
  'envoy.config.core.v3.Http2ProtocolOptions.SettingsParameter': (import 'envoy.config.core.v3/http-2-protocol-options-settings-parameter.libsonnet'),
  'envoy.config.core.v3.Http3ProtocolOptions': (import 'envoy.config.core.v3/http-3-protocol-options.libsonnet'),
  'envoy.config.core.v3.HttpProtocolOptions': (import 'envoy.config.core.v3/http-protocol-options.libsonnet'),
  'envoy.config.core.v3.HttpProtocolOptions.HeadersWithUnderscoresAction': (import 'envoy.config.core.v3/http-protocol-options-headers-with-underscores-action.libsonnet'),
  'envoy.config.core.v3.HttpUri': (import 'envoy.config.core.v3/http-uri.libsonnet'),
  'envoy.config.core.v3.KeepaliveSettings': (import 'envoy.config.core.v3/keepalive-settings.libsonnet'),
  'envoy.config.core.v3.Locality': (import 'envoy.config.core.v3/locality.libsonnet'),
  'envoy.config.core.v3.Metadata': (import 'envoy.config.core.v3/metadata.libsonnet'),
  'envoy.config.core.v3.Metadata.FilterMetadataEntry': (import 'envoy.config.core.v3/metadata-filter-metadata-entry.libsonnet'),
  'envoy.config.core.v3.Metadata.TypedFilterMetadataEntry': (import 'envoy.config.core.v3/metadata-typed-filter-metadata-entry.libsonnet'),
  'envoy.config.core.v3.Node': (import 'envoy.config.core.v3/node.libsonnet'),
  'envoy.config.core.v3.Node.DynamicParametersEntry': (import 'envoy.config.core.v3/node-dynamic-parameters-entry.libsonnet'),
  'envoy.config.core.v3.PathConfigSource': (import 'envoy.config.core.v3/path-config-source.libsonnet'),
  'envoy.config.core.v3.Pipe': (import 'envoy.config.core.v3/pipe.libsonnet'),
  'envoy.config.core.v3.ProxyProtocolConfig': (import 'envoy.config.core.v3/proxy-protocol-config.libsonnet'),
  'envoy.config.core.v3.ProxyProtocolConfig.Version': (import 'envoy.config.core.v3/proxy-protocol-config-version.libsonnet'),
  'envoy.config.core.v3.QueryParameter': (import 'envoy.config.core.v3/query-parameter.libsonnet'),
  'envoy.config.core.v3.QuicKeepAliveSettings': (import 'envoy.config.core.v3/quic-keep-alive-settings.libsonnet'),
  'envoy.config.core.v3.QuicProtocolOptions': (import 'envoy.config.core.v3/quic-protocol-options.libsonnet'),
  'envoy.config.core.v3.RateLimitSettings': (import 'envoy.config.core.v3/rate-limit-settings.libsonnet'),
  'envoy.config.core.v3.RemoteDataSource': (import 'envoy.config.core.v3/remote-data-source.libsonnet'),
  'envoy.config.core.v3.RequestMethod': (import 'envoy.config.core.v3/request-method.libsonnet'),
  'envoy.config.core.v3.RetryPolicy': (import 'envoy.config.core.v3/retry-policy.libsonnet'),
  'envoy.config.core.v3.RoutingPriority': (import 'envoy.config.core.v3/routing-priority.libsonnet'),
  'envoy.config.core.v3.RuntimeDouble': (import 'envoy.config.core.v3/runtime-double.libsonnet'),
  'envoy.config.core.v3.RuntimeFeatureFlag': (import 'envoy.config.core.v3/runtime-feature-flag.libsonnet'),
  'envoy.config.core.v3.RuntimeFractionalPercent': (import 'envoy.config.core.v3/runtime-fractional-percent.libsonnet'),
  'envoy.config.core.v3.RuntimePercent': (import 'envoy.config.core.v3/runtime-percent.libsonnet'),
  'envoy.config.core.v3.RuntimeUInt32': (import 'envoy.config.core.v3/runtime-u-int-32.libsonnet'),
  'envoy.config.core.v3.SchemeHeaderTransformation': (import 'envoy.config.core.v3/scheme-header-transformation.libsonnet'),
  'envoy.config.core.v3.SelfConfigSource': (import 'envoy.config.core.v3/self-config-source.libsonnet'),
  'envoy.config.core.v3.SocketAddress': (import 'envoy.config.core.v3/socket-address.libsonnet'),
  'envoy.config.core.v3.SocketAddress.Protocol': (import 'envoy.config.core.v3/socket-address-protocol.libsonnet'),
  'envoy.config.core.v3.SocketOption': (import 'envoy.config.core.v3/socket-option.libsonnet'),
  'envoy.config.core.v3.SocketOption.SocketState': (import 'envoy.config.core.v3/socket-option-socket-state.libsonnet'),
  'envoy.config.core.v3.SocketOptionsOverride': (import 'envoy.config.core.v3/socket-options-override.libsonnet'),
  'envoy.config.core.v3.TcpKeepalive': (import 'envoy.config.core.v3/tcp-keepalive.libsonnet'),
  'envoy.config.core.v3.TcpProtocolOptions': (import 'envoy.config.core.v3/tcp-protocol-options.libsonnet'),
  'envoy.config.core.v3.TrafficDirection': (import 'envoy.config.core.v3/traffic-direction.libsonnet'),
  'envoy.config.core.v3.TransportSocket': (import 'envoy.config.core.v3/transport-socket.libsonnet'),
  'envoy.config.core.v3.TypedExtensionConfig': (import 'envoy.config.core.v3/typed-extension-config.libsonnet'),
  'envoy.config.core.v3.UdpSocketConfig': (import 'envoy.config.core.v3/udp-socket-config.libsonnet'),
  'envoy.config.core.v3.UpstreamHttpProtocolOptions': (import 'envoy.config.core.v3/upstream-http-protocol-options.libsonnet'),
  'envoy.config.core.v3.WatchedDirectory': (import 'envoy.config.core.v3/watched-directory.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment': (import 'envoy.config.endpoint.v3/cluster-load-assignment.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment.NamedEndpointsEntry': (import 'envoy.config.endpoint.v3/cluster-load-assignment-named-endpoints-entry.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment.Policy': (import 'envoy.config.endpoint.v3/cluster-load-assignment-policy.libsonnet'),
  'envoy.config.endpoint.v3.ClusterLoadAssignment.Policy.DropOverload': (import 'envoy.config.endpoint.v3/cluster-load-assignment-policy-drop-overload.libsonnet'),
  'envoy.config.endpoint.v3.Endpoint': (import 'envoy.config.endpoint.v3/endpoint.libsonnet'),
  'envoy.config.endpoint.v3.Endpoint.HealthCheckConfig': (import 'envoy.config.endpoint.v3/endpoint-health-check-config.libsonnet'),
  'envoy.config.endpoint.v3.LbEndpoint': (import 'envoy.config.endpoint.v3/lb-endpoint.libsonnet'),
  'envoy.config.endpoint.v3.LedsClusterLocalityConfig': (import 'envoy.config.endpoint.v3/leds-cluster-locality-config.libsonnet'),
  'envoy.config.endpoint.v3.LocalityLbEndpoints': (import 'envoy.config.endpoint.v3/locality-lb-endpoints.libsonnet'),
  'envoy.config.endpoint.v3.LocalityLbEndpoints.LbEndpointList': (import 'envoy.config.endpoint.v3/locality-lb-endpoints-lb-endpoint-list.libsonnet'),
  'envoy.config.listener.v3.ActiveRawUdpListenerConfig': (import 'envoy.config.listener.v3/active-raw-udp-listener-config.libsonnet'),
  'envoy.config.listener.v3.AdditionalAddress': (import 'envoy.config.listener.v3/additional-address.libsonnet'),
  'envoy.config.listener.v3.ApiListener': (import 'envoy.config.listener.v3/api-listener.libsonnet'),
  'envoy.config.listener.v3.Filter': (import 'envoy.config.listener.v3/filter.libsonnet'),
  'envoy.config.listener.v3.FilterChain': (import 'envoy.config.listener.v3/filter-chain.libsonnet'),
  'envoy.config.listener.v3.FilterChain.OnDemandConfiguration': (import 'envoy.config.listener.v3/filter-chain-on-demand-configuration.libsonnet'),
  'envoy.config.listener.v3.FilterChainMatch': (import 'envoy.config.listener.v3/filter-chain-match.libsonnet'),
  'envoy.config.listener.v3.FilterChainMatch.ConnectionSourceType': (import 'envoy.config.listener.v3/filter-chain-match-connection-source-type.libsonnet'),
  'envoy.config.listener.v3.Listener': (import 'envoy.config.listener.v3/listener.libsonnet'),
  'envoy.config.listener.v3.Listener.ConnectionBalanceConfig': (import 'envoy.config.listener.v3/listener-connection-balance-config.libsonnet'),
  'envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance': (import 'envoy.config.listener.v3/listener-connection-balance-config-exact-balance.libsonnet'),
  'envoy.config.listener.v3.Listener.DeprecatedV1': (import 'envoy.config.listener.v3/listener-deprecated-v-1.libsonnet'),
  'envoy.config.listener.v3.Listener.DrainType': (import 'envoy.config.listener.v3/listener-drain-type.libsonnet'),
  'envoy.config.listener.v3.Listener.InternalListenerConfig': (import 'envoy.config.listener.v3/listener-internal-listener-config.libsonnet'),
  'envoy.config.listener.v3.ListenerCollection': (import 'envoy.config.listener.v3/listener-collection.libsonnet'),
  'envoy.config.listener.v3.ListenerFilter': (import 'envoy.config.listener.v3/listener-filter.libsonnet'),
  'envoy.config.listener.v3.ListenerFilterChainMatchPredicate': (import 'envoy.config.listener.v3/listener-filter-chain-match-predicate.libsonnet'),
  'envoy.config.listener.v3.ListenerFilterChainMatchPredicate.MatchSet': (import 'envoy.config.listener.v3/listener-filter-chain-match-predicate-match-set.libsonnet'),
  'envoy.config.listener.v3.QuicProtocolOptions': (import 'envoy.config.listener.v3/quic-protocol-options.libsonnet'),
  'envoy.config.listener.v3.UdpListenerConfig': (import 'envoy.config.listener.v3/udp-listener-config.libsonnet'),
  'envoy.config.metrics.v3.DogStatsdSink': (import 'envoy.config.metrics.v3/dog-statsd-sink.libsonnet'),
  'envoy.config.metrics.v3.HistogramBucketSettings': (import 'envoy.config.metrics.v3/histogram-bucket-settings.libsonnet'),
  'envoy.config.metrics.v3.HystrixSink': (import 'envoy.config.metrics.v3/hystrix-sink.libsonnet'),
  'envoy.config.metrics.v3.StatsConfig': (import 'envoy.config.metrics.v3/stats-config.libsonnet'),
  'envoy.config.metrics.v3.StatsMatcher': (import 'envoy.config.metrics.v3/stats-matcher.libsonnet'),
  'envoy.config.metrics.v3.StatsSink': (import 'envoy.config.metrics.v3/stats-sink.libsonnet'),
  'envoy.config.metrics.v3.StatsdSink': (import 'envoy.config.metrics.v3/statsd-sink.libsonnet'),
  'envoy.config.metrics.v3.TagSpecifier': (import 'envoy.config.metrics.v3/tag-specifier.libsonnet'),
  'envoy.config.overload.v3.BufferFactoryConfig': (import 'envoy.config.overload.v3/buffer-factory-config.libsonnet'),
  'envoy.config.overload.v3.OverloadAction': (import 'envoy.config.overload.v3/overload-action.libsonnet'),
  'envoy.config.overload.v3.OverloadManager': (import 'envoy.config.overload.v3/overload-manager.libsonnet'),
  'envoy.config.overload.v3.ResourceMonitor': (import 'envoy.config.overload.v3/resource-monitor.libsonnet'),
  'envoy.config.overload.v3.ScaleTimersOverloadActionConfig': (import 'envoy.config.overload.v3/scale-timers-overload-action-config.libsonnet'),
  'envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer': (import 'envoy.config.overload.v3/scale-timers-overload-action-config-scale-timer.libsonnet'),
  'envoy.config.overload.v3.ScaleTimersOverloadActionConfig.TimerType': (import 'envoy.config.overload.v3/scale-timers-overload-action-config-timer-type.libsonnet'),
  'envoy.config.overload.v3.ScaledTrigger': (import 'envoy.config.overload.v3/scaled-trigger.libsonnet'),
  'envoy.config.overload.v3.ThresholdTrigger': (import 'envoy.config.overload.v3/threshold-trigger.libsonnet'),
  'envoy.config.overload.v3.Trigger': (import 'envoy.config.overload.v3/trigger.libsonnet'),
  'envoy.config.route.v3.ClusterSpecifierPlugin': (import 'envoy.config.route.v3/cluster-specifier-plugin.libsonnet'),
  'envoy.config.route.v3.CorsPolicy': (import 'envoy.config.route.v3/cors-policy.libsonnet'),
  'envoy.config.route.v3.Decorator': (import 'envoy.config.route.v3/decorator.libsonnet'),
  'envoy.config.route.v3.DirectResponseAction': (import 'envoy.config.route.v3/direct-response-action.libsonnet'),
  'envoy.config.route.v3.FilterAction': (import 'envoy.config.route.v3/filter-action.libsonnet'),
  'envoy.config.route.v3.FilterConfig': (import 'envoy.config.route.v3/filter-config.libsonnet'),
  'envoy.config.route.v3.HeaderMatcher': (import 'envoy.config.route.v3/header-matcher.libsonnet'),
  'envoy.config.route.v3.HedgePolicy': (import 'envoy.config.route.v3/hedge-policy.libsonnet'),
  'envoy.config.route.v3.InternalRedirectPolicy': (import 'envoy.config.route.v3/internal-redirect-policy.libsonnet'),
  'envoy.config.route.v3.NonForwardingAction': (import 'envoy.config.route.v3/non-forwarding-action.libsonnet'),
  'envoy.config.route.v3.QueryParameterMatcher': (import 'envoy.config.route.v3/query-parameter-matcher.libsonnet'),
  'envoy.config.route.v3.RateLimit': (import 'envoy.config.route.v3/rate-limit.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action': (import 'envoy.config.route.v3/rate-limit-action.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.DestinationCluster': (import 'envoy.config.route.v3/rate-limit-action-destination-cluster.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.DynamicMetaData': (import 'envoy.config.route.v3/rate-limit-action-dynamic-meta-data.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.GenericKey': (import 'envoy.config.route.v3/rate-limit-action-generic-key.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.HeaderValueMatch': (import 'envoy.config.route.v3/rate-limit-action-header-value-match.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.MaskedRemoteAddress': (import 'envoy.config.route.v3/rate-limit-action-masked-remote-address.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.MetaData': (import 'envoy.config.route.v3/rate-limit-action-meta-data.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.MetaData.Source': (import 'envoy.config.route.v3/rate-limit-action-meta-data-source.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.QueryParameterValueMatch': (import 'envoy.config.route.v3/rate-limit-action-query-parameter-value-match.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.RemoteAddress': (import 'envoy.config.route.v3/rate-limit-action-remote-address.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.RequestHeaders': (import 'envoy.config.route.v3/rate-limit-action-request-headers.libsonnet'),
  'envoy.config.route.v3.RateLimit.Action.SourceCluster': (import 'envoy.config.route.v3/rate-limit-action-source-cluster.libsonnet'),
  'envoy.config.route.v3.RateLimit.Override': (import 'envoy.config.route.v3/rate-limit-override.libsonnet'),
  'envoy.config.route.v3.RateLimit.Override.DynamicMetadata': (import 'envoy.config.route.v3/rate-limit-override-dynamic-metadata.libsonnet'),
  'envoy.config.route.v3.RedirectAction': (import 'envoy.config.route.v3/redirect-action.libsonnet'),
  'envoy.config.route.v3.RedirectAction.RedirectResponseCode': (import 'envoy.config.route.v3/redirect-action-redirect-response-code.libsonnet'),
  'envoy.config.route.v3.RetryPolicy': (import 'envoy.config.route.v3/retry-policy.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RateLimitedRetryBackOff': (import 'envoy.config.route.v3/retry-policy-rate-limited-retry-back-off.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.ResetHeader': (import 'envoy.config.route.v3/retry-policy-reset-header.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.ResetHeaderFormat': (import 'envoy.config.route.v3/retry-policy-reset-header-format.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RetryBackOff': (import 'envoy.config.route.v3/retry-policy-retry-back-off.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RetryHostPredicate': (import 'envoy.config.route.v3/retry-policy-retry-host-predicate.libsonnet'),
  'envoy.config.route.v3.RetryPolicy.RetryPriority': (import 'envoy.config.route.v3/retry-policy-retry-priority.libsonnet'),
  'envoy.config.route.v3.Route': (import 'envoy.config.route.v3/route.libsonnet'),
  'envoy.config.route.v3.Route.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/route-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.route.v3.RouteAction': (import 'envoy.config.route.v3/route-action.libsonnet'),
  'envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode': (import 'envoy.config.route.v3/route-action-cluster-not-found-response-code.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy': (import 'envoy.config.route.v3/route-action-hash-policy.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties': (import 'envoy.config.route.v3/route-action-hash-policy-connection-properties.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.Cookie': (import 'envoy.config.route.v3/route-action-hash-policy-cookie.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.FilterState': (import 'envoy.config.route.v3/route-action-hash-policy-filter-state.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.Header': (import 'envoy.config.route.v3/route-action-hash-policy-header.libsonnet'),
  'envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter': (import 'envoy.config.route.v3/route-action-hash-policy-query-parameter.libsonnet'),
  'envoy.config.route.v3.RouteAction.InternalRedirectAction': (import 'envoy.config.route.v3/route-action-internal-redirect-action.libsonnet'),
  'envoy.config.route.v3.RouteAction.MaxStreamDuration': (import 'envoy.config.route.v3/route-action-max-stream-duration.libsonnet'),
  'envoy.config.route.v3.RouteAction.RequestMirrorPolicy': (import 'envoy.config.route.v3/route-action-request-mirror-policy.libsonnet'),
  'envoy.config.route.v3.RouteAction.UpgradeConfig': (import 'envoy.config.route.v3/route-action-upgrade-config.libsonnet'),
  'envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig': (import 'envoy.config.route.v3/route-action-upgrade-config-connect-config.libsonnet'),
  'envoy.config.route.v3.RouteList': (import 'envoy.config.route.v3/route-list.libsonnet'),
  'envoy.config.route.v3.RouteMatch': (import 'envoy.config.route.v3/route-match.libsonnet'),
  'envoy.config.route.v3.RouteMatch.ConnectMatcher': (import 'envoy.config.route.v3/route-match-connect-matcher.libsonnet'),
  'envoy.config.route.v3.RouteMatch.GrpcRouteMatchOptions': (import 'envoy.config.route.v3/route-match-grpc-route-match-options.libsonnet'),
  'envoy.config.route.v3.RouteMatch.TlsContextMatchOptions': (import 'envoy.config.route.v3/route-match-tls-context-match-options.libsonnet'),
  'envoy.config.route.v3.Tracing': (import 'envoy.config.route.v3/tracing.libsonnet'),
  'envoy.config.route.v3.VirtualCluster': (import 'envoy.config.route.v3/virtual-cluster.libsonnet'),
  'envoy.config.route.v3.VirtualHost': (import 'envoy.config.route.v3/virtual-host.libsonnet'),
  'envoy.config.route.v3.VirtualHost.TlsRequirementType': (import 'envoy.config.route.v3/virtual-host-tls-requirement-type.libsonnet'),
  'envoy.config.route.v3.VirtualHost.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/virtual-host-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.route.v3.WeightedCluster': (import 'envoy.config.route.v3/weighted-cluster.libsonnet'),
  'envoy.config.route.v3.WeightedCluster.ClusterWeight': (import 'envoy.config.route.v3/weighted-cluster-cluster-weight.libsonnet'),
  'envoy.config.route.v3.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntry': (import 'envoy.config.route.v3/weighted-cluster-cluster-weight-typed-per-filter-config-entry.libsonnet'),
  'envoy.config.trace.v3.Tracing': (import 'envoy.config.trace.v3/tracing.libsonnet'),
  'envoy.config.trace.v3.Tracing.Http': (import 'envoy.config.trace.v3/tracing-http.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CertificateProviderPluginInstance': (import 'envoy.extensions.transport_sockets.tls.v3/certificate-provider-plugin-instance.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext': (import 'envoy.extensions.transport_sockets.tls.v3/certificate-validation-context.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.CertificateValidationContext.TrustChainVerification': (import 'envoy.extensions.transport_sockets.tls.v3/certificate-validation-context-trust-chain-verification.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.GenericSecret': (import 'envoy.extensions.transport_sockets.tls.v3/generic-secret.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.PrivateKeyProvider': (import 'envoy.extensions.transport_sockets.tls.v3/private-key-provider.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig': (import 'envoy.extensions.transport_sockets.tls.v3/sds-secret-config.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.Secret': (import 'envoy.extensions.transport_sockets.tls.v3/secret.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher': (import 'envoy.extensions.transport_sockets.tls.v3/subject-alt-name-matcher.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher.SanType': (import 'envoy.extensions.transport_sockets.tls.v3/subject-alt-name-matcher-san-type.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsCertificate': (import 'envoy.extensions.transport_sockets.tls.v3/tls-certificate.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsParameters': (import 'envoy.extensions.transport_sockets.tls.v3/tls-parameters.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsParameters.TlsProtocol': (import 'envoy.extensions.transport_sockets.tls.v3/tls-parameters-tls-protocol.libsonnet'),
  'envoy.extensions.transport_sockets.tls.v3.TlsSessionTicketKeys': (import 'envoy.extensions.transport_sockets.tls.v3/tls-session-ticket-keys.libsonnet'),
  'envoy.type.matcher.v3.DoubleMatcher': (import 'envoy.type.matcher.v3/double-matcher.libsonnet'),
  'envoy.type.matcher.v3.ListMatcher': (import 'envoy.type.matcher.v3/list-matcher.libsonnet'),
  'envoy.type.matcher.v3.ListStringMatcher': (import 'envoy.type.matcher.v3/list-string-matcher.libsonnet'),
  'envoy.type.matcher.v3.MetadataMatcher': (import 'envoy.type.matcher.v3/metadata-matcher.libsonnet'),
  'envoy.type.matcher.v3.MetadataMatcher.PathSegment': (import 'envoy.type.matcher.v3/metadata-matcher-path-segment.libsonnet'),
  'envoy.type.matcher.v3.RegexMatchAndSubstitute': (import 'envoy.type.matcher.v3/regex-match-and-substitute.libsonnet'),
  'envoy.type.matcher.v3.RegexMatcher': (import 'envoy.type.matcher.v3/regex-matcher.libsonnet'),
  'envoy.type.matcher.v3.RegexMatcher.GoogleRE2': (import 'envoy.type.matcher.v3/regex-matcher-google-re-2.libsonnet'),
  'envoy.type.matcher.v3.StringMatcher': (import 'envoy.type.matcher.v3/string-matcher.libsonnet'),
  'envoy.type.matcher.v3.ValueMatcher': (import 'envoy.type.matcher.v3/value-matcher.libsonnet'),
  'envoy.type.matcher.v3.ValueMatcher.NullMatch': (import 'envoy.type.matcher.v3/value-matcher-null-match.libsonnet'),
  'envoy.type.metadata.v3.MetadataKey': (import 'envoy.type.metadata.v3/metadata-key.libsonnet'),
  'envoy.type.metadata.v3.MetadataKey.PathSegment': (import 'envoy.type.metadata.v3/metadata-key-path-segment.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind': (import 'envoy.type.metadata.v3/metadata-kind.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Cluster': (import 'envoy.type.metadata.v3/metadata-kind-cluster.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Host': (import 'envoy.type.metadata.v3/metadata-kind-host.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Request': (import 'envoy.type.metadata.v3/metadata-kind-request.libsonnet'),
  'envoy.type.metadata.v3.MetadataKind.Route': (import 'envoy.type.metadata.v3/metadata-kind-route.libsonnet'),
  'envoy.type.tracing.v3.CustomTag': (import 'envoy.type.tracing.v3/custom-tag.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Environment': (import 'envoy.type.tracing.v3/custom-tag-environment.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Header': (import 'envoy.type.tracing.v3/custom-tag-header.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Literal': (import 'envoy.type.tracing.v3/custom-tag-literal.libsonnet'),
  'envoy.type.tracing.v3.CustomTag.Metadata': (import 'envoy.type.tracing.v3/custom-tag-metadata.libsonnet'),
  'envoy.type.v3.CodecClientType': (import 'envoy.type.v3/codec-client-type.libsonnet'),
  'envoy.type.v3.DoubleRange': (import 'envoy.type.v3/double-range.libsonnet'),
  'envoy.type.v3.FractionalPercent': (import 'envoy.type.v3/fractional-percent.libsonnet'),
  'envoy.type.v3.FractionalPercent.DenominatorType': (import 'envoy.type.v3/fractional-percent-denominator-type.libsonnet'),
  'envoy.type.v3.Int32Range': (import 'envoy.type.v3/int-32-range.libsonnet'),
  'envoy.type.v3.Int64Range': (import 'envoy.type.v3/int-64-range.libsonnet'),
  'envoy.type.v3.Percent': (import 'envoy.type.v3/percent.libsonnet'),
  'envoy.type.v3.SemanticVersion': (import 'envoy.type.v3/semantic-version.libsonnet'),
  'google.protobuf.Any': (import 'google.protobuf/any.libsonnet'),
  'google.protobuf.BoolValue': (import 'google.protobuf/bool-value.libsonnet'),
  'google.protobuf.BytesValue': (import 'google.protobuf/bytes-value.libsonnet'),
  'google.protobuf.DescriptorProto': (import 'google.protobuf/descriptor-proto.libsonnet'),
  'google.protobuf.DescriptorProto.ExtensionRange': (import 'google.protobuf/descriptor-proto-extension-range.libsonnet'),
  'google.protobuf.DescriptorProto.ReservedRange': (import 'google.protobuf/descriptor-proto-reserved-range.libsonnet'),
  'google.protobuf.DoubleValue': (import 'google.protobuf/double-value.libsonnet'),
  'google.protobuf.Duration': (import 'google.protobuf/duration.libsonnet'),
  'google.protobuf.Empty': (import 'google.protobuf/empty.libsonnet'),
  'google.protobuf.EnumDescriptorProto': (import 'google.protobuf/enum-descriptor-proto.libsonnet'),
  'google.protobuf.EnumDescriptorProto.EnumReservedRange': (import 'google.protobuf/enum-descriptor-proto-enum-reserved-range.libsonnet'),
  'google.protobuf.EnumOptions': (import 'google.protobuf/enum-options.libsonnet'),
  'google.protobuf.EnumValueDescriptorProto': (import 'google.protobuf/enum-value-descriptor-proto.libsonnet'),
  'google.protobuf.EnumValueOptions': (import 'google.protobuf/enum-value-options.libsonnet'),
  'google.protobuf.ExtensionRangeOptions': (import 'google.protobuf/extension-range-options.libsonnet'),
  'google.protobuf.FieldDescriptorProto': (import 'google.protobuf/field-descriptor-proto.libsonnet'),
  'google.protobuf.FieldDescriptorProto.Label': (import 'google.protobuf/field-descriptor-proto-label.libsonnet'),
  'google.protobuf.FieldDescriptorProto.Type': (import 'google.protobuf/field-descriptor-proto-type.libsonnet'),
  'google.protobuf.FieldOptions': (import 'google.protobuf/field-options.libsonnet'),
  'google.protobuf.FieldOptions.CType': (import 'google.protobuf/field-options-c-type.libsonnet'),
  'google.protobuf.FieldOptions.JSType': (import 'google.protobuf/field-options-js-type.libsonnet'),
  'google.protobuf.FileDescriptorProto': (import 'google.protobuf/file-descriptor-proto.libsonnet'),
  'google.protobuf.FileDescriptorSet': (import 'google.protobuf/file-descriptor-set.libsonnet'),
  'google.protobuf.FileOptions': (import 'google.protobuf/file-options.libsonnet'),
  'google.protobuf.FileOptions.OptimizeMode': (import 'google.protobuf/file-options-optimize-mode.libsonnet'),
  'google.protobuf.FloatValue': (import 'google.protobuf/float-value.libsonnet'),
  'google.protobuf.GeneratedCodeInfo': (import 'google.protobuf/generated-code-info.libsonnet'),
  'google.protobuf.GeneratedCodeInfo.Annotation': (import 'google.protobuf/generated-code-info-annotation.libsonnet'),
  'google.protobuf.Int32Value': (import 'google.protobuf/int-32-value.libsonnet'),
  'google.protobuf.Int64Value': (import 'google.protobuf/int-64-value.libsonnet'),
  'google.protobuf.ListValue': (import 'google.protobuf/list-value.libsonnet'),
  'google.protobuf.MessageOptions': (import 'google.protobuf/message-options.libsonnet'),
  'google.protobuf.MethodDescriptorProto': (import 'google.protobuf/method-descriptor-proto.libsonnet'),
  'google.protobuf.MethodOptions': (import 'google.protobuf/method-options.libsonnet'),
  'google.protobuf.MethodOptions.IdempotencyLevel': (import 'google.protobuf/method-options-idempotency-level.libsonnet'),
  'google.protobuf.NullValue': (import 'google.protobuf/null-value.libsonnet'),
  'google.protobuf.OneofDescriptorProto': (import 'google.protobuf/oneof-descriptor-proto.libsonnet'),
  'google.protobuf.OneofOptions': (import 'google.protobuf/oneof-options.libsonnet'),
  'google.protobuf.ServiceDescriptorProto': (import 'google.protobuf/service-descriptor-proto.libsonnet'),
  'google.protobuf.ServiceOptions': (import 'google.protobuf/service-options.libsonnet'),
  'google.protobuf.SourceCodeInfo': (import 'google.protobuf/source-code-info.libsonnet'),
  'google.protobuf.SourceCodeInfo.Location': (import 'google.protobuf/source-code-info-location.libsonnet'),
  'google.protobuf.StringValue': (import 'google.protobuf/string-value.libsonnet'),
  'google.protobuf.Struct': (import 'google.protobuf/struct.libsonnet'),
  'google.protobuf.Struct.FieldsEntry': (import 'google.protobuf/struct-fields-entry.libsonnet'),
  'google.protobuf.Timestamp': (import 'google.protobuf/timestamp.libsonnet'),
  'google.protobuf.UInt32Value': (import 'google.protobuf/u-int-32-value.libsonnet'),
  'google.protobuf.UInt64Value': (import 'google.protobuf/u-int-64-value.libsonnet'),
  'google.protobuf.UninterpretedOption': (import 'google.protobuf/uninterpreted-option.libsonnet'),
  'google.protobuf.UninterpretedOption.NamePart': (import 'google.protobuf/uninterpreted-option-name-part.libsonnet'),
  'google.protobuf.Value': (import 'google.protobuf/value.libsonnet'),
  'udpa.annotations.FieldMigrateAnnotation': (import 'udpa.annotations/field-migrate-annotation.libsonnet'),
  'udpa.annotations.FieldSecurityAnnotation': (import 'udpa.annotations/field-security-annotation.libsonnet'),
  'udpa.annotations.FileMigrateAnnotation': (import 'udpa.annotations/file-migrate-annotation.libsonnet'),
  'udpa.annotations.MigrateAnnotation': (import 'udpa.annotations/migrate-annotation.libsonnet'),
  'udpa.annotations.PackageVersionStatus': (import 'udpa.annotations/package-version-status.libsonnet'),
  'udpa.annotations.StatusAnnotation': (import 'udpa.annotations/status-annotation.libsonnet'),
  'udpa.annotations.VersioningAnnotation': (import 'udpa.annotations/versioning-annotation.libsonnet'),
  'validate.AnyRules': (import 'validate/any-rules.libsonnet'),
  'validate.BoolRules': (import 'validate/bool-rules.libsonnet'),
  'validate.BytesRules': (import 'validate/bytes-rules.libsonnet'),
  'validate.DoubleRules': (import 'validate/double-rules.libsonnet'),
  'validate.DurationRules': (import 'validate/duration-rules.libsonnet'),
  'validate.EnumRules': (import 'validate/enum-rules.libsonnet'),
  'validate.FieldRules': (import 'validate/field-rules.libsonnet'),
  'validate.Fixed32Rules': (import 'validate/fixed-32-rules.libsonnet'),
  'validate.Fixed64Rules': (import 'validate/fixed-64-rules.libsonnet'),
  'validate.FloatRules': (import 'validate/float-rules.libsonnet'),
  'validate.Int32Rules': (import 'validate/int-32-rules.libsonnet'),
  'validate.Int64Rules': (import 'validate/int-64-rules.libsonnet'),
  'validate.KnownRegex': (import 'validate/known-regex.libsonnet'),
  'validate.MapRules': (import 'validate/map-rules.libsonnet'),
  'validate.MessageRules': (import 'validate/message-rules.libsonnet'),
  'validate.RepeatedRules': (import 'validate/repeated-rules.libsonnet'),
  'validate.SFixed32Rules': (import 'validate/s-fixed-32-rules.libsonnet'),
  'validate.SFixed64Rules': (import 'validate/s-fixed-64-rules.libsonnet'),
  'validate.SInt32Rules': (import 'validate/s-int-32-rules.libsonnet'),
  'validate.SInt64Rules': (import 'validate/s-int-64-rules.libsonnet'),
  'validate.StringRules': (import 'validate/string-rules.libsonnet'),
  'validate.TimestampRules': (import 'validate/timestamp-rules.libsonnet'),
  'validate.UInt32Rules': (import 'validate/u-int-32-rules.libsonnet'),
  'validate.UInt64Rules': (import 'validate/u-int-64-rules.libsonnet'),
  'xds.annotations.v3.FieldStatusAnnotation': (import 'xds.annotations.v3/field-status-annotation.libsonnet'),
  'xds.annotations.v3.FileStatusAnnotation': (import 'xds.annotations.v3/file-status-annotation.libsonnet'),
  'xds.annotations.v3.MessageStatusAnnotation': (import 'xds.annotations.v3/message-status-annotation.libsonnet'),
  'xds.annotations.v3.PackageVersionStatus': (import 'xds.annotations.v3/package-version-status.libsonnet'),
  'xds.annotations.v3.StatusAnnotation': (import 'xds.annotations.v3/status-annotation.libsonnet'),
  'xds.core.v3.Authority': (import 'xds.core.v3/authority.libsonnet'),
  'xds.core.v3.CollectionEntry': (import 'xds.core.v3/collection-entry.libsonnet'),
  'xds.core.v3.CollectionEntry.InlineEntry': (import 'xds.core.v3/collection-entry-inline-entry.libsonnet'),
  'xds.core.v3.ContextParams': (import 'xds.core.v3/context-params.libsonnet'),
  'xds.core.v3.ContextParams.ParamsEntry': (import 'xds.core.v3/context-params-params-entry.libsonnet'),
  'xds.core.v3.ResourceLocator': (import 'xds.core.v3/resource-locator.libsonnet'),
  'xds.core.v3.ResourceLocator.Directive': (import 'xds.core.v3/resource-locator-directive.libsonnet'),
  'xds.core.v3.ResourceLocator.Scheme': (import 'xds.core.v3/resource-locator-scheme.libsonnet'),
  'xds.core.v3.TypedExtensionConfig': (import 'xds.core.v3/typed-extension-config.libsonnet'),
  'xds.type.matcher.v3.ListStringMatcher': (import 'xds.type.matcher.v3/list-string-matcher.libsonnet'),
  'xds.type.matcher.v3.Matcher': (import 'xds.type.matcher.v3/matcher.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList': (import 'xds.type.matcher.v3/matcher-matcher-list.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.FieldMatcher': (import 'xds.type.matcher.v3/matcher-matcher-list-field-matcher.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.Predicate': (import 'xds.type.matcher.v3/matcher-matcher-list-predicate.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.Predicate.PredicateList': (import 'xds.type.matcher.v3/matcher-matcher-list-predicate-predicate-list.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherList.Predicate.SinglePredicate': (import 'xds.type.matcher.v3/matcher-matcher-list-predicate-single-predicate.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherTree': (import 'xds.type.matcher.v3/matcher-matcher-tree.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherTree.MatchMap': (import 'xds.type.matcher.v3/matcher-matcher-tree-match-map.libsonnet'),
  'xds.type.matcher.v3.Matcher.MatcherTree.MatchMap.MapEntry': (import 'xds.type.matcher.v3/matcher-matcher-tree-match-map-map-entry.libsonnet'),
  'xds.type.matcher.v3.Matcher.OnMatch': (import 'xds.type.matcher.v3/matcher-on-match.libsonnet'),
  'xds.type.matcher.v3.RegexMatcher': (import 'xds.type.matcher.v3/regex-matcher.libsonnet'),
  'xds.type.matcher.v3.RegexMatcher.GoogleRE2': (import 'xds.type.matcher.v3/regex-matcher-google-re-2.libsonnet'),
  'xds.type.matcher.v3.StringMatcher': (import 'xds.type.matcher.v3/string-matcher.libsonnet'),
}
