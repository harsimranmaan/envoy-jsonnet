// Message type: envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.ValueBuilder
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.ValueBuilder';
local generator = import '../generator.libsonnet';
local fields = {
  custom_value: {
    type: 'envoy.config.core.v3.TypedExtensionConfig',
    allowedNames: [
      'custom_value',
      'customValue',
    ],
  },
  string_value: {
    type: 'string',
    allowedNames: [
      'string_value',
      'stringValue',
    ],
  },
};
local oneOfs = [
  {
    fields: [
      'string_value',
      'custom_value',
    ],
    required: true,
    group: 'value_specifier',
  },
];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withCustomValue:: function(val) validator.validateField(self + { custom_value: val }, 'custom_value', type + '.withCustomValue'),
    withStringValue:: function(val) validator.validateField(self + { string_value: val }, 'string_value', type + '.withStringValue'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
