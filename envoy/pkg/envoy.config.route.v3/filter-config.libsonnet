// Message type: envoy.config.route.v3.FilterConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.route.v3.FilterConfig';
local generator = import '../generator.libsonnet';
local fields = {
  config: {
    type: 'google.protobuf.Any',
    allowedNames: [
      'config',
    ],
  },
  is_optional: {
    type: 'bool',
    allowedNames: [
      'is_optional',
      'isOptional',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withConfig:: function(val) validator.validateField(self + { config: val }, 'config', type + '.withConfig'),
    withIsOptional:: function(val) validator.validateField(self + { is_optional: val }, 'is_optional', type + '.withIsOptional'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
