// Message type: envoy.config.route.v3.RateLimit.Action.MaskedRemoteAddress
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.route.v3.RateLimit.Action.MaskedRemoteAddress';
local generator = import '../generator.libsonnet';
local fields = {
  v4_prefix_mask_len: {
    type: 'google.protobuf.UInt32Value',
    allowedNames: [
      'v4_prefix_mask_len',
      'v4PrefixMaskLen',
    ],
    constraints: {
      Uint32: {
        lte: 32,
      },
    },
  },
  v6_prefix_mask_len: {
    type: 'google.protobuf.UInt32Value',
    allowedNames: [
      'v6_prefix_mask_len',
      'v6PrefixMaskLen',
    ],
    constraints: {
      Uint32: {
        lte: 128,
      },
    },
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withV4PrefixMaskLen:: function(val) validator.validateField(self + { v4_prefix_mask_len: val }, 'v4_prefix_mask_len', type + '.withV4PrefixMaskLen'),
    withV6PrefixMaskLen:: function(val) validator.validateField(self + { v6_prefix_mask_len: val }, 'v6_prefix_mask_len', type + '.withV6PrefixMaskLen'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
