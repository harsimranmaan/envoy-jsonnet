// Message type: envoy.config.route.v3.RetryPolicy.RetryBackOff
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.route.v3.RetryPolicy.RetryBackOff';
local generator = import '../generator.libsonnet';
local fields = {
  base_interval: {
    type: 'google.protobuf.Duration',
    allowedNames: [
      'base_interval',
      'baseInterval',
    ],
    constraints: {
      Duration: {
        gt: {},
        required: true,
      },
    },
  },
  max_interval: {
    type: 'google.protobuf.Duration',
    allowedNames: [
      'max_interval',
      'maxInterval',
    ],
    constraints: {
      Duration: {
        gt: {},
      },
    },
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withBaseInterval:: function(val) validator.validateField(self + { base_interval: val }, 'base_interval', type + '.withBaseInterval'),
    withMaxInterval:: function(val) validator.validateField(self + { max_interval: val }, 'max_interval', type + '.withMaxInterval'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
