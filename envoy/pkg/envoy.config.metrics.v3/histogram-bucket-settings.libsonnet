// Message type: envoy.config.metrics.v3.HistogramBucketSettings
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.metrics.v3.HistogramBucketSettings';
local generator = import '../generator.libsonnet';
local fields = {
  buckets: {
    type: 'double',
    allowedNames: [
      'buckets',
    ],
    containerType: 'list',
    required: true,
    constraints: {
      Repeated: {
        items: {
          Type: {
            Double: {
              gt: 0,
            },
          },
        },
        min_items: 1,
        unique: true,
      },
    },
  },
  match: {
    type: 'envoy.type.matcher.v3.StringMatcher',
    allowedNames: [
      'match',
    ],
    required: true,
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withBuckets:: function(val) validator.validateField(self + { buckets: val }, 'buckets', type + '.withBuckets'),
    withMatch:: function(val) validator.validateField(self + { match: val }, 'match', type + '.withMatch'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
