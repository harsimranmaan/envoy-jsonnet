// Enum type: envoy.config.cluster.v3.Cluster.LbPolicy
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.
local type = 'envoy.config.cluster.v3.Cluster.LbPolicy';
local map = {
  CLUSTER_PROVIDED: 'CLUSTER_PROVIDED',
  LEAST_REQUEST: 'LEAST_REQUEST',
  LOAD_BALANCING_POLICY_CONFIG: 'LOAD_BALANCING_POLICY_CONFIG',
  MAGLEV: 'MAGLEV',
  RANDOM: 'RANDOM',
  RING_HASH: 'RING_HASH',
  ROUND_ROBIN: 'ROUND_ROBIN',
};

local reverseMap = {
  '0': 'ROUND_ROBIN',
  '1': 'LEAST_REQUEST',
  '2': 'RING_HASH',
  '3': 'RANDOM',
  '5': 'MAGLEV',
  '6': 'CLUSTER_PROVIDED',
  '7': 'LOAD_BALANCING_POLICY_CONFIG',
};

local validator = function(input, ctx='') (
  local context = if ctx == '' then type else ctx;
  local v = std.toString(input);
  if std.objectHas(map, v) || std.objectHas(reverseMap, v)
  then input
  else error '%s: invalid value %s for enum %s' % [context, v, type]
);

{
  definition: map {
    _new:: function(obj={}) error '%s: the _new method may not be used on enum types' % 'envoy.config.cluster.v3.Cluster.LbPolicy',
    _validate:: validator,
  },
  validator:: validator,
}
