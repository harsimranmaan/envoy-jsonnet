// Message type: envoy.config.cluster.v3.Cluster.EdsClusterConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.cluster.v3.Cluster.EdsClusterConfig';
local generator = import '../generator.libsonnet';
local fields = {
  eds_config: {
    type: 'envoy.config.core.v3.ConfigSource',
    allowedNames: [
      'eds_config',
      'edsConfig',
    ],
  },
  service_name: {
    type: 'string',
    allowedNames: [
      'service_name',
      'serviceName',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withEdsConfig:: function(val) validator.validateField(self + { eds_config: val }, 'eds_config', type + '.withEdsConfig'),
    withServiceName:: function(val) validator.validateField(self + { service_name: val }, 'service_name', type + '.withServiceName'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
