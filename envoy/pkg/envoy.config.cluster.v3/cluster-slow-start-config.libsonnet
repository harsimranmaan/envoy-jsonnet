// Message type: envoy.config.cluster.v3.Cluster.SlowStartConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.cluster.v3.Cluster.SlowStartConfig';
local generator = import '../generator.libsonnet';
local fields = {
  aggression: {
    type: 'envoy.config.core.v3.RuntimeDouble',
    allowedNames: [
      'aggression',
    ],
  },
  min_weight_percent: {
    type: 'envoy.type.v3.Percent',
    allowedNames: [
      'min_weight_percent',
      'minWeightPercent',
    ],
  },
  slow_start_window: {
    type: 'google.protobuf.Duration',
    allowedNames: [
      'slow_start_window',
      'slowStartWindow',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withAggression:: function(val) validator.validateField(self + { aggression: val }, 'aggression', type + '.withAggression'),
    withMinWeightPercent:: function(val) validator.validateField(self + { min_weight_percent: val }, 'min_weight_percent', type + '.withMinWeightPercent'),
    withSlowStartWindow:: function(val) validator.validateField(self + { slow_start_window: val }, 'slow_start_window', type + '.withSlowStartWindow'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
