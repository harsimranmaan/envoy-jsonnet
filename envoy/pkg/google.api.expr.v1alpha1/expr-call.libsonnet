// Message type: google.api.expr.v1alpha1.Expr.Call
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'google.api.expr.v1alpha1.Expr.Call';
local generator = import '../generator.libsonnet';
local fields = {
  args: {
    type: 'google.api.expr.v1alpha1.Expr',
    allowedNames: [
      'args',
    ],
    containerType: 'list',
  },
  'function': {
    type: 'string',
    allowedNames: [
      'function',
    ],
  },
  target: {
    type: 'google.api.expr.v1alpha1.Expr',
    allowedNames: [
      'target',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withArgs:: function(val) validator.validateField(self + { args: val }, 'args', type + '.withArgs'),
    withFunction:: function(val) validator.validateField(self + { 'function': val }, 'function', type + '.withFunction'),
    withTarget:: function(val) validator.validateField(self + { target: val }, 'target', type + '.withTarget'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
