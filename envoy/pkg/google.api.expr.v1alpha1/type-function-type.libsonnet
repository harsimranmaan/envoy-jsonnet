// Message type: google.api.expr.v1alpha1.Type.FunctionType
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'google.api.expr.v1alpha1.Type.FunctionType';
local generator = import '../generator.libsonnet';
local fields = {
  arg_types: {
    type: 'google.api.expr.v1alpha1.Type',
    allowedNames: [
      'arg_types',
      'argTypes',
    ],
    containerType: 'list',
  },
  result_type: {
    type: 'google.api.expr.v1alpha1.Type',
    allowedNames: [
      'result_type',
      'resultType',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withArgTypes:: function(val) validator.validateField(self + { arg_types: val }, 'arg_types', type + '.withArgTypes'),
    withResultType:: function(val) validator.validateField(self + { result_type: val }, 'result_type', type + '.withResultType'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
