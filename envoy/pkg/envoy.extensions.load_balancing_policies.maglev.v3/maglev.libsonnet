// Message type: envoy.extensions.load_balancing_policies.maglev.v3.Maglev
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.load_balancing_policies.maglev.v3.Maglev';
local generator = import '../generator.libsonnet';
local fields = {
  consistent_hashing_lb_config: {
    type: 'envoy.extensions.load_balancing_policies.common.v3.ConsistentHashingLbConfig',
    allowedNames: [
      'consistent_hashing_lb_config',
      'consistentHashingLbConfig',
    ],
  },
  table_size: {
    type: 'google.protobuf.UInt64Value',
    allowedNames: [
      'table_size',
      'tableSize',
    ],
    constraints: {
      Uint64: {
        lte: 5000011,
      },
    },
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withConsistentHashingLbConfig:: function(val) validator.validateField(self + { consistent_hashing_lb_config: val }, 'consistent_hashing_lb_config', type + '.withConsistentHashingLbConfig'),
    withTableSize:: function(val) validator.validateField(self + { table_size: val }, 'table_size', type + '.withTableSize'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
