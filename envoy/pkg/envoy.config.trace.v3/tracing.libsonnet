// Message type: envoy.config.trace.v3.Tracing
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.config.trace.v3.Tracing';
local generator = import '../generator.libsonnet';
local fields = {
  http: {
    type: 'envoy.config.trace.v3.Tracing.Http',
    allowedNames: [
      'http',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {
    Http:: (import 'tracing-http.libsonnet').definition,

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withHttp:: function(val) validator.validateField(self + { http: val }, 'http', type + '.withHttp'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
