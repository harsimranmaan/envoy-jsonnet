// Message type: envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig';
local generator = import '../generator.libsonnet';
local fields = {
  dns_cache_config: {
    type: 'envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig',
    allowedNames: [
      'dns_cache_config',
      'dnsCacheConfig',
    ],
    required: true,
  },
  save_upstream_address: {
    type: 'bool',
    allowedNames: [
      'save_upstream_address',
      'saveUpstreamAddress',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withDnsCacheConfig:: function(val) validator.validateField(self + { dns_cache_config: val }, 'dns_cache_config', type + '.withDnsCacheConfig'),
    withSaveUpstreamAddress:: function(val) validator.validateField(self + { save_upstream_address: val }, 'save_upstream_address', type + '.withSaveUpstreamAddress'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
