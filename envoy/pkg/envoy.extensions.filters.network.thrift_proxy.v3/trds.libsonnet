// Message type: envoy.extensions.filters.network.thrift_proxy.v3.Trds
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.

local type = 'envoy.extensions.filters.network.thrift_proxy.v3.Trds';
local generator = import '../generator.libsonnet';
local fields = {
  config_source: {
    type: 'envoy.config.core.v3.ConfigSource',
    allowedNames: [
      'config_source',
      'configSource',
    ],
    required: true,
  },
  route_config_name: {
    type: 'string',
    allowedNames: [
      'route_config_name',
      'routeConfigName',
    ],
  },
};
local oneOfs = [];
local validator = generator(type, fields, oneOfs);

{
  definition: {

    // methods
    _new:: function(partialObject={}) (
      local obj = if std.type(partialObject) != 'object' then error 'expected object for _new invocation of %s' % type else partialObject;
      validator.validatePartial(obj + self)
    ),
    _validate:: function() validator.validateAll(self),
    _normalize:: function(kind='') validator.normalizeAll(self, kind),
    withConfigSource:: function(val) validator.validateField(self + { config_source: val }, 'config_source', type + '.withConfigSource'),
    withRouteConfigName:: function(val) validator.validateField(self + { route_config_name: val }, 'route_config_name', type + '.withRouteConfigName'),
  },
  validator:: validator.validateAll,
  normalizer: validator.normalizeAll,
}
