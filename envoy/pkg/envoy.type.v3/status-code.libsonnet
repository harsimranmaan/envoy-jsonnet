// Enum type: envoy.type.v3.StatusCode
// Definition generated by protoc-gen-jsonnet. DO NOT EDIT.
local type = 'envoy.type.v3.StatusCode';
local map = {
  Accepted: 'Accepted',
  AlreadyReported: 'AlreadyReported',
  BadGateway: 'BadGateway',
  BadRequest: 'BadRequest',
  Conflict: 'Conflict',
  Continue: 'Continue',
  Created: 'Created',
  Empty: 'Empty',
  ExpectationFailed: 'ExpectationFailed',
  FailedDependency: 'FailedDependency',
  Forbidden: 'Forbidden',
  Found: 'Found',
  GatewayTimeout: 'GatewayTimeout',
  Gone: 'Gone',
  HTTPVersionNotSupported: 'HTTPVersionNotSupported',
  IMUsed: 'IMUsed',
  InsufficientStorage: 'InsufficientStorage',
  InternalServerError: 'InternalServerError',
  LengthRequired: 'LengthRequired',
  Locked: 'Locked',
  LoopDetected: 'LoopDetected',
  MethodNotAllowed: 'MethodNotAllowed',
  MisdirectedRequest: 'MisdirectedRequest',
  MovedPermanently: 'MovedPermanently',
  MultiStatus: 'MultiStatus',
  MultipleChoices: 'MultipleChoices',
  NetworkAuthenticationRequired: 'NetworkAuthenticationRequired',
  NoContent: 'NoContent',
  NonAuthoritativeInformation: 'NonAuthoritativeInformation',
  NotAcceptable: 'NotAcceptable',
  NotExtended: 'NotExtended',
  NotFound: 'NotFound',
  NotImplemented: 'NotImplemented',
  NotModified: 'NotModified',
  OK: 'OK',
  PartialContent: 'PartialContent',
  PayloadTooLarge: 'PayloadTooLarge',
  PaymentRequired: 'PaymentRequired',
  PermanentRedirect: 'PermanentRedirect',
  PreconditionFailed: 'PreconditionFailed',
  PreconditionRequired: 'PreconditionRequired',
  ProxyAuthenticationRequired: 'ProxyAuthenticationRequired',
  RangeNotSatisfiable: 'RangeNotSatisfiable',
  RequestHeaderFieldsTooLarge: 'RequestHeaderFieldsTooLarge',
  RequestTimeout: 'RequestTimeout',
  ResetContent: 'ResetContent',
  SeeOther: 'SeeOther',
  ServiceUnavailable: 'ServiceUnavailable',
  TemporaryRedirect: 'TemporaryRedirect',
  TooManyRequests: 'TooManyRequests',
  URITooLong: 'URITooLong',
  Unauthorized: 'Unauthorized',
  UnprocessableEntity: 'UnprocessableEntity',
  UnsupportedMediaType: 'UnsupportedMediaType',
  UpgradeRequired: 'UpgradeRequired',
  UseProxy: 'UseProxy',
  VariantAlsoNegotiates: 'VariantAlsoNegotiates',
};

local reverseMap = {
  '0': 'Empty',
  '100': 'Continue',
  '200': 'OK',
  '201': 'Created',
  '202': 'Accepted',
  '203': 'NonAuthoritativeInformation',
  '204': 'NoContent',
  '205': 'ResetContent',
  '206': 'PartialContent',
  '207': 'MultiStatus',
  '208': 'AlreadyReported',
  '226': 'IMUsed',
  '300': 'MultipleChoices',
  '301': 'MovedPermanently',
  '302': 'Found',
  '303': 'SeeOther',
  '304': 'NotModified',
  '305': 'UseProxy',
  '307': 'TemporaryRedirect',
  '308': 'PermanentRedirect',
  '400': 'BadRequest',
  '401': 'Unauthorized',
  '402': 'PaymentRequired',
  '403': 'Forbidden',
  '404': 'NotFound',
  '405': 'MethodNotAllowed',
  '406': 'NotAcceptable',
  '407': 'ProxyAuthenticationRequired',
  '408': 'RequestTimeout',
  '409': 'Conflict',
  '410': 'Gone',
  '411': 'LengthRequired',
  '412': 'PreconditionFailed',
  '413': 'PayloadTooLarge',
  '414': 'URITooLong',
  '415': 'UnsupportedMediaType',
  '416': 'RangeNotSatisfiable',
  '417': 'ExpectationFailed',
  '421': 'MisdirectedRequest',
  '422': 'UnprocessableEntity',
  '423': 'Locked',
  '424': 'FailedDependency',
  '426': 'UpgradeRequired',
  '428': 'PreconditionRequired',
  '429': 'TooManyRequests',
  '431': 'RequestHeaderFieldsTooLarge',
  '500': 'InternalServerError',
  '501': 'NotImplemented',
  '502': 'BadGateway',
  '503': 'ServiceUnavailable',
  '504': 'GatewayTimeout',
  '505': 'HTTPVersionNotSupported',
  '506': 'VariantAlsoNegotiates',
  '507': 'InsufficientStorage',
  '508': 'LoopDetected',
  '510': 'NotExtended',
  '511': 'NetworkAuthenticationRequired',
};

local validator = function(input, ctx='') (
  local context = if ctx == '' then type else ctx;
  local v = std.toString(input);
  if std.objectHas(map, v) || std.objectHas(reverseMap, v)
  then input
  else error '%s: invalid value %s for enum %s' % [context, v, type]
);

{
  definition: map {
    _new:: function(obj={}) error '%s: the _new method may not be used on enum types' % 'envoy.type.v3.StatusCode',
    _validate:: validator,
  },
  validator:: validator,
}
